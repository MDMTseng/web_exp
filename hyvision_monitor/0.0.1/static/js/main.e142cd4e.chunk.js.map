{"version":3,"sources":["logo.svg","UTIL/MISC_Util.js","UTIL/DB_Query.js","UTIL/BPG_Protocol.js","AnalysisUI.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","datePrintSimple","date","addZero","i","mm","getMonth","dd","getDate","h","getHours","m","getMinutes","s","getSeconds","getFullYear","join","GetObjElement","rootObj","keyTrace","traceIdxTo","length","obj","traceIdxTLen","undefined","key","db_url","defFileQuery","name","featureSet_sha1","projection","url","JSON","stringify","defFileQueryStr","Promise","res","rej","jsonp","err","data","console","log","inspectionQuery","subFeatureDefSha1","date_start","date_end","limit","sample","prjection","agg","TYPE","INSPECTION_STATUS","TextEncoder","NA","SUCCESS","FAILURE","CheckableTag","Tag","RangePicker","DatePicker","Title","Typography","Paragraph","Text","logX","InspectionRecordGroup_AppendCPK","InspRecGroup","defInspRange","forEach","group","stat","s_stat","defRange","find","s_def","id","cpkInfo","mean","sigma","USL","LSL","target","CPU","CPL","CP","Math","min","CA","CPK","abs","calcCpk","value","Object","assign","inspectionRecGroup_Generate","inspectionRec","groupInterval","measureList","inspectionRecGroup","InspectionRecord","largestInterval","fd","inspGroups","frontGroup","AddNewGroup","new_rec","startTime","time_ms","endTime","push","g","judgeReports","map","x","measures","singleRep","measure","availData","filter","status","reduce","sum","minMax","mM","max","sqrt","InspectionRecordGrouping","Chart","pluginService","register","afterDraw","chart","MEASURERSULTRESION","COLOR","TEXT","ControlChart","props","divID","round","random","charObj","state","chartOpt","type","labels","datasets","borderColor","lineTension","pointBackgroundColor","bezierCurve","options","scales","xAxes","display","distribution","ticks","callback","index","values","toString","source","autoSkip","time","displayFormat","displayFormats","hour","minUnit","yAxes","scaleLabel","elements","line","fill","point","radius","animation","duration","maintainAspectRatio","responsive","title","text","annotation","annotations","legend","tooltips","enabled","pan","mode","zoom","default_annotationTargets","color","nextProps","nextState","this","PropsUpdate","_inspectionRecGroup","_targetMeasure","_xAxisRange","value_target","sumG","recG","concat","acc_chart_data","rep","idx","measureObj","jrep","measureValue","pointColor","val","Date","y","tag","targetValue","bestEffert","repG","this_id_stat","st","arrLen","alpha","hueOffset","sat","light","hue","doMultipleChart","targetMeasure","targetMeasure_cache","doChartDataUpdate","N_LSL","N_USL","N_value_target","update","datInfo","xAxisRange","arr","colorPalette","chart_data","genSingleRepPoints","groupColor","chart_group_data","genGroupRepPoints","dat","original_y","dataPointNormalizer","dataSet","label","backgroundColor","annotationTargets","anotationTargets","annoT","annotationTar","scaleID","borderWidth","borderDash","position","content","onMouseover","e","document","getElementById","innerHTML","callbacks","tooltipItem","datasetIndex","afterLabel","dataOnTip","groupSize","str_arr","moment","format","str","keys","toFixed","titleFontSize","titleFontColor","bodyFontColor","bodyFontSize","displayColors","ctx","getContext","className","style","height","React","Component","Date_addDay","addDays","setDate","InspRecStream","reset","newFeedCallBack","newStream","fullStream","liveFeedMode","rec","liveFeedInterval","passiveQueryRange","liveQueryRange","timeoutHDL","clearTimeout","defFile","resetStreamInfo","parse","sort","a","b","lastMsInRec","recAfterLast","srec","concatArr","enable","liveQueryInspRec","timeRange","maxResults","sampleCount","_d","getTime","DB_Query","then","queryResult","InspectionData","newStreamFeed","setTimeout","$count","ListInfoEditUI","shape_list","initRank","onListInfoChange","useState","sliderV","setSliderV","listInfo","setListInfo","shape","rankMax","rank","rankMin","marks","useEffect","new_list_info","selected","onChange","width","marginLeft","marginRight","checked","nLInfo","APP_ANALYSIS_MODE","ec_canvas","defFileSearchName","dateRange","displayRange","inspectionRec_TagFiltered","dataInSync","controlChartOverlap","displayListInfo","tagState","modalInfo","recStream","setState","setLiveFeedMode","stateUpdate","setDefFile","dateRangeReady","isReady","dr","defFileReady","DefFileHash","DefFileName","String","featureSet","features","feature","HEADER","graphCtrlUI","range","defaultValue","step","tipFormatter","ev","liveFeedMode_ctrl","hourStep","minuteStep","allowClear","t","mo","day_base","startOf","graphUI","modalDisplay","visible","maskClosable","closable","onOk","onOK","okText","onCancel","cancelText","icon","disabled","onClick","latestTime","queryInspRecSize","d","result","dataCount","count","queryInspRec","catch","ReportName","YYYYMMDD","csv_arr","reportName","inspRecGroup","cur_tagState","ci","pushDataRow","measureReports","trace","RowName","ele","field","additionalColumn","s_group","s_rep","replace","convertInspInfo2CSV","fileType","fileName","blob","Blob","Uint8Array","createElement","download","href","URL","createObjectURL","dataset","downloadurl","body","appendChild","click","removeChild","revokeObjectURL","downloadString","fullStream2Tag","control_margin_set","__decorator","control_margin_info","onTagStateChange","updatedDefFile","__deco_control_margin_info","new_feature","dclone","mustList","mustNotList","selKey","mustKey","curMargInfo","fea","matched_cmi","info","filterTagsBoolean","item","array","tArr","split","everyMust","every","includes","someMustNot","some","top","prevState","__cached_defFile","featureInOrder","list_id_order","f","RelatedUsageInfo","handleTagChange","onoff","tags2","tags","init","checkInspectionRec","uniSet2","Set","e2","i2","a2","add","Array","from","_","tagName","QrScanner","WORKER_PATH","getAllUrlParams","queryString","window","location","search","slice","decodeURI","paramName","paramValue","match","exec","pjsonp","timeout","timeoutErrMsg","timeoutFlag","CusDisp_DB","read","create","targetDeffiles","delete","XQueryInput","onQueryRes","onQueryRej","placeholder","fetchedRecord","setFetchedRecord","recentQuery","cur_ms","start_ms","end_ms","dataSet_Formatted","_id","acc","time_start","time_end","hashRegx","hash","defFileData","df","sha1","DefineFile","createdAt","p_createdAt","defF","tar","flat","fetchDeffileInfo_in_insp_time_range","searchBox","onPressEnter","Modal","confirm","hashArr","defFInfo","fetchDeffileInfo","displayInfo","columns","dataIndex","render","fetchRec","substring","protocol","sorter","milliSec","Date_Start","Date_End","defaultSortOrder","dataSource","retSrc","Tags","pagination","SingleDisplayUI","canvasRef","useRef","level","dfs","ref","current","CustomDisplayUI","setDisplayInfo","collapsed","setCollapsed","prod","UI","span","ddd","Header","Sider","collapsible","onCollapse","onMouseOut","onMouseOver","Content","padding","Footer","DBDupMan","App","DefFileInfo","allowQRScan","UI_type","customDisplay","dbDupMan","analysis","urlParam","v","onQRScanResult","q","res_obj","Number","onDefFileInfoUpdate","alert","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e142cd4e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","\r\n\r\nexport function Num2Str_padding(pad,num)\r\n{\r\n  var str=\"0000000000000000\"+(num);\r\n  return str.substr(-pad);\r\n}\r\n\r\n\r\n\r\n\r\nexport function datePrintSimple(date) {\r\n  function addZero(i) {\r\n    return (i < 10)?\"0\" + i:i;\r\n  }\r\n  var mm = addZero(date.getMonth() + 1); // getMonth() is zero-based\r\n  var dd = addZero(date.getDate());\r\n  var h = addZero(date.getHours());\r\n  var m = addZero(date.getMinutes());\r\n  var s = addZero(date.getSeconds());\r\n\r\n  return [date.getFullYear(),mm,dd].join('/')+\" \"+h+\":\"+m+\":\"+s;\r\n};\r\n\r\nexport function round(num,round_nor=1)\r\n{\r\n  let tmp = (1/round_nor);\r\n  let round_nor_inv = Math.round(tmp);\r\n  if(round_nor_inv===0)\r\n  {\r\n    round_nor_inv=tmp;\r\n  }\r\n\r\n  return Math.round(num*round_nor_inv)/round_nor_inv;\r\n}\r\n\r\n\r\nexport function xstate_GetCurrentMainState(state)\r\n{\r\n  if(typeof state.value === \"string\")\r\n  {\r\n    return {state:state.value, substate:null};\r\n  }\r\n  let complexState = state.value;\r\n  let state_Str = Object.keys(complexState)[0];\r\n  return {state:state_Str, substate:complexState[state_Str]};\r\n\r\n}\r\n\r\nexport function xstate_GetMainState(state)\r\n{\r\n  if(typeof state.value === \"string\")\r\n  {\r\n    return state.value;\r\n  }\r\n  let complexState = state.value;\r\n  return Object.keys(complexState)[0];\r\n}\r\n\r\nexport function xstate_GetSubState(state)\r\n{\r\n  if(typeof state.value === \"string\")\r\n  {\r\n    return undefined;\r\n  }\r\n  let complexState = state.value;\r\n  let state_Str = Object.keys(complexState)[0];\r\n  return complexState[state_Str];\r\n}\r\n\r\n\r\nexport function GetObjElement(rootObj,keyTrace,traceIdxTo=keyTrace.length-1)\r\n{\r\n  let obj = rootObj;\r\n  let traceIdxTLen = traceIdxTo+1;\r\n  if( rootObj === undefined)return;\r\n  for (let i=0;i<traceIdxTLen;i++) {\r\n    let key = keyTrace[i];\r\n    //console.log(obj,key,obj[key]);\r\n    obj = obj[key];\r\n\r\n    if( obj === undefined)return;\r\n  }\r\n  return obj;\r\n}\r\n\r\n\r\n\r\nexport function DictConv(key,dict,dictTheme)\r\n{\r\n  let translation = (dictTheme===undefined)?undefined:GetObjElement(dict,[dictTheme, key]);\r\n\r\n  if(translation===undefined)\r\n  {\r\n    translation = GetObjElement(dict,[\"fallback\", key]);\r\n  }\r\n\r\n  return translation;\r\n}\r\n\r\n\r\n\r\nexport class websocket_autoReconnect{\r\n  constructor(url,timeout=5000) {\r\n      this.url=undefined;\r\n      this.wsclose=false;\r\n      this.reconnectionCounter=0;\r\n      this.reconnectGap_ms=1000;\r\n      this.connectionTimeout_ms=timeout;\r\n      this.connectionTimer=null;\r\n      this.readyState=undefined;\r\n      this._connect(url);\r\n\r\n  }\r\n  onopen(ev){}\r\n  onmessage(ev){}\r\n  onerror(ev){}\r\n  onclose(ev){}\r\n\r\n  onreconnection(reconnectionCounter){}\r\n  onconnectiontimeout(){}\r\n\r\n  setWebsocketCallbackUndefined(ws)\r\n  {\r\n    ws.onopen=\r\n    ws.onmessage=\r\n    ws.onerror=\r\n    ws.onclose=undefined;\r\n  }\r\n  _connect(url) {\r\n    if(this.wsclose)return;\r\n    \r\n    console.log(\"_connect\");\r\n    this.url=url;\r\n    if(this.websocket!==undefined)\r\n    {\r\n        this.reconnectionCounter++;\r\n        let doconnection = this.onreconnection(this.reconnectionCounter);\r\n        if(doconnection!==undefined && doconnection!==true)\r\n        {\r\n          this.websocket=undefined;\r\n          return;\r\n        }\r\n    }\r\n\r\n    if(this.connectionTimer!==undefined)\r\n      clearTimeout(this.connectionTimer);\r\n    this.connectionTimer=undefined;\r\n\r\n    this.websocket = new WebSocket(url);\r\n    this.OPEN=this.websocket.OPEN;\r\n    this.CONNECTING=this.websocket.CONNECTING;\r\n    this.CLOSED=this.websocket.CLOSED;\r\n    this.CLOSING=this.websocket.CLOSING;\r\n    this.connectionTimer = setTimeout(()=>{\r\n        this.close();\r\n        this.onconnectiontimeout();\r\n    },this.connectionTimeout_ms);\r\n    // this.state.WS_DB_Insert.binaryType = \"arraybuffer\";\r\n\r\n    this.websocket.onopen = (ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      clearTimeout(this.connectionTimer);\r\n      this.connectionTimer=undefined;\r\n      return this.onopen(ev);\r\n    };\r\n    this.websocket.onmessage =(ev)=> this.onmessage(ev);\r\n    this.websocket.onerror =(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      //setTimeout(()=>this._connect(url),10);\r\n      return this.onerror(ev);\r\n    }\r\n    this.websocket.onclose =(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      setTimeout(()=>this._connect(url),this.reconnectGap_ms);\r\n      return this.onclose(ev);\r\n    }\r\n  }\r\n  \r\n  reconnect() {\r\n    console.log(    this.wsclose,this.websocket);\r\n    this.wsclose=false;\r\n    if(this.websocket!==undefined)\r\n    {\r\n      if(this.websocket.readyState!==this.websocket.OPEN)\r\n      {\r\n        this.setWebsocketCallbackUndefined(this.websocket);\r\n        this.websocket=undefined;\r\n        this._connect(this.url);\r\n      }\r\n      else\r\n        this.websocket.close();//this should trigger _connect affter close/error event\r\n    }\r\n    else\r\n    {\r\n      this._connect(this.url);\r\n    }\r\n  }\r\n  close() {\r\n    this.wsclose=true;\r\n    \r\n    if(this.connectionTimer!==undefined)\r\n      clearTimeout(this.connectionTimer);\r\n    this.connectionTimer=undefined;\r\n    if(this.websocket!==undefined)\r\n    {\r\n        this.websocket.close();\r\n\r\n    }\r\n  }\r\n\r\n  send(data){\r\n    return this.websocket.send(data);\r\n  }\r\n}\r\n\r\nexport class websocket_reqTrack{\r\n  constructor(websocket) {\r\n    let onopen = websocket.onopen;\r\n    let onmessage = websocket.onmessage;\r\n    let onerror = websocket.onerror;\r\n    let onclose = websocket.onclose;\r\n\r\n    this.trackWindow={};\r\n\r\n    websocket.onopen=(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      this.onopen(ev);\r\n    };\r\n    websocket.onclose=(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      this.onclose(ev);\r\n    };\r\n    websocket.onmessage=(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      let p = JSON.parse(ev.data);\r\n      let type=p.type;\r\n      if(type===\"ACK\" || type===\"NAK\")\r\n      {\r\n        let req_id=p.req_id;\r\n        if(req_id!==undefined)\r\n        {\r\n          let tobj = this.trackWindow[req_id];\r\n          if(tobj!==undefined)\r\n          {\r\n            delete this.trackWindow[req_id];\r\n            if(type===\"ACK\")\r\n            {\r\n              tobj.resolve(p);\r\n            }\r\n            else\r\n            {\r\n              tobj.reject(p);\r\n            }\r\n          }\r\n          else\r\n          {\r\n            req_id=undefined;\r\n          }\r\n        }\r\n        \r\n        if(req_id===undefined){\r\n          \r\n          this.onTrackError({\r\n            type:\"ACK_TRACK_ERR\",\r\n            data:p\r\n          });\r\n        }\r\n      }\r\n      this.onmessage(ev,p);\r\n    };\r\n    websocket.onerror=(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      this.onerror(ev);\r\n    };\r\n    this.websocket=websocket;\r\n  }\r\n  \r\n  onTrackError(ev){}\r\n\r\n  onopen(ev){}\r\n  onmessage(ev){}\r\n  onerror(ev){}\r\n  onclose(ev){}\r\n\r\n\r\n  \r\n  close() {\r\n    return this.websocket.close();\r\n  }\r\n\r\n  send_obj(data,replacer){\r\n\r\n    let req_id = data.req_id;\r\n\r\n    while(req_id===undefined||\r\n      Object.keys(this.trackWindow).reduce((match,id)=>match||id === req_id,false))\r\n      //Check existance\r\n    {\r\n      //if req_id is undefined / exists in the lookup table\r\n      req_id = Math.floor(Math.random()*16777215).toString(16);\r\n    }\r\n    data.req_id = req_id;\r\n\r\n\r\n    this.websocket.send(JSON.stringify(data,replacer));\r\n  \r\n    let trackObj={\r\n      time:Date.now(),\r\n      resolve:undefined,\r\n      reject:undefined,\r\n      data:data,\r\n      rsp:undefined\r\n    };\r\n    this.trackWindow[req_id]=trackObj;\r\n    return new Promise((resolve, reject)=>{\r\n      trackObj.resolve=resolve;\r\n      trackObj.reject=reject;\r\n    });\r\n  }\r\n}","import jsonp from 'jsonp';\r\n\r\n\r\nexport let db_url=\"http://db.xception.tech:8080\";\r\n\r\nfunction defFileQueryStr(name,featureSet_sha1,projection)\r\n{\r\n  let url =\"\";\r\n  \r\n  if(name!==undefined)\r\n  url+=\"&name=\"+name;\r\n\r\n  if(featureSet_sha1!==undefined)\r\n    url+=\"&featureSet_sha1=\"+featureSet_sha1;\r\n\r\n  if(projection!==undefined)\r\n    url+=\"&projection=\"+JSON.stringify(projection);\r\n  else\r\n    url+=\"&projection={}\";\r\n\r\n  return url;\r\n}\r\n\r\nfunction defFileQuery(name,featureSet_sha1,projection)\r\n{\r\n    \r\n    let url = db_url+\"/query/deffile?\";\r\n    \r\n    url+=\"limit=1000\";\r\n    url+=defFileQueryStr(name,featureSet_sha1,projection);\r\n    return new Promise((res,rej)=>{\r\n\r\n        jsonp(url,  (err,data)=>{\r\n            if(err === null)\r\n                res(data);\r\n            else\r\n                rej(err)\r\n            console.log(err,data);\r\n        });\r\n    });\r\n}\r\n\r\n\r\nfunction inspectionQuery(subFeatureDefSha1,date_start,date_end,limit=100*10000,sample=undefined,prjection=undefined,agg=undefined)\r\n{\t\r\n    let TYPE=\"/query/inspection\";\r\n    let url = db_url+TYPE+\"?\";\r\n\r\n    url+=\"subFeatureDefSha1=\"+subFeatureDefSha1+\"&\"\r\n    url+=\"tStart=\"+date_start+\"&tEnd=\"+date_end+\"&\";\r\n    if(limit!==undefined)\r\n        url+=\"limit=\"+limit+\"&page=1&\"\r\n    if(sample!==undefined)\r\n        url+=\"sample=\"+sample+\"&\"\r\n    if(agg!=undefined)\r\n        url+=\"agg=\"+JSON.stringify(agg)+\"&\"\r\n\r\n    if(prjection===undefined)\r\n    {\r\n        url+=\"projection=\"+JSON.stringify(\r\n            {\"_id\":0,\"InspectionData.time_ms\":1,\r\n            \"InspectionData.judgeReports.id\":1,\r\n            \"InspectionData.judgeReports.value\":1,\r\n            \"InspectionData.judgeReports.status\":1,\r\n            \r\n            \"createdAt\":1,\r\n            \"updatedAt\":1,\r\n            \"InspectionData.tag\":1\r\n            });\r\n    }\r\n    else{\r\n        \r\n        url+=\"projection=\"+JSON.stringify(prjection);\r\n    }\r\n\r\n\r\n\r\n    url+=\"\";\r\n    \r\n\r\n    \r\n    return new Promise((res,rej)=>{\r\n\r\n        jsonp(url,  (err,data)=>{\r\n            \r\n            if(err === null)\r\n                res(data);\r\n            else\r\n                rej(err)\r\n            console.log(err,data);\r\n            /*console.log(err,data);\r\n            text=JSON.stringify(\r\n                data.\r\n                reduce((arr,data)=>\r\n                {\r\n                    data.InspectionData.forEach(ele =>arr.push(ele));\r\n                    return arr;\r\n                },[]).\r\n                map(data=>data.judgeReports)\r\n            );*/\r\n        });\r\n    });\r\n\r\n}\r\n\r\n\r\nexport {defFileQuery,inspectionQuery};","\r\nconst BPG_header_L = 9;\r\nlet raw2header=(ws_evt, offset = 0)=>{\r\n  if (( ws_evt.data instanceof ArrayBuffer) && ws_evt.data.byteLength>=BPG_header_L) {\r\n    // var aDataArray = new Float64Array(evt.data);\r\n    // var aDataArray = new Uint8Array(evt.data);\r\n    var headerArray = new Uint8ClampedArray(\r\n      ws_evt.data,offset,BPG_header_L);\r\n    let ret_obj={};\r\n\r\n\r\n    ret_obj.type = String.fromCharCode(headerArray[0],headerArray[1]);\r\n    ret_obj.prop = headerArray[2];\r\n    ret_obj.pgID = (headerArray[3]<<8)+headerArray[4];\r\n    //console.log(ret_obj.pgID);\r\n\r\n    ret_obj.length =\r\n      headerArray[5]<<24 | headerArray[6]<<16 |\r\n      headerArray[7]<<8  | headerArray[8];\r\n    return ret_obj;\r\n  }\r\n  return null;\r\n};\r\nlet raw2obj_rawdata=(ws_evt, offset = 0)=>{\r\n  let ret_obj = raw2header(ws_evt, offset);\r\n  if(ret_obj==null)return null;\r\n\r\n  ret_obj.rawdata = new Uint8ClampedArray(ws_evt.data,\r\n    offset+BPG_header_L,ret_obj.length\r\n  );\r\n\r\n  return ret_obj;\r\n};\r\nlet raw2obj=(ws_evt, offset = 0)=>{\r\n  let ret_obj = raw2header(ws_evt, offset);\r\n  if(ret_obj==null)return null;\r\n\r\n  ret_obj.rawdata = new Uint8ClampedArray(ws_evt.data,\r\n    offset+BPG_header_L,ret_obj.length\r\n  );\r\n  let  enc = new TextDecoder(\"utf-8\");\r\n  let str = enc.decode(ret_obj.rawdata);\r\n  ret_obj.data = JSON.parse(str);\r\n  return ret_obj;\r\n};\r\nlet raw2Obj_IM=(ws_evt, offset = 0)=>{\r\n  let ret_obj = raw2header(ws_evt, offset);\r\n  if(ret_obj==null)return null;\r\n\r\n  let headerArray = new Uint8ClampedArray(ws_evt.data,\r\n    offset+BPG_header_L,6);\r\n  ret_obj.camera_id=headerArray[0];\r\n  ret_obj.session_id=headerArray[1];\r\n  ret_obj.width=(headerArray[2]<<8)|headerArray[3];\r\n  ret_obj.height=(headerArray[4]<<8)|headerArray[5];\r\n  let RGBA_pix_Num = 4*ret_obj.width*ret_obj.height;\r\n  \r\n\r\n  if(true||RGBA_pix_Num == (ret_obj.length-6))\r\n  {\r\n    ret_obj.image=new Uint8ClampedArray(ws_evt.data,\r\n      offset+BPG_header_L+6,4*ret_obj.width*ret_obj.height);\r\n  }\r\n  else\r\n  {\r\n    ret_obj.image=null;\r\n  }\r\n\r\n\r\n  return ret_obj;\r\n};\r\n\r\nvar enc = new TextEncoder();\r\nlet objbarr2raw=(type,prop,pgID,obj,barr=null)=>{\r\n  \r\n  let str = (obj==null)?\"\":JSON.stringify(obj);\r\n\r\n  let encStr= enc.encode(str);\r\n  let objstr_L = encStr.length;\r\n  \r\n  let barr_L = (barr instanceof Uint8Array)?barr.length:0;\r\n  let bbuf = new Uint8Array(BPG_header_L+objstr_L+1+barr_L);\r\n\r\n  bbuf[0] = type.charCodeAt(0);\r\n  bbuf[1] = type.charCodeAt(1);\r\n  bbuf[2] = prop;\r\n  bbuf[3] = pgID>>1;\r\n  bbuf[4] = pgID&255;\r\n\r\n  let data_length =bbuf.length - BPG_header_L;//Add NULL in the end of the string\r\n  bbuf[5] = data_length>>24;\r\n  bbuf[6] = data_length>>16;\r\n  bbuf[7] = data_length>>8;\r\n  bbuf[8] = data_length;\r\n  if(objstr_L!=0)\r\n  {\r\n    bbuf.set(encStr, BPG_header_L);\r\n  }\r\n  bbuf[BPG_header_L+objstr_L]=0;//The end of string session\r\n  if(barr_L!=0)\r\n  {\r\n    bbuf.set(barr, BPG_header_L+objstr_L+1);\r\n  }\r\n  return bbuf;\r\n};\r\n\r\n\r\n\r\nexport const INSPECTION_STATUS = {\r\n  NA:-128,\r\n  SUCCESS:0,\r\n  FAILURE:-1,\r\n};\r\n\r\n\r\n\r\n\r\nexport const DEF_EXTENSION = \"hydef\";\r\n\r\nexport default { raw2header, raw2obj_rawdata, raw2obj,raw2Obj_IM,objbarr2raw,INSPECTION_STATUS }\r\n\r\n//let binaryX = BPG_Protocol.obj2raw(\"TC\",{a:1,b:{c:2}});\r\n//console.log(BPG_Protocol.raw2obj({data:binaryX.buffer}));\r\n","'use strict'\r\n   \r\n\r\nimport React, { useState, useEffect,useRef } from 'react';\r\nimport {round as roundX,GetObjElement} from './UTIL/MISC_Util';\r\n\r\nimport {datePrintSimple} from './UTIL/MISC_Util';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport dclone from 'clone';\r\nimport moment from 'moment';\r\nimport Table from 'antd/lib/table';\r\nimport Button from 'antd/lib/button';\r\n\r\nimport * as logX from 'loglevel';\r\nimport 'chartjs-plugin-zoom'\r\n\r\nimport * as DB_Query from './UTIL/DB_Query';\r\n\r\nimport Input from 'antd/lib/input';\r\nimport Slider from 'antd/lib/slider';\r\nimport TimePicker from 'antd/lib/time-picker';\r\nimport DatePicker from 'antd/lib/date-picker';\r\nimport Checkbox from 'antd/lib/checkbox';\r\n\r\nimport  Typography  from 'antd/lib/typography';\r\nimport ReactResizeDetector from 'react-resize-detector';\r\n\r\nimport Chart from 'chart.js';\r\nimport 'chartjs-plugin-annotation';\r\nimport {INSPECTION_STATUS} from './UTIL/BPG_Protocol';\r\nimport Tag  from 'antd/lib/tag';\r\n\r\nimport Modal  from 'antd/lib/modal';\r\n\r\n\r\n\r\n// import { StarOutlined} from '@ant-design/icons';\r\nconst { CheckableTag } = Tag;\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Title, Paragraph, Text } = Typography;\r\nlet log = logX.getLogger(\"AnalysisUI\");\r\n\r\n\r\nChart.pluginService.register({\r\n  afterDraw: function(chart) {\r\n  }\r\n});\r\n\r\n\r\n\r\nfunction calcCpk(mean,sigma,USL,LSL,target)\r\n{\r\n  \r\n  let CPU = (USL-mean)/(3*sigma);\r\n  let CPL = (mean-LSL)/(3*sigma);\r\n  let CP = Math.min(CPU,CPL);\r\n  let CA = (mean-target)/((USL-LSL)/2);\r\n  let CPK = CP*(1-Math.abs(CA));\r\n  return {mean,sigma,CPU,CPL,CP,CA,CPK}\r\n}\r\nfunction copyStringToClipboard (str) {\r\n  // Create new element\r\n  var el = document.createElement('textarea');\r\n  // Set value (string to be copied)\r\n  el.value = str;\r\n  // Set non-editable to avoid focus and move outside of view\r\n  el.setAttribute('readonly', '');\r\n  el.style = {position: 'absolute', left: '-9999px'};\r\n  document.body.appendChild(el);\r\n  // Select text inside element\r\n  el.select();\r\n  // Copy text to clipboard\r\n  document.execCommand('copy');\r\n  // Remove temporary element\r\n  document.body.removeChild(el);\r\n}\r\n\r\nfunction downloadString(text, fileType, fileName) {\r\n  var blob = new Blob([new Uint8Array([0xef, 0xbb, 0xbf]),text], { type: fileType });\r\n// downloadString(\"a,b,c\\n1,2,3\", \"text/csv\", \"myCSV.csv\")\r\n  var a = document.createElement('a');\r\n  a.download = fileName;\r\n  a.href = URL.createObjectURL(blob);\r\n  a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\r\n  a.style.display = \"none\";\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\r\n}\r\n\r\nfunction isString (value) {\r\n  return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\nfunction convertInspInfo2CSV(reportName,measureList,inspRecGroup,cur_tagState)\r\n{\r\n  let converterV=\"0.0.1 Alpha\"\r\n  let ci=[];\r\n  \r\n  ci.push('\"'+reportName+'\"');\r\n  ci.push(\",\\\"\"+converterV+'\"');\r\n\r\n  ci.push(',,\"tags\"');\r\n  ci.push(\",\\\"\"+Object.keys(cur_tagState).filter(key=>cur_tagState[key]==1).join(\",\")+'\"');\r\n  ci.push(\",\\\"\"+Object.keys(cur_tagState).filter(key=>cur_tagState[key]==0 || cur_tagState[key]===undefined).join(\",\")+'\"');\r\n  ci.push(\",\\\"\"+Object.keys(cur_tagState).filter(key=>cur_tagState[key]==-1).join(\",\")+'\"');\r\n  \r\n\r\n  ci.push(\",\\n\");\r\n  console.log(measureList,inspRecGroup);\r\n  function pushDataRow(arr,measureReports,trace,RowName=trace[trace.length-1])\r\n  {\r\n    arr.push('\"'+RowName+'\"');\r\n    measureReports.forEach((rep)=>{\r\n      let ele = GetObjElement(rep,trace);\r\n      if(ele===undefined)ele='';\r\n      arr.push(\",\\\"\"+ele+'\"');\r\n    });\r\n    let additional\r\n\r\n\r\n    arr.push(\"\\n\");\r\n  }\r\n  [\"name\",\"subtype\"]\r\n    .forEach(field=>pushDataRow(ci,measureList,[field]));\r\n\r\n   \r\n\r\n  [\"USL\",\"LSL\",\"value\",\"UCL\",\"LCL\"]\r\n    .forEach(field=>pushDataRow(ci,measureList,[field]));\r\n\r\n  ci.push(\",\\n\");\r\n\r\n  let additionalColumn=[\"tag\"]\r\n  inspRecGroup.forEach(s_group=>{\r\n    s_group.group\r\n      .forEach(data=>{\r\n        let rep=data.judgeReports;\r\n        ci.push(\"'\"+datePrintSimple(new Date(data.time_ms)));\r\n        //The \"'\" in the head of time will let Excel left alingn time string, and have better lookup exprience\r\n        measureList.forEach(m=>\r\n          {\r\n            let s_rep = rep.find(s_rep=>s_rep.id==m.id);\r\n            if(s_rep.status!==INSPECTION_STATUS.NA)\r\n              ci.push(\",\"+s_rep.value);\r\n            else\r\n              ci.push(\",\");\r\n          })\r\n        additionalColumn.forEach(name=>{\r\n          ci.push(\",\");\r\n          switch(name)\r\n          {\r\n            case \"tag\":\r\n              let tag=data.tag;\r\n              if(tag===undefined)tag=\"\";\r\n              else\r\n              {\r\n                tag=tag.replace(/^\\,+/g, \"\").replace(/\\,{2,}/g, \",\")\r\n              }\r\n              ci.push('\"'+tag+'\"');\r\n              break;\r\n          }\r\n          \r\n        })\r\n        ci.push(\"\\n\");\r\n        \r\n      });\r\n  })\r\n  /*\r\n  measureReports.forEach((rep)=>{\r\n    ci.push(\",\");\r\n  });ci.push(\"\\n\");\r\n\r\n  let dateL = measureReports[0].valArr.length;\r\n  for(let i=0;i<dateL;i++)\r\n  {\r\n    pushDataRow(ci,measureReports,[\"valArr\",i],insp[i].time_ms);\r\n  }*/\r\n\r\n\r\n  return ci;\r\n}\r\n\r\nfunction YYYYMMDD(date)\r\n{\r\n  var mm = date.getMonth() + 1; // getMonth() is zero-based\r\n  var dd = date.getDate();\r\n\r\n  return [date.getFullYear(),\r\n          (mm>9 ? '' : '0') + mm,\r\n          (dd>9 ? '' : '0') + dd\r\n         ].join('');\r\n}\r\n\r\nfunction InspectionRecordGrouping(InspectionRecord,largestInterval=2*60*1000)\r\n{\r\n  let fd = InspectionRecord;\r\n  let inspGroups=[];\r\n  let frontGroup=undefined;\r\n  function AddNewGroup(new_rec)\r\n  {\r\n    if(new_rec===undefined)return;\r\n    frontGroup={\r\n      group:[new_rec],\r\n      startTime:new_rec.time_ms,\r\n      endTime:new_rec.time_ms,\r\n    }\r\n    inspGroups.push(frontGroup);\r\n  }\r\n  AddNewGroup(fd[0]);\r\n  for(let i=1;i<fd.length;i++)\r\n  {\r\n    if(fd[i].time_ms-frontGroup.endTime<largestInterval)\r\n    {\r\n      frontGroup.group.push(fd[i]);\r\n      frontGroup.endTime=fd[i].time_ms;\r\n    }\r\n    else\r\n    {\r\n      AddNewGroup(fd[i]);\r\n    }\r\n  }\r\n\r\n  inspGroups.forEach(frontGroup=>{\r\n    let g= frontGroup.group;\r\n    if(g.length==0)return;\r\n\r\n    let stat = g[0].judgeReports.map(x=>({id:x.id}));\r\n    stat=stat.map(s_stat=>{\r\n\r\n      let measures=g.map(singleRep=>singleRep.judgeReports.find(measure=>measure.id==s_stat.id));\r\n      let availData= measures.filter((measure)=>measure.status !==INSPECTION_STATUS.NA);\r\n      let mean = availData.reduce((sum,measure)=>sum+measure.value,0)/availData.length;\r\n      \r\n      let minMax = measures.reduce((mM,measure)=>{\r\n        if(measure.status ===INSPECTION_STATUS.NA)\r\n        {\r\n          return mM;\r\n        }\r\n\r\n\r\n        if(mM.max===undefined || mM.max===null || measure.value>mM.max)\r\n          mM.max = measure.value;\r\n        if(mM.min===undefined || mM.min===null || measure.value<mM.min)\r\n          mM.min = measure.value;\r\n        \r\n        return mM;\r\n\r\n      },{\r\n        min:undefined,\r\n        max:undefined\r\n      });\r\n      let sigma = Math.sqrt(availData.reduce((sum,measure)=>sum+(mean-+measure.value)*(mean-+measure.value),0)/availData.length);\r\n\r\n      return {\r\n        id:s_stat.id,\r\n        mean,sigma,\r\n        min:minMax.min,\r\n        max:minMax.max\r\n      }\r\n    })\r\n\r\n\r\n    frontGroup.stat=stat;\r\n\r\n\r\n  })\r\n\r\n\r\n  return inspGroups;\r\n}\r\n\r\nfunction InspectionRecordGroup_AppendCPK(InspRecGroup,defInspRange)\r\n{\r\n  InspRecGroup.forEach(group=>{\r\n    group.stat.forEach(s_stat=>{\r\n      let defRange = defInspRange.find(s_def=>s_def.id==s_stat.id);\r\n      if(defRange===undefined)return;\r\n      let cpkInfo = calcCpk(s_stat.mean,s_stat.sigma,defRange.USL,defRange.LSL,defRange.value);\r\n      Object.assign(s_stat, cpkInfo);\r\n    })\r\n  })\r\n}\r\n\r\n\r\nfunction inspectionRecGroup_Generate(inspectionRec,groupInterval,measureList)\r\n{\r\n    let inspectionRecGroup = InspectionRecordGrouping(inspectionRec,groupInterval);\r\n    InspectionRecordGroup_AppendCPK(inspectionRecGroup,measureList);\r\n    return inspectionRecGroup;\r\n}\r\n\r\nconst MEASURERSULTRESION=\r\n{\r\n  NA:\"NA\",\r\n  UOK:\"UOK\",\r\n  LOK:\"LOK\",\r\n  \r\n  UCNG:\"UCNG\",\r\n  LCNG:\"LCNG\",\r\n\r\n  USNG:\"USNG\",\r\n  LSNG:\"LSNG\",\r\n};\r\n\r\n\r\nexport const OK_NG_BOX_COLOR_TEXT = {\r\n  [MEASURERSULTRESION.NA]:{COLOR:\"#aaa\",TEXT:MEASURERSULTRESION.NA},\r\n  [MEASURERSULTRESION.UOK]:{COLOR:\"#87d068\",TEXT:MEASURERSULTRESION.UOK},\r\n  [MEASURERSULTRESION.LOK]:{COLOR:\"#87d068\",TEXT:MEASURERSULTRESION.LOK},\r\n  [MEASURERSULTRESION.UCNG]:{COLOR:\"#d0d068\",TEXT:MEASURERSULTRESION.UCNG},\r\n  [MEASURERSULTRESION.LCNG]:{COLOR:\"#d0d068\",TEXT:MEASURERSULTRESION.LCNG},\r\n  [MEASURERSULTRESION.USNG]:{COLOR:\"#f50\",TEXT:MEASURERSULTRESION.USNG},\r\n  [MEASURERSULTRESION.LSNG]:{COLOR:\"#f50\",TEXT:MEASURERSULTRESION.LSNG},\r\n};\r\nfunction newDate(time_ms) {\r\n  return moment(time_ms).toDate();\r\n}\r\n\r\n\r\n\r\n\r\nclass ControlChart extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.divID=\"ControlChart_ID_\" + Math.round(Math.random() * 10000);\r\n      this.charObj = undefined;\r\n      this.state={\r\n          chartOpt:{\r\n              type: 'line',\r\n              data:{labels:[],datasets:[{            \r\n                  \r\n                  borderColor:\"rgba(100, 255, 100,0)\",\r\n                  lineTension: 0,data:[],\r\n                  pointBackgroundColor:[]},\r\n                {            \r\n                  type: \"scatter\",\r\n                  borderColor:\"rgba(100, 255, 100)\",\r\n                  lineTension: 0,data:[],\r\n                  pointBackgroundColor:[]}\r\n                \r\n                ]},\r\n              bezierCurve : false,\r\n              options: {\r\n                \r\n                  scales: {\r\n                      xAxes: [\r\n                        {\r\n                          display: true,\r\n                          type: 'time',\r\n                          distribution: \"linear\",\r\n                          ticks: {\r\n                            callback: function(value, index, values) {\r\n                              return value.toString();\r\n                            },\r\n                            source: 'labels',\r\n                            autoSkip: true\r\n                          },\r\n                          time:{\r\n                            displayFormat:true,\r\n                            displayFormats:{\r\n                              hour: \"M/D h:mm:ss\"\r\n                            },\r\n                            minUnit:\"hour\"\r\n                          }\r\n                        }] ,\r\n                      yAxes: [{\r\n                        display: true,\r\n                        scaleLabel: {\r\n                          display: true,\r\n                        }\r\n                      }]  \r\n                  },\r\n                  elements: {\r\n                      line: {fill: false},\r\n                      point: { radius: 6 } \r\n                  },\r\n                  bezierCurve : false,\r\n                  animation: {\r\n                      duration: 0\r\n                  },\r\n                  maintainAspectRatio: false,\r\n                  responsive: true,\r\n                  title: {\r\n                      display: true,\r\n                      text: ''\r\n                  },\r\n                  annotation: {\r\n                      annotations: []\r\n                  },\r\n                  legend: {\r\n                      display: true\r\n                  },\r\n                  tooltips: {\r\n                      enabled: true\r\n                  }\r\n              }\r\n          },\r\n          \r\n\r\n      };\r\n\r\n      this.state.chartOpt.options.pan={\r\n          enabled: true,\r\n          mode: 'y' // is panning about the y axis neccessary for bar charts?\r\n        }\r\n      this.state.chartOpt.options.zoom={\r\n          enabled: true,\r\n          mode: 'y',\r\n      }\r\n\r\n\r\n\r\n      this.default_annotationTargets=[\r\n          {type:\"USL\",color:\"rgba(200, 0, 0,0.2)\"},\r\n          {type:\"LSL\",color:\"rgba(200, 0, 0,0.2)\"},\r\n          {type:\"UCL\",color:\"rgba(100, 100, 0,0.2)\"},\r\n          {type:\"LCL\",color:\"rgba(100, 100, 0,0.2)\"},\r\n          {type:\"value\",color:\"rgba(0, 0, 0,0.2)\"},\r\n      ];\r\n\r\n      \r\n  } \r\n  \r\n  componentWillMount(nextProps, nextState){\r\n  }\r\n  componentWillUpdate(nextProps, nextState){\r\n    this.PropsUpdate(nextProps);\r\n  }\r\n\r\n  genSingleRepPoints(_inspectionRecGroup,_targetMeasure,_xAxisRange,color)\r\n  {\r\n    let value_target=_targetMeasure[\"value\"];\r\n    return _inspectionRecGroup\r\n        .reduce((sumG,recG)=>sumG.concat(recG.group),[])//make [{group:[a,b]},{group:[c,d]}] => [a,b,c,d...]\r\n        .reduce((acc_chart_data,rep,idx)=>{\r\n          //acc_data.labels.push(rep.time_ms);\r\n          if(_xAxisRange!==undefined)\r\n          {\r\n            if(_xAxisRange[0]>rep.time_ms || \r\n              _xAxisRange[1]<rep.time_ms)return acc_chart_data;\r\n          }\r\n\r\n          let measureObj = rep.judgeReports.find((jrep)=>jrep.id===_targetMeasure.id);\r\n            \r\n\r\n          let measureValue=measureObj.value;\r\n          let pointColor=color;\r\n\r\n          if(pointColor===undefined)\r\n          {\r\n            switch(measureObj.status)\r\n              {\r\n              case INSPECTION_STATUS.SUCCESS:\r\n                pointColor=\"rgba(0,255,200,0.2)\";\r\n              break;\r\n              case INSPECTION_STATUS.FAILURE:\r\n                pointColor=\"rgba(255,0,200,0.2)\";\r\n              break;\r\n              case INSPECTION_STATUS.NA:\r\n                pointColor=\"#000000\";\r\n                measureValue=value_target;\r\n              break;\r\n              }\r\n          }\r\n          else\r\n          {\r\n            if(measureObj.status === INSPECTION_STATUS.NA)\r\n            {\r\n              pointColor=\"#000000\";\r\n              measureValue=value_target;\r\n            }\r\n          }\r\n\r\n            let val={\r\n            x:datePrintSimple(new Date(rep.time_ms)),\r\n            y:measureValue,\r\n            tag:rep.tag\r\n            };\r\n            \r\n\r\n          acc_chart_data.pointBackgroundColor.push(pointColor);\r\n          //TODO:for now there is only one data set in one chart\r\n          acc_chart_data.data.push(val);\r\n          return acc_chart_data;\r\n      }, { \r\n        borderColor:\"rgba(100, 255, 100,0)\",\r\n        lineTension: 0,data:[],\r\n        pointBackgroundColor:[]});\r\n  }\r\n\r\n  dataPointNormalizer(value,USL,targetValue,LSL,bestEffert=true)\r\n  {\r\n    if(USL==LSL)return 1/0.0;\r\n    if(bestEffert)\r\n    {\r\n      if(targetValue<=LSL)\r\n      {\r\n        LSL=targetValue-(USL-targetValue);\r\n      }\r\n      else if(targetValue>=USL)\r\n      {\r\n        USL = targetValue+(targetValue-LSL);\r\n      }\r\n      if(USL<=targetValue || LSL >=targetValue)return 1/0.0;\r\n    }\r\n\r\n    let mValue;\r\n    //console.log(value,USL,targetValue,LSL);\r\n    if(value>targetValue)\r\n    {\r\n      mValue=(value-targetValue)/(USL-targetValue);\r\n    }\r\n    else\r\n    {\r\n      mValue=(value-targetValue)/(targetValue-LSL);\r\n    }\r\n    return mValue;\r\n  }\r\n\r\n  genGroupRepPoints(_inspectionRecGroup,_targetMeasure,_xAxisRange,color)\r\n  {\r\n    return _inspectionRecGroup.reduce((acc_chart_data,repG)=>{\r\n      let this_id_stat = repG.stat.\r\n        find((st)=>st.id===_targetMeasure.id);\r\n      \r\n      let value =this_id_stat.mean;\r\n      let time = repG.group.reduce((sum,rep)=>sum+rep.time_ms,0)/repG.group.length;\r\n      if(_xAxisRange!==undefined)\r\n      {\r\n        if(_xAxisRange[0]>time || \r\n          _xAxisRange[1]<time)return acc_chart_data;\r\n      }\r\n      let pointColor=(color===undefined)?\"rgba(0,255,0,1)\":color;\r\n        let val={\r\n          x:datePrintSimple(new Date(time)),\r\n        y:value,\r\n          data:repG,\r\n          stat:this_id_stat\r\n        };\r\n\r\n      \r\n      acc_chart_data.pointBackgroundColor.push(pointColor);\r\n      //TODO:for now there is only one data set in one chart\r\n      acc_chart_data.data.push(val);\r\n      return acc_chart_data;\r\n    }, { \r\n      type: \"line\",\r\n      borderColor:\"rgba(100, 255, 100,1)\",\r\n      lineTension: 0,data:[],\r\n      pointBackgroundColor:[],} );\r\n  }\r\n\r\n\r\n  colorPalette(idx,arrLen,alpha=1,hueOffset=0,sat=\"100%\",light=\"50%\"){\r\n    let hue=360*idx/arrLen+hueOffset;\r\n    return \"hsla(\"+hue+\", \"+sat+\", \"+light+\",\"+alpha+\")\";\r\n  }\r\n  PropsUpdate(nextProps) {\r\n    console.log(\">>>>\");\r\n    let doMultipleChart=nextProps.targetMeasure.length!=1;\r\n    if(this.targetMeasure_cache != nextProps.targetMeasure ||\r\n      this.inspectionRecGroup != nextProps.inspectionRecGroup)\r\n    {\r\n      this.doChartDataUpdate(nextProps,doMultipleChart);\r\n    }\r\n    this.targetMeasure_cache = nextProps.targetMeasure;\r\n    this.inspectionRecGroup = nextProps.inspectionRecGroup;\r\n\r\n    let N_LSL=-100;\r\n    let N_USL=100;\r\n    let N_value_target=0;\r\n    if(doMultipleChart)\r\n    {\r\n      N_LSL=-100;\r\n      N_USL=100;\r\n      N_value_target=0;\r\n    }\r\n    else\r\n    {\r\n      let _targetMeasure = nextProps.targetMeasure[0];\r\n      N_LSL=_targetMeasure[\"LSL\"];\r\n      N_USL=_targetMeasure[\"USL\"];\r\n      N_value_target=_targetMeasure[\"value\"];\r\n    }\r\n\r\n    if(N_LSL!=0 || N_USL!=0 || N_value_target!=0)\r\n    {\r\n      this.state.chartOpt.options.scales.yAxes[0].ticks={\r\n        min:1.2*(N_LSL-N_value_target)+N_value_target,\r\n        max:1.2*(N_USL-N_value_target)+N_value_target,\r\n      };\r\n    }\r\n    else\r\n    {\r\n\r\n    }\r\n\r\n    this.charObj.update();\r\n      \r\n    //console.log(this.state.chartOpt.options.scales);\r\n\r\n  }\r\n      \r\n  doChartDataUpdate(nextProps,doMultipleChart){\r\n      \r\n      //Make sure the data object is the same, don't change it/ you gonna set the data object to chart again\r\n      this.state.chartOpt.data.labels=[];\r\n      this.state.chartOpt.data.datasets.forEach((datInfo)=>{\r\n          datInfo.data=[];\r\n          datInfo.pointBackgroundColor=[];\r\n        });\r\n\r\n        \r\n      let length = nextProps.inspectionRecGroup.length;\r\n      if(length===0)return;\r\n\r\n\r\n      let _inspectionRecGroup = nextProps.inspectionRecGroup;\r\n      let _xAxisRange = nextProps.xAxisRange;\r\n\r\n\r\n        \r\n      let N_LSL=-100;\r\n      let N_USL=100;\r\n      let N_value_target=0;\r\n      this.state.chartOpt.data.datasets=[];\r\n      if(doMultipleChart)\r\n      {\r\n        N_LSL=-100;\r\n        N_USL=100;\r\n        N_value_target=0;\r\n      }\r\n      else\r\n      {\r\n        let _targetMeasure = nextProps.targetMeasure[0];\r\n        N_LSL=_targetMeasure[\"LSL\"];\r\n        N_USL=_targetMeasure[\"USL\"];\r\n        N_value_target=_targetMeasure[\"value\"];\r\n      }\r\n      //this.state.chartOpt.options.legend.display=(nextProps.targetMeasure.length>1);\r\n      nextProps.targetMeasure.forEach((_targetMeasure,idx,arr)=>{\r\n        \r\n        let pointColor=arr.length>1?this.colorPalette(idx,arr.length,0.4,100):undefined;\r\n        let chart_data = this.genSingleRepPoints(_inspectionRecGroup,_targetMeasure,_xAxisRange,pointColor);\r\n        let groupColor=this.colorPalette(idx,arr.length,1,100);\r\n        let chart_group_data = this.genGroupRepPoints(_inspectionRecGroup,_targetMeasure,_xAxisRange,groupColor);\r\n\r\n        if(doMultipleChart)\r\n        {\r\n          let LSL=_targetMeasure[\"LSL\"];\r\n          let USL=_targetMeasure[\"USL\"];\r\n          let value_target=_targetMeasure[\"value\"];\r\n    \r\n          chart_data.data.forEach(dat=>{\r\n\r\n            dat.original_y=dat.y\r\n            dat.y=\r\n              (N_USL)*this.dataPointNormalizer(dat.y,USL,value_target,LSL)});\r\n  \r\n          chart_group_data.data.forEach(dat=>{\r\n            dat.original_y=dat.y\r\n            dat.y=\r\n              (N_USL)*this.dataPointNormalizer(dat.y,USL,value_target,LSL)});\r\n        }\r\n        else\r\n        {\r\n          chart_data.data.forEach(dat=>{dat.original_y=dat.y});\r\n          chart_group_data.data.forEach(dat=>{dat.original_y=dat.y});\r\n        }\r\n        //console.log(chart_data.data);\r\n        let dataSet = this.state.chartOpt.data.datasets;\r\n        dataSet.push(chart_data);\r\n        dataSet.push(chart_group_data);\r\n        \r\n        dataSet[dataSet.length-2].label=\"\";\r\n        dataSet[dataSet.length-1].label=_targetMeasure.name;\r\n        \r\n        //dataSet[dataSet.length-2].borderColor=(pointColor);\r\n        dataSet[dataSet.length-2].backgroundColor=(pointColor);\r\n\r\n        dataSet[dataSet.length-1].borderColor=(groupColor);\r\n        dataSet[dataSet.length-1].backgroundColor=(groupColor);\r\n        //dataSet[dataSet.length-1].pointRadius=10;\r\n\r\n      })\r\n      this.state.chartOpt.data.labels = \r\n      _inspectionRecGroup.map(g=>datePrintSimple(new Date((g.startTime+g.endTime)/2)));\r\n\r\n\r\n      let annotationTargets=this.props.anotationTargets;\r\n      if(annotationTargets===undefined)\r\n      {\r\n          annotationTargets = this.default_annotationTargets\r\n      }\r\n\r\n      let annoT={\r\n        USL:N_USL,\r\n        LSL:N_LSL,\r\n        value:N_value_target,\r\n      };//_targetMeasure;\r\n\r\n      this.state.chartOpt.options.annotation.annotations = \r\n          annotationTargets.map((annotationTar) => {\r\n          \r\n              let val = annoT[annotationTar.type];\r\n              return ({\r\n                  type: 'line',\r\n                  mode: 'horizontal',\r\n                  scaleID: 'y-axis-0',\r\n                  value: val,\r\n                  borderColor: annotationTar.color,\r\n                  borderWidth: 4,\r\n                  borderDash: [12, 12],\r\n                  label: {\r\n                      position: \"right\",\r\n                      enabled: true,\r\n                      content: \"\"//annotationTar.type+\":\"+val\r\n                  },\r\n                  onMouseover: function (e) {\r\n                    document.getElementById(\"info\").innerHTML = 'whatever';\r\n                  },\r\n              });\r\n          });\r\n      \r\n      this.state.chartOpt.options.tooltips={\r\n        callbacks: {\r\n          title: function(tooltipItem, data) {\r\n            // let datasetIndex = tooltipItem[0].datasetIndex;\r\n            // let index = tooltipItem[0].index;\r\n\r\n            // return data.datasets[datasetIndex].data[index].original_y\r\n            return \"\"\r\n          },\r\n          label: function(tooltipItem, data) {\r\n\r\n            let datasetIndex = tooltipItem.datasetIndex;\r\n            if(datasetIndex===undefined)return \"\"\r\n            let index = tooltipItem.index;\r\n\r\n            console.log(data,data.datasets[datasetIndex]);\r\n            return data.datasets[datasetIndex].data[index].original_y\r\n          },\r\n          afterLabel: function(tooltipItem, data) {\r\n            let datasetIndex = tooltipItem.datasetIndex;\r\n            let index = tooltipItem.index;\r\n            let dataOnTip=data.datasets[datasetIndex].data[index];\r\n            let stat = dataOnTip.stat;\r\n            if(stat===undefined)return dataOnTip.x+\"\\ntag:\"+dataOnTip.tag;\r\n\r\n            let groupSize = dataOnTip.data.group.length;\r\n            if(groupSize==0)return dataOnTip.x;\r\n            let str_arr=[\r\n              moment(dataOnTip.data.group[0].time_ms).format(\"YYYY/MM/DD , h:mm:ss a\"),\r\n              moment(dataOnTip.data.group[groupSize-1].time_ms).format(\"YYYY/MM/DD , h:mm:ss a\")\r\n            ];\r\n\r\n\r\n            let str = Object.keys(stat).map(key=>key+\":\"+\r\n              ((stat[key]!=null)?stat[key].toFixed(4):\"NULL\")\r\n            );\r\n            str_arr = str_arr.concat(str);\r\n            if(dataOnTip.data.group!==undefined)\r\n              str_arr.push(\"count:\"+dataOnTip.data.group.length);\r\n            return str_arr;\r\n\r\n\r\n          }\r\n        },\r\n        backgroundColor: '#FFF',\r\n        titleFontSize: 16,\r\n        titleFontColor: '#0066ff',\r\n        bodyFontColor: '#000',\r\n        bodyFontSize: 14,\r\n        displayColors: true\r\n      }\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n      var ctx = document.getElementById(this.divID).getContext(\"2d\");\r\n\r\n      this.charObj = new Chart(ctx, this.state.chartOpt);\r\n      this.PropsUpdate(this.props);\r\n  }\r\n\r\n  render() {\r\n    return <div className={this.props.className} style={this.props.style}> \r\n        <canvas id={this.divID}  style={{height: \"100%\"}} className={this.props.className}/>\r\n    </div>\r\n  }\r\n\r\n}\r\n\r\nfunction Date_addDay(date,addDays)\r\n{\r\n  if( date===undefined)date=new Date();\r\n\r\n  return date.setDate(date.getDate() + addDays);\r\n}\r\n\r\nclass InspRecStream\r\n{\r\n  constructor(){\r\n    this.reset();\r\n    this.newFeedCallBack=(newStream,fullStream)=>console.log(\"newFeedCallBack=>\",newStream,fullStream);\r\n    this.liveFeedMode=false;\r\n  }\r\n  \r\n  resetStreamInfo()\r\n  {\r\n    this.rec=[];\r\n    this.liveFeedInterval=10000;\r\n    this.passiveQueryRange=[];\r\n    this.liveQueryRange=[];\r\n    if(this.timeoutHDL!==undefined)\r\n    {\r\n      clearTimeout(this.timeoutHDL);\r\n    }\r\n    this.timeoutHDL=undefined;\r\n  }\r\n  reset()\r\n  {\r\n    this.defFile=undefined;\r\n    this.resetStreamInfo();\r\n  }\r\n\r\n  setDefFile(defFile)\r\n  {\r\n    this.resetStreamInfo();\r\n    this.defFile=JSON.parse(JSON.stringify(defFile));\r\n    console.log(\"setDefFile=\",defFile);\r\n  }\r\n\r\n  newStreamFeed(inspectionRec)\r\n  {\r\n    inspectionRec.sort(function(a, b) {\r\n      return a.time_ms - b.time_ms;\r\n    })\r\n\r\n    if(this.rec.length>0)\r\n    {\r\n      let lastMsInRec = this.rec[this.rec.length-1].time_ms;\r\n      let recAfterLast = inspectionRec.filter((srec)=>srec.time_ms>lastMsInRec);\r\n      let concatArr = this.rec.concat(recAfterLast);\r\n      console.log( this.rec.length,inspectionRec.length,concatArr.length);\r\n      \r\n      this.rec = concatArr;\r\n\r\n    }\r\n    else\r\n    {\r\n      this.rec = inspectionRec;\r\n    }\r\n    this.newFeedCallBack(inspectionRec,this.rec);\r\n  }\r\n  setLiveFeedMode(enable){\r\n    console.log(enable);\r\n    if(this.rec.length<0)\r\n    {\r\n      enable=false;\r\n    }\r\n\r\n    console.log(this.rec);\r\n    if(enable)\r\n    {\r\n      \r\n      if(this.timeoutHDL==undefined)\r\n      {\r\n        this.liveQueryInspRec();\r\n      }\r\n    }\r\n    else\r\n    {\r\n      if(this.timeoutHDL!==undefined)\r\n      {\r\n        clearTimeout(this.timeoutHDL);\r\n        this.timeoutHDL=undefined;\r\n      }\r\n    }\r\n    return this.liveFeedMode=enable;\r\n  }\r\n\r\n  liveQueryInspRec(timeRange,maxResults,sampleCount)\r\n  {\r\n    if(timeRange==undefined)\r\n    {\r\n      if(this.rec.length>0)\r\n      {\r\n        let lastMsInRec = this.rec[this.rec.length-1].time_ms;\r\n        timeRange=[moment(lastMsInRec)._d.getTime(), moment(Date_addDay(new Date(),1))._d.getTime()];\r\n        // console.log(lastMsInRec,moment(lastMsInRec));\r\n      }\r\n      else\r\n      {\r\n        console.log(\"No existed rec to do live query\");\r\n        \r\n        this.timeoutHDL =undefined;\r\n        return undefined;\r\n      }\r\n    }\r\n    console.log(\"timeRange=\"+timeRange);\r\n    return DB_Query.inspectionQuery(this.defFile.featureSet_sha1,timeRange[0],timeRange[1],maxResults,sampleCount)\r\n    .then((queryResult)=>{\r\n      let inspectionRec = queryResult.map(res=>res.InspectionData[0]);\r\n      this.newStreamFeed(inspectionRec);\r\n      if(this.liveFeedMode)\r\n      {\r\n        this.timeoutHDL = \r\n          setTimeout(()=>this.liveQueryInspRec(),this.liveFeedInterval);\r\n      }\r\n      else\r\n      {\r\n        this.timeoutHDL =undefined;\r\n      }\r\n      return inspectionRec;\r\n    })\r\n  }\r\n  queryInspRec(timeRange=[moment(Date_addDay(new Date(),-7)), moment(Date_addDay(new Date(),1))],sampleCount=undefined)\r\n  {\r\n    if(this.defFile===undefined)return false;\r\n    this.passiveQueryRange = timeRange;\r\n\r\n    //this.liveFeedMode =(moment().isBefore(timeRange[1]));\r\n    if(!this.liveFeedMode)\r\n    {\r\n      this.resetStreamInfo();\r\n    }\r\n    return this.liveQueryInspRec(timeRange,undefined,sampleCount);\r\n  }\r\n\r\n\r\n  queryInspRecSize(timeRange=[moment(Date_addDay(new Date(),-7)), moment(Date_addDay(new Date(),1))])\r\n  {\r\n    return DB_Query.inspectionQuery(this.defFile.featureSet_sha1,timeRange[0],timeRange[1],100*10000,undefined,\r\n      {\r\n        \"_id\":1,\r\n      },\r\n      {\r\n        $count: \"count\"\r\n      })\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nfunction ListInfoEditUI ({shape_list,initRank=0,onListInfoChange}){\r\n      \r\n  const [sliderV,setSliderV]=useState(initRank);\r\n  const [listInfo,setListInfo]=useState({});\r\n  let measureList = shape_list\r\n    .filter(shape=>shape.type===\"measure\");\r\n  let rankMax=measureList.reduce((max,m)=>max<m.rank?m.rank:max,0);\r\n  let rankMin=measureList.reduce((min,m)=>min>m.rank?m.rank:min,0);\r\n\r\n  if(rankMin==1000)\r\n  {\r\n    rankMin=0;\r\n    rankMax=0;\r\n  }\r\n  if(rankMin==rankMax)\r\n  {\r\n    rankMin=0;\r\n  }\r\n  let marks = {};\r\n\r\n\r\n  marks[rankMin]=rankMin+\"\";\r\n  marks[rankMax]=rankMax+\"\";\r\n  measureList.forEach((m)=>{\r\n    if(m.rank!==undefined)\r\n    {\r\n      marks[m.rank]=m.rank+\"\";\r\n    }\r\n  });\r\n\r\n\r\n  useEffect(()=>{\r\n    if(onListInfoChange==undefined)return;\r\n    let new_list_info={};\r\n    shape_list.forEach((s)=>{\r\n      new_list_info[s.id]={\r\n        name:s.name,\r\n        selected:(s.rank===undefined)||(s.rank<=sliderV)};\r\n    });\r\n    setListInfo(new_list_info);\r\n    onListInfoChange(new_list_info);\r\n  },[sliderV]);\r\n\r\n\r\n  if(rankMin==0 && rankMax==0)\r\n  {\r\n    return null;\r\n  }\r\n\r\n  return <div>\r\n    <div>Rank:</div>\r\n    <Slider\r\n      min={rankMin}\r\n      max={rankMax}\r\n      onChange={setSliderV}\r\n      marks={marks}\r\n      value={sliderV}\r\n      style={{width:\"300px\",    \r\n      marginLeft: \"auto\",\r\n      marginRight:\"auto\"}}\r\n    />\r\n    \r\n    {Object.keys(listInfo).map(key=><CheckableTag\r\n    checked={listInfo[key].selected}\r\n    onChange={(checked)=>{\r\n      let nLInfo={...listInfo};\r\n      nLInfo[key]={ ...nLInfo[key], selected:checked}\r\n      \r\n      setListInfo(nLInfo);\r\n      onListInfoChange(nLInfo);\r\n    }}>{listInfo[key].name}</CheckableTag>)}\r\n  \r\n  </div>;\r\n}\r\n\r\n\r\n\r\nclass APP_ANALYSIS_MODE extends React.Component{\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.ec_canvas = null;\r\n    this.state={\r\n      defFileSearchName:\"\",\r\n      dateRange:[moment(Date_addDay(new Date(),-1)), moment(Date_addDay(new Date(),1))],\r\n      displayRange:[moment(0), moment(Date_addDay(new Date(),1))],\r\n      inspectionRec:[],\r\n        inspectionRec_TagFiltered:[],\r\n      inspectionRecGroup:[],\r\n      groupInterval:2*60*1000,//10 mins\r\n      liveFeedMode:false,\r\n      dataInSync:false,\r\n      controlChartOverlap:false,\r\n      displayListInfo:{},\r\n      tagState:{},\r\n      modalInfo:undefined\r\n    };\r\n    this.recStream=new InspRecStream();\r\n  }\r\n  \r\n\r\n  stateUpdate(obj) {\r\n    return this.setState({...this.state,...obj});\r\n  }\r\n  liveFeedMode_ctrl(enable=!this.state.liveFeedMode) {\r\n    //console.log(enable);\r\n    enable = this.recStream.setLiveFeedMode(enable);\r\n    return this.stateUpdate({liveFeedMode:enable});\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if(nextProps.defFile!==this.props.defFile)\r\n    {\r\n      console.log(\"shouldComponentUpdate\");\r\n      this.recStream.setDefFile(nextProps.defFile);\r\n    }\r\n    return true;\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState)\r\n  {\r\n    if(nextProps.defFile===undefined)return null;\r\n    if(nextProps.defFile===prevState.__cached_defFile)return prevState;\r\n    let defFile = dclone(nextProps.defFile);\r\n    let features=defFile.featureSet[0].features;\r\n    let __decorator=defFile.featureSet[0].__decorator;\r\n\r\n    //order the feature array according to the __decorator\r\n    let featureInOrder=__decorator.list_id_order.map(id=>features.find(f=>f.id==id));\r\n    defFile.featureSet[0].features=featureInOrder;\r\n\r\n    if(__decorator.control_margin_info===undefined)__decorator.control_margin_info={};\r\n\r\n    let __control_margin_info=__decorator.control_margin_info;\r\n\r\n    {//back up \r\n      __control_margin_info[\"__DEFAULT__\"]=dclone(defFile.featureSet[0].features);\r\n      // console.log(defFile);\r\n\r\n\r\n      \r\n    }\r\n\r\n\r\n\r\n    // console.log(features,__decorator.list_id_order,featureInOrder);\r\n    return {...prevState,defFile,__cached_defFile:nextProps.defFile};\r\n  }\r\n  render() {\r\n    console.log(\">>>>\",this.state);\r\n    if(this.state.defFile===undefined)return null;\r\n    let menu_height=\"HXA\";//auto\r\n    let MenuSet=[];\r\n    let menuStyle={\r\n      top:\"0px\",\r\n      width:\"100px\"\r\n    }\r\n\r\n    let dateRangeReady = \r\n      (this.state.dateRange.length===2) &&\r\n      (this.state.dateRange.reduce(\r\n        (isReady,date)=> \r\n          ( isReady) && \r\n          ( date._d !==undefined) && \r\n          ( date._d.getTime !==undefined)\r\n      ,true));\r\n\r\n    let dateRange=this.state.dateRange.map(dr=>dr._d);\r\n    let DefFileHash = this.props.DefFileHash;\r\n    let DefFileName = this.props.DefFileName;\r\n    let defFileReady = \r\n      isString(this.props.DefFileHash)&&\r\n      this.props.DefFileHash.length>5;\r\n\r\n    const dateFormat = 'YYYY/MM/DD';\r\n    // console.log( this.state.defFile);\r\n    let measureList = this.state.defFile.featureSet[0].features\r\n      .filter(feature=>\r\n        (this.state.displayListInfo[feature.id]!==undefined) &&\r\n        (this.state.displayListInfo[feature.id].selected) &&\r\n        (feature.type===\"measure\"));\r\n    \r\n    // console.log(this.state.defFile);\r\n    document.title = this.state.defFile.name; \r\n    let HEADER=<Typography>\r\n      <Title>{this.state.defFile.name}</Title>\r\n    </Typography>;\r\n    \r\n    let graphCtrlUI=null;\r\n\r\n    if(this.state.inspectionRec.length>0)\r\n    {    \r\n      graphCtrlUI = [\r\n        <Slider range \r\n          min={this.state.inspectionRec[0].time_ms-1000}\r\n          max={this.state.inspectionRec[this.state.inspectionRec.length-1].time_ms+1000}\r\n          defaultValue={\r\n              [this.state.inspectionRec[0].time_ms-1000, \r\n              this.state.inspectionRec[this.state.inspectionRec.length-1].time_ms+1000]} \r\n          step={1000*60*5}\r\n          tipFormatter={(time)=>datePrintSimple(new Date(time))}\r\n          onChange={(data)=>this.stateUpdate({displayRange:data})}\r\n        />,\r\n        <Checkbox checked={this.state.liveFeedMode} onChange={(ev)=>this.liveFeedMode_ctrl(ev.target.checked)}>LIVE</Checkbox>,\r\n        \"  抽檢間隔\",\r\n        <TimePicker defaultValue={moment('0:'+(this.state.groupInterval/60000), 'HH:mm')} format={'HH:mm'} hourStep={3} minuteStep={1} allowClear={false} \r\n          onChange={(t)=>\r\n          {\r\n            if(t===null)return;\r\n            console.log(t);\r\n            let mo=t._d.getTime();\r\n            let day_base=moment(t._d).startOf('date')._d.getTime();\r\n            console.log(mo-day_base)\r\n            let groupInterval = mo-day_base;\r\n            console.log(\"TimePicker\",this.state.inspectionRec_TagFiltered);\r\n            let inspectionRecGroup =\r\n              inspectionRecGroup_Generate(this.state.inspectionRec_TagFiltered,groupInterval,measureList);\r\n\r\n            this.stateUpdate({inspectionRecGroup,groupInterval});\r\n        }}/>,\r\n        <Checkbox checked={this.state.controlChartOverlap} onChange={(ev)=>this.setState({controlChartOverlap:ev.target.checked})}>重疊顯示</Checkbox>,\r\n      ]\r\n\r\n    }\r\n\r\n    \r\n    console.log(measureList);\r\n    let graphUI=null;\r\n    if(this.state.controlChartOverlap)\r\n    {\r\n      graphUI =\r\n      <div  style={{width:\"95%\",height:\"100%\"}}> \r\n        <ControlChart inspectionRecGroup={this.state.inspectionRecGroup} \r\n          style={{height:\"100%\"}}\r\n          key={\"_\"}\r\n          targetMeasure={measureList} \r\n          xAxisRange={this.state.displayRange}/>\r\n      </div>\r\n    }\r\n    else\r\n    {\r\n      graphUI =\r\n      <div  style={{width:\"95%\"}}> \r\n        {measureList.map(m=>\r\n        <ControlChart inspectionRecGroup={this.state.inspectionRecGroup} \r\n          style={{height:\"400px\"}}\r\n          key={m.name+\"_\"}\r\n          targetMeasure={[m]} \r\n          xAxisRange={this.state.displayRange}/>)}\r\n      </div>\r\n    }\r\n\r\n\r\n    let modalDisplay=this.state.modalInfo===undefined?null:\r\n    <Modal title={this.state.modalInfo.title} visible={this.state.modalInfo.visible}  maskClosable={false} closable={false}\r\n      onOk={this.state.modalInfo.onOK} okText={this.state.modalInfo.okText}\r\n      onCancel={this.state.modalInfo.onCancel} cancelText={this.state.modalInfo.cancelText}>\r\n      {this.state.modalInfo.content}\r\n    </Modal>;\r\n    \r\n    return(\r\n    <div className=\"HXF\">\r\n      \r\n      <div className=\"overlayCon s overlayCon width12 HXF\">\r\n        \r\n        {HEADER}\r\n        <div className=\"s height12\">\r\n\r\n          <RangePicker key=\"RP\"\r\n            defaultValue={this.state.dateRange} \r\n            onChange={(date)=>this.stateUpdate({dateRange:date})}/>\r\n\r\n          <Button type=\"primary\" icon=\"search\" disabled={ (!dateRangeReady || !defFileReady) || (this.state.dataInSync)} onClick={\r\n            ()=>{\r\n              this.recStream.newFeedCallBack=\r\n                (newStream,fullStream)=>{\r\n                  if(newStream.length>0)\r\n                  {\r\n                    let latestTime=newStream[newStream.length-1].time_ms;\r\n                    let inspectionRecGroup =\r\n                      inspectionRecGroup_Generate(fullStream,this.state.groupInterval,measureList);\r\n                    this.stateUpdate({\r\n                      inspectionRec:fullStream,\r\n                      inspectionRecGroup:inspectionRecGroup,\r\n                        inspectionRec_TagFiltered:fullStream,\r\n                      displayRange:[this.state.displayRange[0],moment(latestTime+1000)]\r\n                    });\r\n\r\n                    //console.log(\"fullStream=\",fullStream);\r\n                  }\r\n                }\r\n              this.stateUpdate({dataInSync:true});\r\n\r\n              this.recStream.queryInspRecSize(dateRange.map(d=>d.getTime())).then(result=>{\r\n\r\n                let dataCount=result[0].count;\r\n                console.log(dataCount)\r\n                let warn_limit=20000;\r\n                if(dataCount<warn_limit)\r\n                {\r\n                  this.recStream.queryInspRec(dateRange.map(d=>d.getTime())).then(result=>{\r\n                    this.stateUpdate({dataInSync:false});\r\n                  }).catch(err=>{\r\n                    this.stateUpdate({dataInSync:false});\r\n                  });\r\n                }\r\n                else\r\n                {\r\n                  \r\n                  this.stateUpdate({modalInfo:{\r\n                    title:\"警告\",\r\n                    visible:true,\r\n                    onOK:()=>{\r\n                      \r\n                      this.recStream.queryInspRec(dateRange.map(d=>d.getTime())).then(result=>{\r\n                        this.stateUpdate({dataInSync:false});\r\n                      }).catch(err=>{\r\n                        this.stateUpdate({dataInSync:false});\r\n                      });\r\n                      this.stateUpdate({modalInfo:undefined});\r\n                    },\r\n                    onCancel:()=>{\r\n                      // this.stateUpdate({modalInfo:undefined,dataInSync:false});\r\n                      \r\n                      this.recStream.queryInspRec(dateRange.map(d=>d.getTime()),warn_limit).then(result=>{\r\n                        this.stateUpdate({dataInSync:false});\r\n                      }).catch(err=>{\r\n                        this.stateUpdate({dataInSync:false});\r\n                      });\r\n                      this.stateUpdate({modalInfo:undefined});\r\n                    },\r\n                    content:\"查詢結果數量:\"+dataCount+\" > \"+warn_limit+\" 取樣下載\"+warn_limit+\"個資料? 或是仍要全下載?\",\r\n                    okText:\"全下載\",\r\n                    cancelText:\"取樣下載\"+warn_limit+\"個資料\"\r\n                  }});\r\n                  \r\n                }\r\n\r\n\r\n\r\n                // this.stateUpdate({dataInSync:false});\r\n              }).catch(err=>{\r\n                this.stateUpdate({dataInSync:false});\r\n              });\r\n\r\n            }} />\r\n            \r\n          <Button type=\"primary\" icon=\"download\" disabled={!dateRangeReady || !defFileReady || this.state.inspectionRec.length===0} \r\n            onClick={()=>{\r\n              let ReportName=this.state.defFile.name+\"_\"+YYYYMMDD(new Date());\r\n              let csv_arr= convertInspInfo2CSV(ReportName,measureList,this.state.inspectionRecGroup,this.state.tagState);\r\n              let str = csv_arr.join('');\r\n              //copyStringToClipboard(str);\r\n              downloadString(csv_arr.join(''), \"text/csv\", ReportName+\".csv\");\r\n            }} />\r\n\r\n          {modalDisplay}\r\n          資料數:{this.state.inspectionRec_TagFiltered.length}\r\n            <hr style={{width:\"80%\"}}/>\r\n            <RelatedUsageInfo fullStream2Tag={this.state.inspectionRec}\r\n              control_margin_set={this.state.defFile.featureSet[0].__decorator.control_margin_info}\r\n              onTagStateChange={(tagState)=>{\r\n                  \r\n\r\n                  let updatedDefFile ={...this.state.defFile};\r\n                  // updatedDefFile\r\n                  let updatedDefFile_feature=updatedDefFile.featureSet[0];\r\n                  let __deco_control_margin_info=updatedDefFile_feature.__decorator.control_margin_info;\r\n                  let new_feature=dclone(__deco_control_margin_info[\"__DEFAULT__\"]);\r\n\r\n                  console.log(updatedDefFile,new_feature);\r\n\r\n\r\n                  let mustList = Object.keys(tagState).filter(key=>tagState[key]==1);\r\n                  let mustNotList = Object.keys(tagState).filter(key=>tagState[key]==-1);\r\n\r\n                  let selKey=mustList.find(mustKey=>__deco_control_margin_info[mustKey]!==undefined);\r\n                  if(selKey!==undefined)\r\n                  {\r\n                    let curMargInfo = __deco_control_margin_info[selKey];\r\n                    new_feature = new_feature.map((fea)=>{\r\n                      let matched_cmi=curMargInfo.find(info=>info.id==fea.id);\r\n                      if(matched_cmi===undefined)return fea;\r\n                      \r\n                      return {...fea,...matched_cmi}\r\n                    });\r\n\r\n                  }\r\n                  updatedDefFile.featureSet[0].features=new_feature;\r\n\r\n                  let filterTagsBoolean = \r\n                    this.state.inspectionRec.filter(function(item, index, array){\r\n                        let tArr=item.tag.split(\",\");\r\n                        let everyMust=mustList.every((item)=>tArr.includes(item));\r\n                        let someMustNot=mustNotList.some((item)=>tArr.includes(item));\r\n                        return everyMust && (!someMustNot);\r\n                        //return selectedTrueTags.every((item)=>tArr.includes(item));\r\n                    });\r\n\r\n                  console.log(updatedDefFile);\r\n                  let inspectionRecGroup =\r\n                      inspectionRecGroup_Generate(filterTagsBoolean,this.state.groupInterval,measureList);\r\n                  //console.log(filterTagsBoolean,inspectionRecGroup);\r\n                  this.stateUpdate({\r\n                    tagState,\r\n                    inspectionRecGroup:inspectionRecGroup,\r\n                    inspectionRec_TagFiltered:filterTagsBoolean,\r\n                    defFile:updatedDefFile\r\n                  });\r\n\r\n\r\n              }}/>\r\n\r\n\r\n            <ListInfoEditUI shape_list={this.state.defFile.featureSet[0].features.filter(feature=>(feature.type===\"measure\"))}\r\n            onListInfoChange={(listInfo)=>{\r\n              console.log(listInfo);\r\n              this.setState({displayListInfo:listInfo})\r\n            }}/>\r\n            \r\n            <hr style={{width:\"80%\"}}/>\r\n        </div>\r\n\r\n        {graphCtrlUI}\r\n        {graphUI}\r\n        <div key=\"k1\" className={\"s overlay scroll MenuAnim \" + menu_height} style={menuStyle}>\r\n          {MenuSet}\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass RelatedUsageInfo extends React.Component{\r\n///query/deffile?name=BOS-LT13BH3421&\r\n// http://localhost:3000/hyvision_monitor/0.0.0/?v=0&hash=9fa42a5e990e4da632070e95daf14ec50de8a112&name=BOS-LT13BH3421\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            tags:{\r\n                //\"name\":false\r\n            },\r\n            init:true\r\n            // DefFileInfo:[],\r\n        };\r\n        \r\n        this.checkInspectionRec=undefined;\r\n        // this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(this.checkInspectionRec===nextProps.fullStream2Tag)\r\n        {\r\n            return;\r\n        }\r\n        this.checkInspectionRec=nextProps.fullStream2Tag;\r\n        console.log(\"props.fullStream2Tag\",nextProps.fullStream2Tag);\r\n        const uniSet2 = new Set();\r\n        // uniSet2.add(\"judgeReport Tag\");\r\n        if(nextProps.fullStream2Tag.length>0){\r\n            nextProps.fullStream2Tag.forEach(function(e,i,a){\r\n                //console.log(\"e.tag=\",e.tag);\r\n                let tagSplit=e.tag.split(\",\");\r\n                //console.log(\"e.tag.split=\",e.tagSplit);\r\n                tagSplit.forEach(function(e2,i2,a2){\r\n                    //console.log(\"forEach2\",e2);\r\n                    if(e2.length!=0)\r\n                        uniSet2.add(e2);\r\n                });\r\n            });\r\n            let tags2={};\r\n            Array.from(uniSet2).forEach(function(key){\r\n                tags2[key]=0;\r\n            });\r\n\r\n            this.setState( {tags:tags2});\r\n\r\n            this.props.onTagStateChange(tags2);\r\n        }\r\n    }\r\n    handleTagChange(){\r\n        console.log(\"handleTagChange\");\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, prevState)\r\n    {\r\n        console.log(\"props.fullStream2Tag\",props.fullStream2Tag);\r\n        const uniSet2 = new Set();\r\n        // uniSet2.add(\"judgeReport Tag\");\r\n        if(props.fullStream2Tag.length>0){\r\n            props.fullStream2Tag.forEach(function(e,i,a){\r\n                //console.log(\"e.tag=\",e.tag);\r\n                let tagSplit=e.tag.split(\",\");\r\n                //console.log(\"e.tag.split=\",e.tagSplit);\r\n                tagSplit.forEach(function(e2,i2,a2){\r\n                    //console.log(\"forEach2\",e2);\r\n                    if(e2.length!=0)\r\n                        uniSet2.add(e2);\r\n                });\r\n            });\r\n            let tags2={...prevState.tags};\r\n            Array.from(uniSet2).forEach(function(key){\r\n              if(tags2[key]===undefined)\r\n                tags2[key]=0;\r\n            });\r\n            if(prevState.init==true)\r\n            {\r\n              props.onTagStateChange(tags2);\r\n            }\r\n            return {tags:tags2,init:false};\r\n\r\n        }\r\n        return null;\r\n    }\r\n\r\n    handleTagChange = (key,onoff) =>\r\n    {\r\n      let tags2={...this.state.tags};\r\n      //if the special tag is set to SET, unset other special tags.\r\n      if(onoff==1 && this.props.control_margin_set!==undefined)\r\n      {\r\n        if(this.props.control_margin_set[key]!==undefined)\r\n        {\r\n          Object.keys(tags2).forEach((key)=>{\r\n            if(this.props.control_margin_set[key]!==undefined)\r\n            {\r\n              tags2[key]=0;\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n        if(key===undefined)\r\n        {\r\n          return;\r\n        }\r\n        if(key==null)\r\n        {\r\n          if(Object.keys(tags2).every(key=>tags2[key]==onoff))\r\n          {\r\n            onoff=0;\r\n          }\r\n          Object.keys(tags2).forEach((key)=>{\r\n            tags2[key]=onoff;\r\n          });\r\n        }\r\n        else\r\n        {\r\n          tags2[key]=onoff;\r\n        }\r\n        this.props.onTagStateChange(tags2);\r\n        this.setState( {tags:tags2});\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"this.state.tags\",this.state.tags);\r\n        // control_margin_set\r\n        return (\r\n          <>\r\n            <Tag color=\"#87d068\" \r\n            onClick={_=>this.handleTagChange(null,1)}\r\n            >O</Tag>:\r\n            {Object.keys(this.state.tags).map((key)=>{\r\n              let tagName=key;\r\n              if(this.props.control_margin_set!==undefined && this.props.control_margin_set[key]!==undefined)\r\n              {\r\n                tagName=\"[\"+key+\"]\";\r\n              }\r\n                return (\r\n                  <Tag \r\n                  color={(this.state.tags[key]==1)?\"#87d068\":undefined}\r\n                  key={key}\r\n                  onClick={_=>this.handleTagChange(key,(this.state.tags[key]!=1)?1:0)}\r\n                  >{tagName}</Tag>\r\n                );\r\n            })\r\n            \r\n            }\r\n\r\n            <br/>\r\n            <Tag color=\"#f50\"\r\n            onClick={_=>this.handleTagChange(null,-1)}\r\n            >X</Tag>:\r\n            {Object.keys(this.state.tags).map((key, index, array)=>{\r\n                let tagName=key;\r\n                if(this.props.control_margin_set!==undefined && this.props.control_margin_set[key]!==undefined)\r\n                {\r\n                  tagName=\"[\"+key+\"]\";\r\n                }\r\n                return (\r\n                  <Tag color={(this.state.tags[key]==-1)?\"#f50\":undefined}\r\n                  key={key}\r\n                  onClick={_=>this.handleTagChange(key,(this.state.tags[key]!=-1)?-1:0)}\r\n                  >{tagName}</Tag>\r\n                );\r\n            })\r\n            \r\n            }\r\n          </>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n// function getDef(q_info) {\r\n//     let result\r\n//     console.log(\"q_info\",q_info);\r\n//     DB_Query.defFileQuery(q_info.name,q_info.hash).\r\n//     then((q)=>{\r\n//         if(q.length>0){\r\n//\r\n//             result=q;\r\n//         }else{\r\n//             console.log(\"[X]No result.\");\r\n//         }\r\n//\r\n//     });\r\n//     return result;\r\n// }\r\nexport default APP_ANALYSIS_MODE;","import React , { useState,useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport APP_ANALYSIS_MODE from \"./AnalysisUI\";\r\nimport * as DB_Query from './UTIL/DB_Query';\r\nimport  Modal  from 'antd/lib/modal';\r\nimport QrScanner from 'qr-scanner';\r\nimport jsonp from 'jsonp';\r\n\r\nimport {datePrintSimple} from './UTIL/MISC_Util';\r\n\r\nimport  Typography  from 'antd/lib/typography';\r\nimport Input from 'antd/lib/input';\r\nimport Button from 'antd/lib/button';\r\nimport Table from 'antd/lib/table';\r\nimport Col from 'antd/lib/col';\r\nimport Row from 'antd/lib/row';\r\n// import { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons-react';\r\n//import PlusOutlined from '@ant-design/icons/PlusOutlined';\r\nimport Layout from 'antd/lib/layout';\r\nQrScanner.WORKER_PATH = \"./qr-scanner-worker.min.js\";\r\n// import { WarningOutlined} from '@ant-design/icons';\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\nclass WebCam_SQScan extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n   \r\n  componentDidMount() {\r\n    let video =this.refs.QR_WebCam;\r\n    \r\n    QrScanner.hasCamera().then(hasCamera => console.log(hasCamera));\r\n    this.qrScanner = new QrScanner(video, this.props.onScanResult);\r\n    \r\n    this.qrScanner.start();\r\n    console.log(this.qrScanner);\r\n  }\r\n  componentWillUnmount() {\r\n    this.qrScanner.destroy();\r\n    this.qrScanner = undefined;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <video ref=\"QR_WebCam\" className={this.props.className} style={this.props.style} muted playsInline/>\r\n    );\r\n  }\r\n}\r\n\r\nfunction getAllUrlParams(url) {\r\n\r\n  // get query string from url (optional) or window\r\n  var queryString = url ? url.split('?')[1] : window.location.search.slice(1);\r\n\r\n  queryString = decodeURI(queryString);\r\n  // we'll store the parameters here\r\n  var obj = {};\r\n\r\n  // if query string exists\r\n  if (queryString) {\r\n\r\n    // stuff after # is not part of query string, so get rid of it\r\n    queryString = queryString.split('#')[0];\r\n\r\n    // split our query string into its component parts\r\n    var arr = queryString.split('&');\r\n\r\n    for (var i = 0; i < arr.length; i++) {\r\n      // separate the keys and the values\r\n      var a = arr[i].split('=');\r\n\r\n      // set parameter name and value (use 'true' if empty)\r\n      var paramName = a[0];\r\n      var paramValue = typeof (a[1]) === 'undefined' ? true : a[1];\r\n\r\n      // (optional) keep case consistent\r\n      //paramName = paramName.toLowerCase();\r\n      //if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();\r\n\r\n      // if the paramName ends with square brackets, e.g. colors[] or colors[2]\r\n      if (paramName.match(/\\[(\\d+)?\\]$/)) {\r\n\r\n        // create key if it doesn't exist\r\n        var key = paramName.replace(/\\[(\\d+)?\\]/, '');\r\n        if (!obj[key]) obj[key] = [];\r\n\r\n        // if it's an indexed array e.g. colors[2]\r\n        if (paramName.match(/\\[\\d+\\]$/)) {\r\n          // get the index value and add the entry at the appropriate position\r\n          var index = /\\[(\\d+)\\]/.exec(paramName)[1];\r\n          obj[key][index] = paramValue;\r\n        } else {\r\n          // otherwise add the value to the end of the array\r\n          obj[key].push(paramValue);\r\n        }\r\n      } else {\r\n        // we're dealing with a string\r\n        if (!obj[paramName]) {\r\n          // if it doesn't exist, create property\r\n          obj[paramName] = paramValue;\r\n        } else if (obj[paramName] && typeof obj[paramName] === 'string'){\r\n          // if property does exist and it's a string, convert it to an array\r\n          obj[paramName] = [obj[paramName]];\r\n          obj[paramName].push(paramValue);\r\n        } else {\r\n          // otherwise add the property\r\n          obj[paramName].push(paramValue);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction isString(val){\r\n  return (typeof val === 'string' || val instanceof String)\r\n}\r\n\r\nfunction pjsonp(url,timeout=5000,timeoutErrMsg=\"TIMEOUT\")\r\n{\r\n  return new Promise((res,rej)=>{\r\n    let timeoutFlag=undefined;\r\n    if(timeout>0)\r\n    {\r\n      timeoutFlag = setTimeout(()=>{\r\n        timeoutFlag=undefined;\r\n        rej(timeoutErrMsg)\r\n      },timeout);\r\n    }\r\n\r\n    jsonp(url,  (err,data)=>{\r\n      clearTimeout(timeoutFlag);\r\n      if(err === null)\r\n          res(data);\r\n      else\r\n          rej(err)\r\n    });\r\n  });\r\n}\r\n\r\nfunction fetchDeffileInfo(name)\r\n{\r\n  let defFileData=undefined;\r\n  \r\n  return new Promise((res,rej)=>{\r\n    let url=DB_Query.db_url+'/query/deffile?name='+name+'&limit=1000'\r\n    \r\n    pjsonp(url,null).then((data)=>{\r\n\r\n      \r\n      let hashArr = data.map(srec=>srec.DefineFile.featureSet_sha1)\r\n      hashArr = [...new Set(hashArr)];\r\n\r\n      defFileData=hashArr.map((hash)=>{\r\n        let name = data.filter((defF)=>defF.DefineFile.featureSet_sha1==hash)\r\n          .map(defF=>defF.DefineFile.name)\r\n        return {hash,name}\r\n      }).map(defFInfo=>{\r\n        defFInfo.name=[...new Set(defFInfo.name)];\r\n        return defFInfo;\r\n      });\r\n      let hashRegx = hashArr.reduce((acc,hash)=>acc===undefined?hash:acc+\"|\"+hash,undefined)\r\n\r\n      let url=DB_Query.db_url+'/query/inspection?';\r\n      url+='tStart=0&tEnd=2581663256894&limit=999999999&';\r\n      url+='subFeatureDefSha1='+hashRegx+'&'\r\n      url+='projection={\"_id\":0,\"InspectionData.subFeatureDefSha1\":1,\"InspectionData.time_ms\":1,\"InspectionData.tag\":1}&'\r\n      url+='agg=[{\"$group\":{\"_id\":\"$InspectionData.subFeatureDefSha1\",'+\r\n      '\"count\": {\"$sum\":1},'+\r\n      '\"time_start\": {\"$min\":\"$InspectionData.time_ms\"},'+\r\n      '\"time_end\": {\"$max\":\"$InspectionData.time_ms\"},'+\r\n      '\"tags\": {\"$addToSet\":\"$InspectionData.tag\"}'+\r\n      '}}]';\r\n      return pjsonp(url,null)\r\n\r\n    }).then((dataSet)=>{\r\n\r\n      let dataSet_Formatted=\r\n      dataSet.map(data=>{\r\n        data._id=data._id[0]\r\n        return data\r\n      }).reduce((acc,data)=>{\r\n        let id=data._id;\r\n        if(acc[id]===undefined)\r\n        {\r\n          acc[id]=data;\r\n          delete acc[id]._id; \r\n        }\r\n        else\r\n        {\r\n          acc[id].count+=data.count;\r\n          acc[id].time_start=[Math.min(acc[id].time_start[0],data.time_start[0])];\r\n          acc[id].time_end=[Math.max(acc[id].time_end[0],data.time_end[0])];\r\n        }\r\n        return acc;\r\n      },{})\r\n\r\n      //final aggregation\r\n      defFileData.forEach((defF)=>{\r\n        let tar = dataSet_Formatted[defF.hash];\r\n        if(tar!==undefined)\r\n        {\r\n          Object.assign(defF, tar)\r\n\r\n\r\n          defF.tags = defF.tags.flat(9)\r\n            .map(tag=>tag.replace(/^\\,+/g, \"\").replace(/\\,{2,}/g, \",\").split(\",\"))\r\n            .flat(9)\r\n            .filter(tag=>tag.length>0)\r\n          defF.tags = [...new Set(defF.tags)];\r\n        }\r\n      })\r\n      res(defFileData)\r\n    }).catch((err)=>{\r\n      rej(err);\r\n    })\r\n  });\r\n}\r\n\r\n///query/inspection?tStart=1583942400000&tEnd=1584639131675&subFeatureDefSha1_regex=.&projection={\"InspectionData.subFeatureDefSha1\":1}&agg=[{\"$group\":{\"_id\":\"$InspectionData.subFeatureDefSha1\",\"sum\":{\"$sum\":1}}}]\r\n\r\nfunction fetchDeffileInfo_in_insp_time_range(start_ms,end_ms)\r\n{\r\n  let dataSet_Formatted;\r\n  return new Promise((res,rej)=>{\r\n    let url=DB_Query.db_url+\"/query/inspection?tStart=\"+start_ms+\"&tEnd=\"+end_ms+\r\n    '&projection={\"InspectionData.subFeatureDefSha1\":1,\"InspectionData.time_ms\":1,\"InspectionData.tag\":1}'+\r\n    '&agg=[{\"$group\":{\"_id\":\"$InspectionData.subFeatureDefSha1\",'+\r\n      '\"count\":{\"$sum\":1},'+\r\n      '\"time_start\": {\"$min\":\"$InspectionData.time_ms\"},'+\r\n      '\"time_end\": {\"$max\":\"$InspectionData.time_ms\"},'+\r\n      '\"tags\": {\"$addToSet\":\"$InspectionData.tag\"}'+\r\n    '}}]';\r\n\r\n\r\n    pjsonp(url,null).then((dataSet)=>{\r\n\r\n      dataSet_Formatted=\r\n      dataSet.map(data=>{\r\n        data._id=data._id[0]\r\n        return data\r\n      }).reduce((acc,data)=>{\r\n        let id=data._id;\r\n        if(acc[id]===undefined)\r\n        {\r\n          acc[id]=data;\r\n          delete acc[id]._id; \r\n        }\r\n        else\r\n        {\r\n          acc[id].count+=data.count;\r\n          acc[id].time_start=[Math.min(acc[id].time_start[0],data.time_start[0])];\r\n          acc[id].time_end=[Math.max(acc[id].time_end[0],data.time_end[0])];\r\n        }\r\n        return acc;\r\n      },{})\r\n      let hashRegx = Object.keys(dataSet_Formatted).reduce((acc,hash)=>acc===undefined?hash:acc+\"|\"+hash,undefined)\r\n\r\n      console.log(dataSet,dataSet_Formatted,hashRegx);\r\n      //'/query/deffile?featureSet_sha1='+hashRegx\r\n      let url=DB_Query.db_url+'/query/deffile?featureSet_sha1='+hashRegx+\r\n      '&projection={\"DefineFile.name\":1,\"DefineFile.featureSet_sha1\":1,\"createdAt\":1}'\r\n      \r\n      return pjsonp(url,null)\r\n\r\n    }).then((defFileData)=>{\r\n\r\n      console.log(defFileData);\r\n      defFileData = Object.values(defFileData.reduce((obj,df)=>{\r\n        let sha1=df.DefineFile.featureSet_sha1;\r\n        let time = Date.parse(df.createdAt);\r\n        df.p_createdAt = time;\r\n        if(obj[sha1]===undefined || obj[sha1].p_createdAt<df.p_createdAt)\r\n        {\r\n          obj[sha1]=df;\r\n        }\r\n        \r\n        return obj;\r\n      },{}))\r\n\r\n      defFileData.forEach((defF)=>{\r\n        defF.hash=defF.DefineFile.featureSet_sha1;\r\n        defF.name=[defF.DefineFile.name];\r\n        let tar = dataSet_Formatted[defF.hash];\r\n        if(tar!==undefined)\r\n        {\r\n          Object.assign(defF, tar)\r\n          defF.tags = defF.tags.flat(9)\r\n            .map(tag=>tag.replace(/^,+|,+$/g, \"\").replace(/\\,{2,}/g, \",\").split(\",\"))\r\n            .flat(9)\r\n            .filter(tag=>tag.length>0)\r\n          defF.tags = [...new Set(defF.tags)];\r\n        }\r\n      })\r\n      console.log(defFileData);\r\n      res(defFileData)\r\n    }).catch((err)=>{\r\n      rej(err);\r\n    })\r\n  });\r\n}\r\n\r\n\r\nlet CusDisp_DB={\r\n  read:(name)=>\r\n  {\r\n    let defFileData=undefined;\r\n    \r\n    return new Promise((res,rej)=>{\r\n      let url=DB_Query.db_url+'/QUERY/customDisplay?name='+name\r\n      url+='&projection={\"name\":1,\"targetDeffiles\":1}'\r\n      \r\n      pjsonp(url,null).then((data)=>{\r\n        res(data);\r\n      }).catch((err)=>{\r\n        rej(err);\r\n      })\r\n    });\r\n  },\r\n  create:(info,id)=>{\r\n    let defFileData=undefined;\r\n    \r\n    return new Promise((res,rej)=>{\r\n      let url=DB_Query.db_url+'/insert/customdisplay?name='+info.name+\r\n        \"&targetDeffiles=\"+JSON.stringify(info.targetDeffiles)\r\n      if(id!==undefined)\r\n      {\r\n        url+=\"&_id=\"+id;\r\n        \r\n      }\r\n      pjsonp(url,null).then((data)=>{\r\n        res(data);\r\n      }).catch((err)=>{\r\n        rej(err);\r\n      })\r\n    });\r\n  },\r\n  delete:(id)=>{\r\n\r\n    return new Promise((res,rej)=>{\r\n      let url=DB_Query.db_url+'/delete/customdisplay?_id='+id;\r\n      pjsonp(url,null).then((data)=>{\r\n        res(data);\r\n      }).catch((err)=>{\r\n        rej(err);\r\n      })\r\n    });\r\n  }\r\n}\r\nCusDisp_DB.update=(info,id)=>{\r\n  return new Promise((res,rej)=>{\r\n    if(id===undefined)\r\n    {\r\n      return rej(\"Error:No id\");\r\n    }\r\n    CusDisp_DB.create(info,id).then((data)=>{\r\n      res(data);\r\n    }).catch((err)=>{\r\n      rej(err);\r\n    })\r\n  });\r\n}\r\n///delete/customDisplay?_id=5e782cddf40281013bedd142\r\n// fetchCustomDisplayInfo(\"Machine\");\r\n//CusDisp_DB.create({name:\"><>\",targetDeffiles:[{hash:\"sdiosdjciojsdoi\"}]},undefined);\r\n//CusDisp_DB.delete(\"5e771c388b25286acf112810\");\r\nfunction getUrlPath()\r\n{\r\n  return window.location.href.substring(window.location.protocol.length).split('?')[0]\r\n}\r\n\r\nfunction XQueryInput({ onQueryRes,onQueryRej,placeholder,defaultValue }) {\r\n  const [fetchedRecord, setFetchedRecord] = useState([]);\r\n  \r\n  function recentQuery()\r\n  {\r\n    var cur_ms = new Date().getTime();\r\n    fetchDeffileInfo_in_insp_time_range(cur_ms-7*24*60*60*1000,cur_ms+1000000).\r\n    then((res)=>{\r\n\r\n      setFetchedRecord(res);\r\n      onQueryRes(res);\r\n    }).catch((e)=>{\r\n      setFetchedRecord([]);\r\n      if(onQueryRej!==undefined)\r\n        onQueryRej(e)\r\n    });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"1,didUpdate\");\r\n    recentQuery();\r\n\r\n    return () => {\r\n      console.log(\"1,didUpdate ret::\");\r\n    };\r\n  },[]);\r\n\r\n  let searchBox=<Input placeholder={placeholder} defaultValue={defaultValue}\r\n    onPressEnter={(e)=>{\r\n    console.log(e.target.value)\r\n    if(e.target.value==\"\")\r\n    {\r\n      recentQuery();\r\n    }\r\n    else if(e.target.value.length<2)\r\n    {\r\n      \r\n      Modal.confirm({\r\n        // icon: <WarningOutlined/>,\r\n        content: \"請輸入大於兩個字\",\r\n        onOk() {\r\n        },\r\n        onCancel() {\r\n        },\r\n      });\r\n    }\r\n    else\r\n    {\r\n      setFetchedRecord();\r\n      fetchDeffileInfo(e.target.value).\r\n        then((res)=>{\r\n  \r\n          setFetchedRecord(res);\r\n          onQueryRes(res);\r\n        }).catch((e)=>{\r\n          setFetchedRecord([]);\r\n          if(onQueryRej!==undefined)\r\n            onQueryRej(e)\r\n        });\r\n    }\r\n  }} ></Input>\r\n  let fetchBtn=fetchedRecord===undefined?null:\r\n  <div>\r\n\r\n  </div>\r\n\r\n\r\n  let displayInfo=null\r\n  if(fetchedRecord!==undefined)\r\n  {\r\n    // displayInfo = fetchedRecord.map(fetchRec=>{\r\n\r\n    //   let text = fetchRec.name+\" \";\r\n    //   if(fetchRec.count!==undefined)\r\n    //   {\r\n    //     text+=\",count:\"+fetchRec.count;\r\n    //     var dateStart = new Date(fetchRec.time_start[0]);\r\n    //     var dateEnd = new Date(fetchRec.time_end[0]);\r\n    //     text+=\",\"+datePrintSimple(dateStart)+\"~\"+datePrintSimple(dateEnd);\r\n    //     text+=\",tags:\"+fetchRec.tags;\r\n    //   }\r\n\r\n    //   return [\r\n    //     <a href={getUrlPath()+\"?v=0&hash=\"+fetchRec.hash}>{text}</a>,\r\n    //     <br/>]})\r\n    const columns = [\r\n      {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        render: fetchRec => <a href={getUrlPath()+\"?v=0&hash=\"+fetchRec.hash} target=\"_blank\">{fetchRec.name}</a>,\r\n      },\r\n      {\r\n        title: 'count',\r\n        dataIndex: 'count',\r\n        key: 'count',\r\n        sorter: (a, b) => a.count - b.count,\r\n      },\r\n      {\r\n        title: 'Date_Start',\r\n        dataIndex: 'Date_Start',\r\n        key: 'Date_Start',\r\n        render: milliSec => <div>{datePrintSimple(new Date(milliSec))}</div>,\r\n        sorter: (a, b) => a.Date_Start - b.Date_Start,\r\n      },\r\n      {\r\n        title: 'Date_End',\r\n        dataIndex: 'Date_End',\r\n        key: 'Date_End',\r\n        render: milliSec => <div>{datePrintSimple(new Date(milliSec))}</div>,\r\n        sorter: (a, b) => a.Date_End - b.Date_End,\r\n        defaultSortOrder:'descend'\r\n      },\r\n      {\r\n        title: 'Tags',\r\n        dataIndex: 'Tags',\r\n        key: 'Tags',\r\n      }]\r\n\r\n      let dataSource = fetchedRecord.filter(fetchRec=>fetchRec.count!==undefined).map(fetchRec=>{\r\n        let retSrc={\r\n          name:fetchRec\r\n        }\r\n        if(fetchRec.count!==undefined)\r\n        {\r\n          retSrc.count=fetchRec.count;\r\n          // var dateStart = new Date(fetchRec.time_start[0]);\r\n          // var dateEnd = new Date(fetchRec.time_end[0]);\r\n\r\n          retSrc.Date_Start=fetchRec.time_start[0];\r\n          retSrc.Date_End=fetchRec.time_end[0];\r\n          retSrc.Tags=fetchRec.tags.join(\",\");\r\n        }\r\n  \r\n        return retSrc\r\n      })\r\n    console.log(dataSource);\r\n    displayInfo=<Table columns={columns} dataSource={dataSource} pagination={false}/>;\r\n  }\r\n  return (\r\n\r\n    <div>\r\n      {searchBox}\r\n      {displayInfo}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SingleDisplayUI({ displayInfo})\r\n{\r\n  const canvasRef = React.useRef(null)\r\n\r\n\r\n  return <div>\r\n    <Title level={2}>{displayInfo.name}</Title>\r\n    Name:{displayInfo.name}\r\n    {displayInfo.targetDeffiles.map((dfs,id)=>\r\n      \"Def[\"+id+\"]:\"+JSON.stringify(displayInfo.targetDeffiles[id])\r\n    )}\r\n    <canvas  key=\"canv\"\r\n      ref={canvasRef}\r\n      onClick={e => {        \r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        // implement draw on ctx here\r\n      }}\r\n    />\r\n  </div>\r\n}\r\n\r\nfunction CustomDisplayUI({ }) {\r\n  const [displayInfo, setDisplayInfo] = useState(undefined);\r\n\r\n  const [collapsed, setCollapsed] = useState(true);\r\n  useEffect(() => {\r\n    setDisplayInfo(undefined);\r\n    CusDisp_DB.read(\".\").then(data=>{\r\n      console.log(displayInfo);\r\n      setDisplayInfo(data.prod);\r\n    }).catch(e=>{\r\n      console.log(e);\r\n    });\r\n    return () => {\r\n      console.log(\"1,didUpdate ret::\");\r\n    };\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"2,count->useEffect>>\");\r\n  },[displayInfo]);\r\n\r\n  let UI=[];\r\n  if(displayInfo!==undefined)\r\n  {\r\n    console.log(displayInfo);\r\n    UI=[];\r\n    UI.push(<div key=\"Reset\" onClick={()=>setDisplayInfo(undefined)}>RESET....</div>)\r\n    UI.push(<Row  key=\"table\"  style={{height:\"50%\"}}>{displayInfo.map(info=>\r\n      <Col key={info._id} span={12}  style={{height:\"100%\"}}>\r\n        <SingleDisplayUI displayInfo={info}/>\r\n\r\n        <Button key=\"sdsdfk\"\r\n                onClick={() => {\r\n                  info.ddd=\"sss\";\r\n                  CusDisp_DB.update({name:\"OKOK\",targetDeffiles:[{hash:\"\"}]},info._id).then(()=>{\r\n\r\n                    CusDisp_DB.read(\".\").then(data=>{\r\n                      console.log(displayInfo);\r\n                      setDisplayInfo(data.prod);\r\n                    }).catch(e=>{\r\n                      console.log(e);\r\n                    });\r\n                  });\r\n                }}\r\n                style={{ width: '60%' }}\r\n        >\r\n          mod\r\n        </Button>\r\n        <Button type=\"dashed\"\r\n                onClick={() => {\r\n                  setDisplayInfo(undefined);\r\n                  CusDisp_DB.delete(info._id).then(()=>{\r\n\r\n                    CusDisp_DB.read(\".\").then(data=>{\r\n                      console.log(displayInfo);\r\n                      setDisplayInfo(data.prod);\r\n                    }).catch(e=>{\r\n                      console.log(e);\r\n                    });\r\n                  });\r\n                }}\r\n                style={{ width: '60%' }}\r\n        >\r\n          Ｘ\r\n        </Button>\r\n      </Col>\r\n    )}</Row>)\r\n\r\n\r\n  }\r\n  UI.push(<Row  key=\"table2\"  style={{height:\"50%\"}}>\r\n    <Col key={\"sdsd\"} span={12}  style={{height:\"100%\"}}>\r\n      \r\n      <Button type=\"dashed\"\r\n              onClick={() => {\r\n                CusDisp_DB.create({name:\"><>\",targetDeffiles:[{hash:\"sdiosdjciojsdoi\"}]},undefined).then(()=>{\r\n                  CusDisp_DB.read(\".\").then(data=>{\r\n                    console.log(displayInfo);\r\n                    setDisplayInfo(data.prod);\r\n                  }).catch(e=>{\r\n                    console.log(e);\r\n                  });\r\n                });\r\n              }}\r\n              style={{ width: '60%' }}\r\n      >\r\n        Add field\r\n      </Button>\r\n\r\n    </Col></Row>)\r\n\r\n\r\n  return (\r\n\r\n    <Layout style={{height:\"100%\"}}>\r\n      <Layout.Header style={{ color: '#FFFFFF' }} >Header</Layout.Header>\r\n      <Layout>\r\n        <Layout.Sider  style={{ color: '#FFFFFF' }} collapsible collapsed={collapsed} \r\n        onCollapse={()=>setCollapsed(!collapsed)}\r\n        onMouseOut={()=>(collapsed)?null:setCollapsed(true)}\r\n        onMouseOver={()=>(collapsed)?setCollapsed(false):null}\r\n        >\r\n          Sider\r\n        </Layout.Sider>\r\n        <Layout>\r\n          <Layout.Content  style={{ padding: '50px 50px' }}>{UI}</Layout.Content>\r\n          <Layout.Footer>Custom UI v0.0.0</Layout.Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout> \r\n  );\r\n}\r\n\r\n\r\nfunction DBDupMan({ }) {\r\n  const [displayInfo, setDisplayInfo] = useState(undefined);\r\n\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n\r\n  function fetchDeffileInfo_in_insp_time_range(start_ms,end_ms)\r\n  {\r\n    let dataSet_Formatted;\r\n    return new Promise((res,rej)=>{\r\n\r\n    let url=DB_Query.db_url+'/query/deffile?name='+\"\"+'&limit=1000'+\r\n      '&agg=[{\"$group\":{\"_id\":\"$DefineFile.featureSet_sha1\",'+\r\n        '\"count\":{\"$sum\":1}'+\r\n      '}}]';\r\n  \r\n  \r\n      pjsonp(url,null).then((dataSet)=>{\r\n        console.log(dataSet);\r\n      }).catch((err)=>{\r\n        rej(err);\r\n      })\r\n    });\r\n  }\r\n  \r\n  fetchDeffileInfo_in_insp_time_range();\r\n\r\n\r\n  return \">>\";\r\n}\r\n\r\nclass App extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    console.log(getAllUrlParams());\r\n    this.state={\r\n      DefFileInfo:undefined,\r\n      allowQRScan:false,\r\n      UI:undefined\r\n\r\n      //{v: 0, name: \"BOS-LT13BH3421\", hash: \"9fa42a5e990e4da632070e95daf14ec50de8a112\"}\r\n    }\r\n    this.UI_type={\r\n      customDisplay:\"customDisplay\",\r\n      dbDupMan:\"dbDupMan\",\r\n      analysis:\"analysis\",\r\n      search:\"search\",\r\n    }\r\n  }\r\n  componentDidMount() {\r\n\r\n    let urlParam = getAllUrlParams();\r\n    console.log(urlParam);\r\n    if(urlParam.UI===\"customDisplay\")\r\n    {\r\n      this.setState({UI:this.UI_type.customDisplay});\r\n    }\r\n    if(urlParam.UI===\"dbDupMan\")\r\n    {\r\n      this.setState({UI:this.UI_type.dbDupMan});\r\n    }\r\n    else if(urlParam.v!==undefined && urlParam.hash!==undefined)\r\n    {\r\n\r\n      this.onQRScanResult(JSON.stringify(urlParam));\r\n      this.setState({UI:this.UI_type.analysis});\r\n    }\r\n    else\r\n    {\r\n      this.setState({allowQRScan:true,UI:this.UI_type.search});\r\n    }\r\n  }\r\n  \r\n  onDefFileInfoUpdate(info)\r\n  {\r\n    this.setState({...this.state,DefFileInfo:info});\r\n    console.log(info);\r\n    DB_Query.defFileQuery(info.name,info.hash).\r\n      then((q)=>{\r\n        if(q.length>0)\r\n          this.setState({...this.state,defFile:q[q.length-1].DefineFile});\r\n        console.log(q)\r\n      });\r\n  }\r\n\r\n  onQRScanResult(result){\r\n\r\n    try {\r\n      let res_obj=JSON.parse(result);\r\n      if(isString(res_obj.v))\r\n      {\r\n         res_obj.v = Number(res_obj.v);\r\n      }\r\n      if(res_obj.v===0 && res_obj.hash!==undefined && res_obj.hash.length>5)\r\n      {\r\n        console.log(window.location.protocol);\r\n        if(window.location.protocol === 'https:')\r\n        {\r\n          window.location.href = 'http:' + window.location.href.substring(window.location.protocol.length).split('?')[0]+\r\n            \"?v=\"+res_obj.v+\"&hash=\"+res_obj.hash;\r\n          \r\n          console.log(window.location.href);\r\n          this.setState({...this.state,allowQRScan:false});\r\n        }\r\n        else\r\n        {\r\n          this.onDefFileInfoUpdate(res_obj);\r\n        }\r\n      }\r\n    } catch(e) {\r\n        alert(e); // error in the above string (in this case, yes)!\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let UI;\r\n    switch(this.state.UI)\r\n    {\r\n      case this.UI_type.customDisplay:\r\n        UI=<CustomDisplayUI/>;\r\n        break;\r\n      case this.UI_type.dbDupMan:\r\n        UI=<DBDupMan/>;\r\n        break;\r\n      case this.UI_type.analysis:\r\n        UI=<APP_ANALYSIS_MODE \r\n          DefFileHash={this.state.DefFileInfo.hash} \r\n          DefFileName={this.state.DefFileInfo.name}\r\n          defFile={this.state.defFile}/>;\r\n        break;\r\n      case this.UI_type.search:\r\n        UI=<XQueryInput onQueryRes={(res)=>{console.log(res)}} defaultValue=\"\" placeholder=\"輸入名稱\"/>;\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\"  style={{height:\"100%\"}}>\r\n        {UI}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// require('./server/apollo_server.js');\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}