{"version":3,"sources":["logo.svg","UTIL/MISC_Util.js","UTIL/DB_Query.js","UTIL/BPG_Protocol.js","AnalysisUI.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GetObjElement","rootObj","keyTrace","traceIdxTo","length","obj","traceIdxTLen","undefined","i","key","db_url","defFileQuery","name","featureSet_sha1","projection","url","JSON","stringify","defFileQueryStr","Promise","res","rej","jsonp","err","data","console","log","INSPECTION_STATUS","TextEncoder","NA","SUCCESS","FAILURE","CheckableTag","Tag","RangePicker","DatePicker","Title","Typography","Paragraph","Text","logX","datePrintSimple","date","addZero","mm","getMonth","dd","getDate","h","getHours","m","getMinutes","s","getSeconds","getFullYear","join","InspectionRecordGroup_AppendCPK","InspRecGroup","defInspRange","forEach","group","stat","s_stat","defRange","find","s_def","id","cpkInfo","mean","sigma","USL","LSL","target","CPU","CPL","CP","Math","min","CA","CPK","abs","calcCpk","value","Object","assign","inspectionRecGroup_Generate","inspectionRec","groupInterval","measureList","inspectionRecGroup","InspectionRecord","largestInterval","fd","inspGroups","frontGroup","AddNewGroup","new_rec","startTime","time_ms","endTime","push","g","judgeReports","map","x","measures","singleRep","measure","availData","filter","status","reduce","sum","minMax","mM","max","sqrt","InspectionRecordGrouping","Chart","pluginService","register","afterDraw","chart","MEASURERSULTRESION","COLOR","TEXT","ControlChart","props","divID","round","random","charObj","state","chartOpt","type","labels","datasets","borderColor","lineTension","pointBackgroundColor","bezierCurve","options","scales","xAxes","display","distribution","ticks","callback","index","values","toString","source","autoSkip","time","displayFormat","displayFormats","hour","minUnit","yAxes","scaleLabel","elements","line","fill","point","radius","animation","duration","maintainAspectRatio","responsive","title","text","annotation","annotations","legend","tooltips","enabled","pan","mode","zoom","default_annotationTargets","color","nextProps","nextState","this","PropsUpdate","_inspectionRecGroup","_targetMeasure","_xAxisRange","value_target","sumG","recG","concat","acc_chart_data","rep","idx","measureObj","jrep","measureValue","pointColor","val","Date","y","tag","targetValue","bestEffert","repG","this_id_stat","st","arrLen","alpha","hueOffset","sat","light","hue","doMultipleChart","targetMeasure","targetMeasure_cache","doChartDataUpdate","N_LSL","N_USL","N_value_target","update","datInfo","xAxisRange","arr","colorPalette","chart_data","genSingleRepPoints","groupColor","chart_group_data","genGroupRepPoints","dat","original_y","dataPointNormalizer","dataSet","label","backgroundColor","annotationTargets","anotationTargets","annoT","annotationTar","scaleID","borderWidth","borderDash","position","content","onMouseover","e","document","getElementById","innerHTML","callbacks","tooltipItem","datasetIndex","afterLabel","dataOnTip","groupSize","str_arr","moment","format","str","keys","toFixed","titleFontSize","titleFontColor","bodyFontColor","bodyFontSize","displayColors","ctx","getContext","className","style","height","React","Component","Date_addDay","addDays","setDate","InspRecStream","reset","newFeedCallBack","newStream","fullStream","liveFeedMode","rec","liveFeedInterval","passiveQueryRange","liveQueryRange","timeoutHDL","clearTimeout","defFile","resetStreamInfo","parse","sort","a","b","lastMsInRec","recAfterLast","srec","concatArr","enable","liveQueryInspRec","timeRange","maxResults","_d","getTime","subFeatureDefSha1","date_start","date_end","limit","TYPE","DB_Query","then","queryResult","InspectionData","newStreamFeed","setTimeout","ListInfoEditUI","shape_list","initRank","onListInfoChange","useState","sliderV","setSliderV","listInfo","setListInfo","shape","rankMax","rank","rankMin","marks","useEffect","new_list_info","selected","onChange","width","marginLeft","marginRight","checked","nLInfo","APP_ANALYSIS_MODE","ec_canvas","defFileSearchName","dateRange","displayRange","inspectionRec_TagFiltered","dataInSync","controlChartOverlap","displayListInfo","recStream","setState","setLiveFeedMode","stateUpdate","setDefFile","MenuSet","dateRangeReady","isReady","dr","defFileReady","DefFileHash","DefFileName","String","featureSet","features","feature","HEADER","graphCtrlUI","range","defaultValue","step","tipFormatter","ev","liveFeedMode_ctrl","hourStep","minuteStep","allowClear","t","mo","day_base","startOf","graphUI","icon","disabled","onClick","latestTime","queryInspRec","result","catch","ReportName","YYYYMMDD","csv_arr","reportName","inspRecGroup","cur_tagState","ci","pushDataRow","measureReports","trace","RowName","ele","field","additionalColumn","s_group","s_rep","replace","convertInspInfo2CSV","tagState","fileType","fileName","blob","Blob","Uint8Array","createElement","download","href","URL","createObjectURL","dataset","downloadurl","body","appendChild","click","removeChild","revokeObjectURL","downloadString","fullStream2Tag","control_margin_set","__decorator","control_margin_info","onTagStateChange","updatedDefFile","__deco_control_margin_info","new_feature","dclone","mustList","mustNotList","selKey","mustKey","curMargInfo","fea","matched_cmi","info","filterTagsBoolean","item","array","tArr","split","everyMust","every","includes","someMustNot","some","top","prevState","__cached_defFile","featureInOrder","list_id_order","f","RelatedUsageInfo","handleTagChange","onoff","tags2","tags","checkInspectionRec","uniSet2","Set","e2","i2","a2","add","Array","from","_","tagName","QrScanner","WORKER_PATH","getAllUrlParams","queryString","window","location","search","slice","decodeURI","paramName","paramValue","match","exec","pjsonp","timeout","timeoutErrMsg","timeoutFlag","CusDisp_DB","read","create","targetDeffiles","delete","XQueryInput","onQueryRes","onQueryRej","placeholder","fetchedRecord","setFetchedRecord","cur_ms","start_ms","end_ms","dataSet_Formatted","_id","acc","count","time_start","time_end","hashRegx","hash","defFileData","df","sha1","DefineFile","createdAt","p_createdAt","defF","tar","flat","fetchDeffileInfo_in_insp_time_range","searchBox","onPressEnter","hashArr","defFInfo","fetchDeffileInfo","displayInfo","columns","dataIndex","render","fetchRec","substring","protocol","sorter","milliSec","Date_Start","Date_End","dataSource","retSrc","Tags","pagination","SingleDisplayUI","canvasRef","useRef","level","dfs","ref","current","CustomDisplayUI","setDisplayInfo","collapsed","setCollapsed","prod","UI","span","ddd","Header","Sider","collapsible","onCollapse","onMouseOut","onMouseOver","Content","padding","Footer","DBDupMan","App","DefFileInfo","allowQRScan","UI_type","customDisplay","dbDupMan","analysis","urlParam","v","onQRScanResult","q","res_obj","Number","onDefFileInfoUpdate","alert","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uKAAAA,EAAOC,QAAU,IAA0B,kC,oMCuDpC,SAASC,EAAcC,EAAQC,GACrC,IAD8CC,EAC/C,uDAD0DD,EAASE,OAAO,EAEpEC,EAAMJ,EACNK,EAAeH,EAAW,EAC9B,QAAgBI,IAAZN,EAAJ,CACA,IAAK,IAAIO,EAAE,EAAEA,EAAEF,EAAaE,IAAK,CAC/B,IAAIC,EAAMP,EAASM,GAInB,QAAYD,KAFZF,EAAMA,EAAII,IAEY,OAExB,OAAOJ,G,OAmBF,I,qFCnFHK,EAAS,6BAoBb,SAASC,EAAaC,EAAKC,EAAgBC,GAGvC,IAAIC,EAAML,EAAO,iBAIjB,OAFAK,GAAK,aACLA,GAxBJ,SAAyBH,EAAKC,EAAgBC,GAE5C,IAAIC,EAAK,GAaT,YAXUR,IAAPK,IACHG,GAAK,SAASH,QAEOL,IAAlBM,IACDE,GAAK,oBAAoBF,GAGzBE,QADcR,IAAbO,EACI,eAAeE,KAAKC,UAAUH,GAE9B,iBAWAI,CAAgBN,EAAKC,EAAgBC,GACnC,IAAIK,SAAQ,SAACC,EAAIC,GAEpBC,IAAMP,GAAM,SAACQ,EAAIC,GACF,OAARD,EACCH,EAAII,GAEJH,EAAIE,GACRE,QAAQC,IAAIH,EAAIC,S,+GCuEfG,G,OApCH,IAAIC,YAoCmB,CAC/BC,IAAI,IACJC,QAAQ,EACRC,SAAS,I,iBC/EHC,EAAiBC,IAAjBD,aAEAE,EAAgBC,IAAhBD,YACAE,EAA2BC,IAA3BD,MAA2BC,IAApBC,UAAoBD,IAATE,KAChBC,YAAe,cA0DzB,SAASC,EAAgBC,GACvB,SAASC,EAAQnC,GACf,OAAQA,EAAI,GAAI,IAAMA,EAAEA,EAE1B,IAAIoC,EAAKD,EAAQD,EAAKG,WAAa,GAC/BC,EAAKH,EAAQD,EAAKK,WAClBC,EAAIL,EAAQD,EAAKO,YACjBC,EAAIP,EAAQD,EAAKS,cACjBC,EAAIT,EAAQD,EAAKW,cAErB,MAAO,CAACX,EAAKY,cAAcV,EAAGE,GAAIS,KAAK,KAAK,IAAIP,EAAE,IAAIE,EAAE,IAAIE,EAqL9D,SAASI,EAAgCC,EAAaC,GAEpDD,EAAaE,SAAQ,SAAAC,GACnBA,EAAMC,KAAKF,SAAQ,SAAAG,GACjB,IAAIC,EAAWL,EAAaM,MAAK,SAAAC,GAAK,OAAEA,EAAMC,IAAIJ,EAAOI,MACzD,QAAc3D,IAAXwD,EAAH,CACA,IAAII,EApPV,SAAiBC,EAAKC,EAAMC,EAAIC,EAAIC,GAGlC,IAAIC,GAAOH,EAAIF,IAAO,EAAEC,GACpBK,GAAON,EAAKG,IAAM,EAAEF,GACpBM,EAAKC,KAAKC,IAAIJ,EAAIC,GAClBI,GAAMV,EAAKI,KAAUF,EAAIC,GAAK,GAElC,MAAO,CAACH,OAAKC,QAAMI,MAAIC,MAAIC,KAAGG,KAAGC,IADvBJ,GAAI,EAAEC,KAAKI,IAAIF,KA6OPG,CAAQnB,EAAOM,KAAKN,EAAOO,MAAMN,EAASO,IAAIP,EAASQ,IAAIR,EAASmB,OAClFC,OAAOC,OAAOtB,EAAQK,UAM5B,SAASkB,EAA4BC,EAAcC,EAAcC,GAE7D,IAAIC,EA7FR,SAAkCC,GACjC,IADkDC,EACnD,uDADmE,KAE7DC,EAAKF,EACLG,EAAW,GACXC,OAAWvF,EACf,SAASwF,EAAYC,QAENzF,IAAVyF,IACHF,EAAW,CACTlC,MAAM,CAACoC,GACPC,UAAUD,EAAQE,QAClBC,QAAQH,EAAQE,SAElBL,EAAWO,KAAKN,IAElBC,EAAYH,EAAG,IACf,IAAI,IAAIpF,EAAE,EAAEA,EAAEoF,EAAGxF,OAAOI,IAEnBoF,EAAGpF,GAAG0F,QAAQJ,EAAWK,QAAQR,GAElCG,EAAWlC,MAAMwC,KAAKR,EAAGpF,IACzBsF,EAAWK,QAAQP,EAAGpF,GAAG0F,SAIzBH,EAAYH,EAAGpF,IAkDnB,OA9CAqF,EAAWlC,SAAQ,SAAAmC,GACjB,IAAIO,EAAGP,EAAWlC,MAClB,GAAa,GAAVyC,EAAEjG,OAAL,CAEA,IAAIyD,EAAOwC,EAAE,GAAGC,aAAaC,KAAI,SAAAC,GAAC,MAAG,CAACtC,GAAGsC,EAAEtC,OAC3CL,EAAKA,EAAK0C,KAAI,SAAAzC,GAEZ,IAAI2C,EAASJ,EAAEE,KAAI,SAAAG,GAAS,OAAEA,EAAUJ,aAAatC,MAAK,SAAA2C,GAAO,OAAEA,EAAQzC,IAAIJ,EAAOI,SAClF0C,EAAWH,EAASI,QAAO,SAACF,GAAD,OAAWA,EAAQG,SAAUnF,EAAkBE,MAC1EuC,EAAOwC,EAAUG,QAAO,SAACC,EAAIL,GAAL,OAAeK,EAAIL,EAAQzB,QAAM,GAAG0B,EAAUxG,OAEtE6G,EAASR,EAASM,QAAO,SAACG,EAAGP,GAC/B,OAAGA,EAAQG,SAAUnF,EAAkBE,WAM3BtB,IAAT2G,EAAGC,KAA4B,OAATD,EAAGC,KAAcR,EAAQzB,MAAMgC,EAAGC,OACzDD,EAAGC,IAAMR,EAAQzB,aACP3E,IAAT2G,EAAGrC,KAA4B,OAATqC,EAAGrC,KAAc8B,EAAQzB,MAAMgC,EAAGrC,OACzDqC,EAAGrC,IAAM8B,EAAQzB,QAPVgC,IAWT,CACArC,SAAItE,EACJ4G,SAAI5G,IAEF8D,EAAQO,KAAKwC,KAAKR,EAAUG,QAAO,SAACC,EAAIL,GAAL,OAAeK,GAAK5C,GAAMuC,EAAQzB,QAAQd,GAAMuC,EAAQzB,SAAO,GAAG0B,EAAUxG,QAEnH,MAAO,CACL8D,GAAGJ,EAAOI,GACVE,OAAKC,QACLQ,IAAIoC,EAAOpC,IACXsC,IAAIF,EAAOE,QAKfrB,EAAWjC,KAAKA,MAMXgC,EAkBoBwB,CAAyB/B,EAAcC,GAEhE,OADA/B,EAAgCiC,EAAmBD,GAC5CC,EAtQX6B,IAAMC,cAAcC,SAAS,CAC3BC,UAAW,SAASC,OAwQtB,IAAMC,EAED,KAFCA,EAGA,MAHAA,EAIA,MAJAA,EAMC,OANDA,GAOC,OAPDA,GASC,OATDA,GAUC,OAI0B,mBAC9BA,EAAuB,CAACC,MAAM,OAAOC,KAAKF,IADZ,cAE9BA,EAAwB,CAACC,MAAM,UAAUC,KAAKF,IAFhB,cAG9BA,EAAwB,CAACC,MAAM,UAAUC,KAAKF,IAHhB,cAI9BA,EAAyB,CAACC,MAAM,UAAUC,KAAKF,IAJjB,cAK9BA,GAAyB,CAACC,MAAM,UAAUC,KAAKF,KALjB,cAM9BA,GAAyB,CAACC,MAAM,OAAOC,KAAKF,KANd,cAO9BA,GAAyB,CAACC,MAAM,OAAOC,KAAKF,K,IASzCG,G,kDACJ,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAM,mBAAqBpD,KAAKqD,MAAsB,IAAhBrD,KAAKsD,UAChD,EAAKC,aAAU5H,EACf,EAAK6H,MAAM,CACPC,SAAS,CACLC,KAAM,OACN9G,KAAK,CAAC+G,OAAO,GAAGC,SAAS,CAAC,CAEtBC,YAAY,wBACZC,YAAa,EAAElH,KAAK,GACpBmH,qBAAqB,IACvB,CACEL,KAAM,UACNG,YAAY,sBACZC,YAAa,EAAElH,KAAK,GACpBmH,qBAAqB,MAGzBC,aAAc,EACdC,QAAS,CAELC,OAAQ,CACJC,MAAO,CACL,CACEC,SAAS,EACTV,KAAM,OACNW,aAAc,SACdC,MAAO,CACLC,SAAU,SAASjE,EAAOkE,EAAOC,GAC/B,OAAOnE,EAAMoE,YAEfC,OAAQ,SACRC,UAAU,GAEZC,KAAK,CACHC,eAAc,EACdC,eAAe,CACbC,KAAM,kBAERC,QAAQ,UAGdC,MAAO,CAAC,CACNd,SAAS,EACTe,WAAY,CACVf,SAAS,MAIjBgB,SAAU,CACNC,KAAM,CAACC,MAAM,GACbC,MAAO,CAAEC,OAAQ,IAErBxB,aAAc,EACdyB,UAAW,CACPC,SAAU,GAEdC,qBAAqB,EACrBC,YAAY,EACZC,MAAO,CACHzB,SAAS,EACT0B,KAAM,IAEVC,WAAY,CACRC,YAAa,IAEjBC,OAAQ,CACJ7B,SAAS,GAEb8B,SAAU,CACNC,SAAS,MAQzB,EAAK3C,MAAMC,SAASQ,QAAQmC,IAAI,CAC5BD,SAAS,EACTE,KAAM,KAEV,EAAK7C,MAAMC,SAASQ,QAAQqC,KAAK,CAC7BH,SAAS,EACTE,KAAM,KAKV,EAAKE,0BAA0B,CAC3B,CAAC7C,KAAK,MAAM8C,MAAM,uBAClB,CAAC9C,KAAK,MAAM8C,MAAM,uBAClB,CAAC9C,KAAK,MAAM8C,MAAM,yBAClB,CAAC9C,KAAK,MAAM8C,MAAM,yBAClB,CAAC9C,KAAK,QAAQ8C,MAAM,sBA/FT,E,+DAqGAC,EAAWC,M,0CAEVD,EAAWC,GAC7BC,KAAKC,YAAYH,K,yCAGAI,EAAoBC,EAAeC,EAAYP,GAEhE,IAAIQ,EAAaF,EAAc,MAC/B,OAAOD,EACF1E,QAAO,SAAC8E,EAAKC,GAAN,OAAaD,EAAKE,OAAOD,EAAKlI,SAAO,IAC5CmD,QAAO,SAACiF,EAAeC,EAAIC,GAE1B,QAAiB3L,IAAdoL,IAEEA,EAAY,GAAGM,EAAI/F,SACpByF,EAAY,GAAGM,EAAI/F,SAAQ,OAAO8F,EAGtC,IAAIG,EAAaF,EAAI3F,aAAatC,MAAK,SAACoI,GAAD,OAAQA,EAAKlI,KAAKwH,EAAexH,MAGpEmI,EAAaF,EAAWjH,MACxBoH,EAAWlB,EAEf,QAAgB7K,IAAb+L,EAED,OAAOH,EAAWrF,QAEhB,KAAKnF,EAAkBG,QACrBwK,EAAW,sBACb,MACA,KAAK3K,EAAkBI,QACrBuK,EAAW,sBACb,MACA,KAAK3K,EAAkBE,GACrByK,EAAW,UACXD,EAAaT,OAMdO,EAAWrF,SAAWnF,EAAkBE,KAEzCyK,EAAW,UACXD,EAAaT,GAIf,IAAIW,EAAI,CACR/F,EAAE,IAAIgG,KAAKP,EAAI/F,SAASoD,WACxBmD,EAAEJ,EACFK,IAAIT,EAAIS,KAOV,OAHAV,EAAerD,qBAAqBvC,KAAKkG,GAEzCN,EAAexK,KAAK4E,KAAKmG,GAClBP,IACR,CACDvD,YAAY,wBACZC,YAAa,EAAElH,KAAK,GACpBmH,qBAAqB,O,0CAGPzD,EAAMZ,EAAIqI,EAAYpI,GACzC,IAD6CqI,IAC9C,yDACE,OAAGtI,GAAKC,GACLqI,IAEED,GAAapI,EAEdA,EAAIoI,GAAarI,EAAIqI,GAEfA,GAAarI,IAEnBA,EAAMqI,GAAaA,EAAYpI,IAE9BD,GAAKqI,GAAepI,GAAMoI,GAXZ,IAgBhBzH,EAAMyH,GAECzH,EAAMyH,IAAcrI,EAAIqI,IAIxBzH,EAAMyH,IAAcA,EAAYpI,K,wCAK1BkH,EAAoBC,EAAeC,EAAYP,GAE/D,OAAOK,EAAoB1E,QAAO,SAACiF,EAAea,GAChD,IAAIC,EAAeD,EAAKhJ,KACtBG,MAAK,SAAC+I,GAAD,OAAMA,EAAG7I,KAAKwH,EAAexH,MAEhCgB,EAAO4H,EAAa1I,KACpBqF,EAAOoD,EAAKjJ,MAAMmD,QAAO,SAACC,EAAIiF,GAAL,OAAWjF,EAAIiF,EAAI/F,UAAQ,GAAG2G,EAAKjJ,MAAMxD,OACtE,QAAiBG,IAAdoL,IAEEA,EAAY,GAAGlC,GAChBkC,EAAY,GAAGlC,GAAK,OAAOuC,EAE/B,IAAIM,OAAoB/L,IAAR6K,EAAmB,kBAAkBA,EAC/CmB,EAAI,CACN/F,EAAE,IAAIgG,KAAK/C,GAAMH,WACnBmD,EAAEvH,EACA1D,KAAKqL,EACLhJ,KAAKiJ,GAOT,OAHAd,EAAerD,qBAAqBvC,KAAKkG,GAEzCN,EAAexK,KAAK4E,KAAKmG,GAClBP,IACN,CACD1D,KAAM,UACNG,YAAY,wBACZC,YAAa,EAAElH,KAAK,GACpBmH,qBAAqB,O,mCAIZuD,EAAIc,GAAmD,IAA5CC,EAA2C,uDAArC,EAAEC,EAAmC,uDAAzB,EAAEC,EAAuB,uDAAnB,OAAOC,EAAY,uDAAN,MACvDC,EAAI,IAAInB,EAAIc,EAAOE,EACvB,MAAO,QAAQG,EAAI,KAAKF,EAAI,KAAKC,EAAM,IAAIH,EAAM,M,kCAEvC5B,GACV5J,QAAQC,IAAI,QACZ,IAAI4L,EAAgD,GAAhCjC,EAAUkC,cAAcnN,OACzCmL,KAAKiC,qBAAuBnC,EAAUkC,eACvChC,KAAK9F,oBAAsB4F,EAAU5F,oBAErC8F,KAAKkC,kBAAkBpC,EAAUiC,GAEnC/B,KAAKiC,oBAAsBnC,EAAUkC,cACrChC,KAAK9F,mBAAqB4F,EAAU5F,mBAEpC,IAAIiI,GAAO,IACPC,EAAM,IACNC,EAAe,EACnB,GAAGN,EAEDI,GAAO,IACPC,EAAM,IACNC,EAAe,MAGjB,CACE,IAAIlC,EAAiBL,EAAUkC,cAAc,GAC7CG,EAAMhC,EAAc,IACpBiC,EAAMjC,EAAc,IACpBkC,EAAelC,EAAc,MAGrB,GAAPgC,GAAmB,GAAPC,GAA4B,GAAhBC,IAEzBrC,KAAKnD,MAAMC,SAASQ,QAAQC,OAAOgB,MAAM,GAAGZ,MAAM,CAChDrE,IAAI,KAAK6I,EAAME,GAAgBA,EAC/BzG,IAAI,KAAKwG,EAAMC,GAAgBA,IAQnCrC,KAAKpD,QAAQ0F,W,wCAMGxC,EAAUiC,GAAiB,IAAD,OAWxC,GARA/B,KAAKnD,MAAMC,SAAS7G,KAAK+G,OAAO,GAChCgD,KAAKnD,MAAMC,SAAS7G,KAAKgH,SAAS7E,SAAQ,SAACmK,GACvCA,EAAQtM,KAAK,GACbsM,EAAQnF,qBAAqB,MAKrB,IADC0C,EAAU5F,mBAAmBrF,OAC1C,CAGA,IAAIqL,EAAsBJ,EAAU5F,mBAChCkG,EAAcN,EAAU0C,WAIxBL,GAAO,IACPC,EAAM,IACNC,EAAe,EAEnB,GADArC,KAAKnD,MAAMC,SAAS7G,KAAKgH,SAAS,GAC/B8E,EAEDI,GAAO,IACPC,EAAM,IACNC,EAAe,MAGjB,CACE,IAAIlC,EAAiBL,EAAUkC,cAAc,GAC7CG,EAAMhC,EAAc,IACpBiC,EAAMjC,EAAc,IACpBkC,EAAelC,EAAc,MAG/BL,EAAUkC,cAAc5J,SAAQ,SAAC+H,EAAeQ,EAAI8B,GAElD,IAAI1B,EAAW0B,EAAI5N,OAAO,EAAE,EAAK6N,aAAa/B,EAAI8B,EAAI5N,OAAO,GAAI,UAAKG,EAClE2N,EAAa,EAAKC,mBAAmB1C,EAAoBC,EAAeC,EAAYW,GACpF8B,EAAW,EAAKH,aAAa/B,EAAI8B,EAAI5N,OAAO,EAAE,KAC9CiO,EAAmB,EAAKC,kBAAkB7C,EAAoBC,EAAeC,EAAYyC,GAE7F,GAAGd,EACH,CACE,IAAI/I,EAAImH,EAAc,IAClBpH,EAAIoH,EAAc,IAClBE,EAAaF,EAAc,MAE/BwC,EAAW1M,KAAKmC,SAAQ,SAAA4K,GAEtBA,EAAIC,WAAWD,EAAI9B,EACnB8B,EAAI9B,EACDkB,EAAO,EAAKc,oBAAoBF,EAAI9B,EAAEnI,EAAIsH,EAAarH,MAE5D8J,EAAiB7M,KAAKmC,SAAQ,SAAA4K,GAC5BA,EAAIC,WAAWD,EAAI9B,EACnB8B,EAAI9B,EACDkB,EAAO,EAAKc,oBAAoBF,EAAI9B,EAAEnI,EAAIsH,EAAarH,WAI5D2J,EAAW1M,KAAKmC,SAAQ,SAAA4K,GAAMA,EAAIC,WAAWD,EAAI9B,KACjD4B,EAAiB7M,KAAKmC,SAAQ,SAAA4K,GAAMA,EAAIC,WAAWD,EAAI9B,KAGzD,IAAIiC,EAAU,EAAKtG,MAAMC,SAAS7G,KAAKgH,SACvCkG,EAAQtI,KAAK8H,GACbQ,EAAQtI,KAAKiI,GAEbK,EAAQA,EAAQtO,OAAO,GAAGuO,MAAM,GAChCD,EAAQA,EAAQtO,OAAO,GAAGuO,MAAMjD,EAAe9K,KAG/C8N,EAAQA,EAAQtO,OAAO,GAAGwO,gBAAiBtC,EAE3CoC,EAAQA,EAAQtO,OAAO,GAAGqI,YAAa2F,EACvCM,EAAQA,EAAQtO,OAAO,GAAGwO,gBAAiBR,KAI7C7C,KAAKnD,MAAMC,SAAS7G,KAAK+G,OACzBkD,EAAoBlF,KAAI,SAAAF,GAAC,OAAE5D,EAAgB,IAAI+J,MAAMnG,EAAEJ,UAAUI,EAAEF,SAAS,OAG5E,IAAI0I,EAAkBtD,KAAKxD,MAAM+G,sBACVvO,IAApBsO,IAECA,EAAoBtD,KAAKJ,2BAG7B,IAAI4D,EAAM,CACRzK,IAAIqJ,EACJpJ,IAAImJ,EACJxI,MAAM0I,GAGRrC,KAAKnD,MAAMC,SAASQ,QAAQ8B,WAAWC,YACnCiE,EAAkBtI,KAAI,SAACyI,GAGnB,MAAQ,CACJ1G,KAAM,OACN2C,KAAM,aACNgE,QAAS,WACT/J,MALM6J,EAAMC,EAAc1G,MAM1BG,YAAauG,EAAc5D,MAC3B8D,YAAa,EACbC,WAAY,CAAC,GAAI,IACjBR,MAAO,CACHS,SAAU,QACVrE,SAAS,EACTsE,QAAS,IAEbC,YAAa,SAAUC,GACrBC,SAASC,eAAe,QAAQC,UAAY,gBAK1DnE,KAAKnD,MAAMC,SAASQ,QAAQiC,SAAS,CACnC6E,UAAW,CACTlF,MAAO,SAASmF,EAAapO,GAK3B,MAAO,IAETmN,MAAO,SAASiB,EAAapO,GAE3B,IAAIqO,EAAeD,EAAYC,aAC/B,QAAkBtP,IAAfsP,EAAyB,MAAO,GACnC,IAAIzG,EAAQwG,EAAYxG,MAGxB,OADA3H,QAAQC,IAAIF,EAAKA,EAAKgH,SAASqH,IACxBrO,EAAKgH,SAASqH,GAAcrO,KAAK4H,GAAOoF,YAEjDsB,WAAY,SAASF,EAAapO,GAChC,IAAIqO,EAAeD,EAAYC,aAC3BzG,EAAQwG,EAAYxG,MACpB2G,EAAUvO,EAAKgH,SAASqH,GAAcrO,KAAK4H,GAC3CvF,EAAOkM,EAAUlM,KACrB,QAAUtD,IAAPsD,EAAiB,OAAOkM,EAAUvJ,EAAE,SAASuJ,EAAUrD,IAE1D,IAAIsD,EAAYD,EAAUvO,KAAKoC,MAAMxD,OACrC,GAAc,GAAX4P,EAAa,OAAOD,EAAUvJ,EACjC,IAAIyJ,EAAQ,CACVC,IAAOH,EAAUvO,KAAKoC,MAAM,GAAGsC,SAASiK,OAAO,0BAC/CD,IAAOH,EAAUvO,KAAKoC,MAAMoM,EAAU,GAAG9J,SAASiK,OAAO,2BAIvDC,EAAMjL,OAAOkL,KAAKxM,GAAM0C,KAAI,SAAA9F,GAAG,OAAEA,EAAI,KAC1B,MAAXoD,EAAKpD,GAAYoD,EAAKpD,GAAK6P,QAAQ,GAAG,WAK1C,OAHAL,EAAUA,EAAQlE,OAAOqE,QACC7P,IAAvBwP,EAAUvO,KAAKoC,OAChBqM,EAAQ7J,KAAK,SAAS2J,EAAUvO,KAAKoC,MAAMxD,QACtC6P,IAKXrB,gBAAiB,OACjB2B,cAAe,GACfC,eAAgB,UAChBC,cAAe,OACfC,aAAc,GACdC,eAAe,M,0CAOjB,IAAIC,EAAMpB,SAASC,eAAelE,KAAKvD,OAAO6I,WAAW,MAEzDtF,KAAKpD,QAAU,IAAIb,IAAMsJ,EAAKrF,KAAKnD,MAAMC,UACzCkD,KAAKC,YAAYD,KAAKxD,S,+BAIxB,OAAO,yBAAK+I,UAAWvF,KAAKxD,MAAM+I,UAAWC,MAAOxF,KAAKxD,MAAMgJ,OAC3D,4BAAQ7M,GAAIqH,KAAKvD,MAAQ+I,MAAO,CAACC,OAAQ,QAASF,UAAWvF,KAAKxD,MAAM+I,iB,GAndrDG,IAAMC,WAydjC,SAASC,GAAYzO,EAAK0O,GAIxB,YAFW7Q,IAAPmC,IAAiBA,EAAK,IAAI8J,MAEvB9J,EAAK2O,QAAQ3O,EAAKK,UAAYqO,G,IAGjCE,G,WAEJ,aAAc,oBACZ/F,KAAKgG,QACLhG,KAAKiG,gBAAgB,SAACC,EAAUC,GAAX,OAAwBjQ,QAAQC,IAAI,oBAAoB+P,EAAUC,IACvFnG,KAAKoG,cAAa,E,8DAKlBpG,KAAKqG,IAAI,GACTrG,KAAKsG,iBAAiB,IACtBtG,KAAKuG,kBAAkB,GACvBvG,KAAKwG,eAAe,QACCxR,IAAlBgL,KAAKyG,YAENC,aAAa1G,KAAKyG,YAEpBzG,KAAKyG,gBAAWzR,I,8BAIhBgL,KAAK2G,aAAQ3R,EACbgL,KAAK4G,oB,iCAGID,GAET3G,KAAK4G,kBACL5G,KAAK2G,QAAQlR,KAAKoR,MAAMpR,KAAKC,UAAUiR,IACvCzQ,QAAQC,IAAI,cAAcwQ,K,oCAGd5M,GAMZ,GAJAA,EAAc+M,MAAK,SAASC,EAAGC,GAC7B,OAAOD,EAAEpM,QAAUqM,EAAErM,WAGpBqF,KAAKqG,IAAIxR,OAAO,EACnB,CACE,IAAIoS,EAAcjH,KAAKqG,IAAIrG,KAAKqG,IAAIxR,OAAO,GAAG8F,QAC1CuM,EAAenN,EAAcuB,QAAO,SAAC6L,GAAD,OAAQA,EAAKxM,QAAQsM,KACzDG,EAAYpH,KAAKqG,IAAI7F,OAAO0G,GAChChR,QAAQC,IAAK6J,KAAKqG,IAAIxR,OAAOkF,EAAclF,OAAOuS,EAAUvS,QAE5DmL,KAAKqG,IAAMe,OAKXpH,KAAKqG,IAAMtM,EAEbiG,KAAKiG,gBAAgBlM,EAAciG,KAAKqG,O,sCAE1BgB,GAwBd,OAvBAnR,QAAQC,IAAIkR,GACTrH,KAAKqG,IAAIxR,OAAO,IAEjBwS,GAAO,GAGTnR,QAAQC,IAAI6J,KAAKqG,KACdgB,OAGmBrS,GAAjBgL,KAAKyG,YAENzG,KAAKsH,wBAKctS,IAAlBgL,KAAKyG,aAENC,aAAa1G,KAAKyG,YAClBzG,KAAKyG,gBAAWzR,GAGbgL,KAAKoG,aAAaiB,I,uCAGVE,EAAUC,GAC1B,IAAD,OACE,QAAcxS,GAAXuS,EACH,CACE,KAAGvH,KAAKqG,IAAIxR,OAAO,GAWjB,OAHAqB,QAAQC,IAAI,wCAEZ6J,KAAKyG,gBAAYzR,GARjB,IAAIiS,EAAcjH,KAAKqG,IAAIrG,KAAKqG,IAAIxR,OAAO,GAAG8F,QAC9C4M,EAAU,CAAC5C,IAAOsC,GAAaQ,GAAGC,UAAW/C,IAAOiB,GAAY,IAAI3E,KAAO,IAAIwG,GAAGC,WAClFxR,QAAQC,IAAIwO,IAAOsC,IAevB,YALejS,GAAZwS,IAEDA,EAAW,IAEbtR,QAAQC,IAAI,aAAaoR,GF52B7B,SAAyBI,EAAkBC,EAAWC,GACrD,IAD8DC,EAC/D,uDADqE,IAE7DC,EAAK,mBACLvS,EAAML,EAAO4S,EAAK,IA6BtB,OA3BAvS,GAAK,UAAUoS,EAAW7J,WAAW,SAAS8J,EAAS9J,WAAW,IAClEvI,GAAK,SAASsS,EAAM,WACpBtS,GAAK,qBAAqBmS,EAAkB,IAGxCnS,GAAK,cAAcC,KAAKC,UACpB,CAAC,IAAM,EAAE,yBAAyB,EAClC,iCAAiC,EACjC,oCAAoC,EACpC,qCAAqC,EAErC,UAAY,EACZ,UAAY,EACZ,qBAAqB,IAU7BF,GAAK,GAIE,IAAII,SAAQ,SAACC,EAAIC,GAEpBC,IAAMP,GAAM,SAACQ,EAAIC,GAEF,OAARD,EACCH,EAAII,GAEJH,EAAIE,GACRE,QAAQC,IAAIH,EAAIC,SEq0BjB+R,CAAyBhI,KAAK2G,QAAQrR,gBAAgBiS,EAAU,GAAGA,EAAU,GAAGC,GACtFS,MAAK,SAACC,GACL,IAAInO,EAAgBmO,EAAYlN,KAAI,SAAAnF,GAAG,OAAEA,EAAIsS,eAAe,MAW5D,OAVA,EAAKC,cAAcrO,GAChB,EAAKqM,aAEN,EAAKK,WACH4B,YAAW,kBAAI,EAAKf,qBAAmB,EAAKhB,kBAI9C,EAAKG,gBAAYzR,EAEZ+E,O,qCAIV,IADYwN,EACb,uDADuB,CAAC5C,IAAOiB,GAAY,IAAI3E,MAAQ,IAAK0D,IAAOiB,GAAY,IAAI3E,KAAO,KAExF,YAAkBjM,IAAfgL,KAAK2G,UACR3G,KAAKuG,kBAAoBgB,EAGrBvH,KAAKoG,cAEPpG,KAAK4G,kBAEA5G,KAAKsH,iBAAiBC,EAAU,U,KAM3C,SAASe,GAAT,GAAmE,IAAzCC,EAAwC,EAAxCA,WAAwC,IAA7BC,gBAA6B,MAApB,EAAoB,EAAlBC,EAAkB,EAAlBA,iBAAkB,EAErCC,mBAASF,GAF4B,mBAEzDG,EAFyD,KAEjDC,EAFiD,OAGnCF,mBAAS,IAH0B,mBAGzDG,EAHyD,KAGhDC,EAHgD,KAI5D7O,EAAcsO,EACfjN,QAAO,SAAAyN,GAAK,MAAe,YAAbA,EAAMhM,QACnBiM,EAAQ/O,EAAYuB,QAAO,SAACI,EAAIjE,GAAL,OAASiE,EAAIjE,EAAEsR,KAAKtR,EAAEsR,KAAKrN,IAAI,GAC1DsN,EAAQjP,EAAYuB,QAAO,SAAClC,EAAI3B,GAAL,OAAS2B,EAAI3B,EAAEsR,KAAKtR,EAAEsR,KAAK3P,IAAI,GAElD,KAAT4P,IAEDA,EAAQ,EACRF,EAAQ,GAEPE,GAASF,IAEVE,EAAQ,GAEV,IAAIC,EAAQ,GA4BZ,OAzBAA,EAAMD,GAASA,EAAQ,GACvBC,EAAMH,GAASA,EAAQ,GACvB/O,EAAY7B,SAAQ,SAACT,QACP3C,IAAT2C,EAAEsR,OAEHE,EAAMxR,EAAEsR,MAAMtR,EAAEsR,KAAK,OAKzBG,qBAAU,WACR,QAAqBpU,GAAlByT,EAAH,CACA,IAAIY,EAAc,GAClBd,EAAWnQ,SAAQ,SAACP,GAClBwR,EAAcxR,EAAEc,IAAI,CAClBtD,KAAKwC,EAAExC,KACPiU,cAAmBtU,IAAT6C,EAAEoR,MAAoBpR,EAAEoR,MAAMN,MAE5CG,EAAYO,GACZZ,EAAiBY,MACjB,CAACV,IAKI,oCACL,kBAAC,IAAD,CACErP,IAAK4P,EACLtN,IAAKoN,EACLO,SAAUX,EACVO,MAAOA,EACPxP,MAAOgP,EACPnD,MAAO,CAACgE,MAAM,QACdC,WAAY,OACZC,YAAY,UAGb9P,OAAOkL,KAAK+D,GAAU7N,KAAI,SAAA9F,GAAG,OAAE,kBAACuB,EAAD,CAChCkT,QAASd,EAAS3T,GAAKoU,SACvBC,SAAU,SAACI,GACT,IAAIC,EAAO,eAAIf,GACfe,EAAO1U,GAAP,2BAAiB0U,EAAO1U,IAAxB,IAA8BoU,SAASK,IAEvCb,EAAYc,GACZnB,EAAiBmB,KACff,EAAS3T,GAAKG,U,IAOhBwU,G,kDAGJ,WAAYrN,GAAQ,IAAD,8BACjB,cAAMA,IACDsN,UAAY,KACjB,EAAKjN,MAAM,CACTkN,kBAAkB,GAClBC,UAAU,CAACrF,IAAOiB,GAAY,IAAI3E,MAAQ,IAAK0D,IAAOiB,GAAY,IAAI3E,KAAO,KAC7EgJ,aAAa,CAACtF,IAAO,GAAIA,IAAOiB,GAAY,IAAI3E,KAAO,KACvDlH,cAAc,GACZmQ,0BAA0B,GAC5BhQ,mBAAmB,GACnBF,cAAc,KACdoM,cAAa,EACb+D,YAAW,EACXC,qBAAoB,EACpBC,gBAAgB,IAIlB,EAAKC,UAAU,IAAIvE,GAlBF,E,wDAsBPjR,GACV,OAAOkL,KAAKuK,SAAL,2BAAkBvK,KAAKnD,OAAS/H,M,0CAEW,IAAlCuS,EAAiC,wDAAzBrH,KAAKnD,MAAMuJ,aAGnC,OADAiB,EAASrH,KAAKsK,UAAUE,gBAAgBnD,GACjCrH,KAAKyK,YAAY,CAACrE,aAAaiB,M,4CAGlBvH,EAAWC,GAM/B,OALGD,EAAU6G,UAAU3G,KAAKxD,MAAMmK,UAEhCzQ,QAAQC,IAAI,yBACZ6J,KAAKsK,UAAUI,WAAW5K,EAAU6G,WAE/B,I,+BA+BC,IAAD,OAEP,GADAzQ,QAAQC,IAAI,OAAO6J,KAAKnD,YACA7H,IAArBgL,KAAKnD,MAAM8J,QAAoB,OAAO,KACzC,IAn/BehN,EAo/BXgR,EAAQ,GAMRC,EAC6B,IAA9B5K,KAAKnD,MAAMmN,UAAUnV,QACrBmL,KAAKnD,MAAMmN,UAAUxO,QACpB,SAACqP,EAAQ1T,GAAT,OACI0T,QACW7V,IAAXmC,EAAKsQ,SACczS,IAAnBmC,EAAKsQ,GAAGC,WACb,GAECsC,EAAUhK,KAAKnD,MAAMmN,UAAUhP,KAAI,SAAA8P,GAAE,OAAEA,EAAGrD,MAG1CsD,GAFc/K,KAAKxD,MAAMwO,YACXhL,KAAKxD,MAAMyO,aApgCP,kBADPtR,EAugCJqG,KAAKxD,MAAMwO,cAtgCYrR,aAAiBuR,SAugCjDlL,KAAKxD,MAAMwO,YAAYnW,OAAO,GAI5BoF,EAAc+F,KAAKnD,MAAM8J,QAAQwE,WAAW,GAAGC,SAChD9P,QAAO,SAAA+P,GAAO,YAC6BrW,IAAzC,EAAK6H,MAAMwN,gBAAgBgB,EAAQ1S,KACnC,EAAKkE,MAAMwN,gBAAgBgB,EAAQ1S,IAAI2Q,UACxB,YAAf+B,EAAQtO,QAGbkH,SAAS/E,MAAQc,KAAKnD,MAAM8J,QAAQtR,KACpC,IAAIiW,EAAO,kBAAC,IAAD,KACT,kBAACzU,EAAD,KAAQmJ,KAAKnD,MAAM8J,QAAQtR,OAGzBkW,EAAY,KAEbvL,KAAKnD,MAAM9C,cAAclF,OAAO,IAEjC0W,EAAc,CACZ,kBAAC,IAAD,CAAQC,OAAK,EACXlS,IAAK0G,KAAKnD,MAAM9C,cAAc,GAAGY,QAAQ,IACzCiB,IAAKoE,KAAKnD,MAAM9C,cAAciG,KAAKnD,MAAM9C,cAAclF,OAAO,GAAG8F,QAAQ,IACzE8Q,aACI,CAACzL,KAAKnD,MAAM9C,cAAc,GAAGY,QAAQ,IACrCqF,KAAKnD,MAAM9C,cAAciG,KAAKnD,MAAM9C,cAAclF,OAAO,GAAG8F,QAAQ,KACxE+Q,KAAM,IACNC,aAAc,SAACzN,GAAD,OAAQ,IAAI+C,KAAK/C,GAAMH,YACrCwL,SAAU,SAACtT,GAAD,OAAQ,EAAKwU,YAAY,CAACR,aAAahU,OAEnD,kBAAC,IAAD,CAAU0T,QAAS3J,KAAKnD,MAAMuJ,aAAcmD,SAAU,SAACqC,GAAD,OAAM,EAAKC,kBAAkBD,EAAG3S,OAAO0Q,WAA7F,QACA,6BACA,kBAAC,IAAD,CAAY8B,aAAc9G,IAAO,KAAM3E,KAAKnD,MAAM7C,cAAc,IAAQ,SAAU4K,OAAQ,QAASkH,SAAU,EAAGC,WAAY,EAAGC,YAAY,EACzIzC,SAAU,SAAC0C,GAET,GAAO,OAAJA,EAAH,CACA/V,QAAQC,IAAI8V,GACZ,IAAIC,EAAGD,EAAExE,GAAGC,UACRyE,EAASxH,IAAOsH,EAAExE,IAAI2E,QAAQ,QAAQ3E,GAAGC,UAC7CxR,QAAQC,IAAI+V,EAAGC,GACf,IAAInS,EAAgBkS,EAAGC,EACvBjW,QAAQC,IAAI,aAAa,EAAK0G,MAAMqN,2BACpC,IAAIhQ,EACFJ,EAA4B,EAAK+C,MAAMqN,0BAA0BlQ,EAAcC,GAEjF,EAAKwQ,YAAY,CAACvQ,qBAAmBF,sBAEzC,kBAAC,IAAD,CAAU2P,QAAS3J,KAAKnD,MAAMuN,oBAAqBb,SAAU,SAACqC,GAAD,OAAM,EAAKrB,SAAS,CAACH,oBAAoBwB,EAAG3S,OAAO0Q,YAAhH,8BAMJzT,QAAQC,IAAI8D,GACZ,IAAIoS,EAAQ,KA2BZ,OAxBEA,EAFCrM,KAAKnD,MAAMuN,oBAGZ,yBAAM5E,MAAO,CAACgE,MAAM,MAAM/D,OAAO,SAC/B,kBAAC,GAAD,CAAcvL,mBAAoB8F,KAAKnD,MAAM3C,mBAC3CsL,MAAO,CAACC,OAAO,QACfvQ,IAAK,IACL8M,cAAe/H,EACfuI,WAAYxC,KAAKnD,MAAMoN,gBAM3B,yBAAMzE,MAAO,CAACgE,MAAM,QACjBvP,EAAYe,KAAI,SAAArD,GAAC,OAClB,kBAAC,GAAD,CAAcuC,mBAAoB,EAAK2C,MAAM3C,mBAC3CsL,MAAO,CAACC,OAAO,SACfvQ,IAAKyC,EAAEtC,KAAK,IACZ2M,cAAe,CAACrK,GAChB6K,WAAY,EAAK3F,MAAMoN,mBAO7B,yBAAK1E,UAAU,OAEb,yBAAKA,UAAU,uCAEZ+F,EACD,yBAAK/F,UAAU,cAEb,kBAAC5O,EAAD,CAAazB,IAAI,KACfuW,aAAczL,KAAKnD,MAAMmN,UACzBT,SAAU,SAACpS,GAAD,OAAQ,EAAKsT,YAAY,CAACT,UAAU7S,OAEhD,kBAAC,IAAD,CAAQ4F,KAAK,UAAUuP,KAAK,SAASC,UAAa3B,IAAmBG,GAAkB/K,KAAKnD,MAAMsN,WAAaqC,QAC7G,WACE,EAAKlC,UAAUrE,gBACb,SAACC,EAAUC,GACT,GAAGD,EAAUrR,OAAO,EACpB,CACE,IAAI4X,EAAWvG,EAAUA,EAAUrR,OAAO,GAAG8F,QACzCT,EACFJ,EAA4BqM,EAAW,EAAKtJ,MAAM7C,cAAcC,GAClE,EAAKwQ,YAAY,CACf1Q,cAAcoM,EACdjM,mBAAmBA,EACjBgQ,0BAA0B/D,EAC5B8D,aAAa,CAAC,EAAKpN,MAAMoN,aAAa,GAAGtF,IAAO8H,EAAW,UAMnE,EAAKhC,YAAY,CAACN,YAAW,IAC7B,EAAKG,UAAUoC,aAAa1C,GAAW/B,MAAK,SAAA0E,GAC1C,EAAKlC,YAAY,CAACN,YAAW,OAC5ByC,OAAM,SAAA5W,GACP,EAAKyU,YAAY,CAACN,YAAW,UAInC,kBAAC,IAAD,CAAQpN,KAAK,UAAUuP,KAAK,WAAWC,UAAW3B,IAAmBG,GAAkD,IAAlC/K,KAAKnD,MAAM9C,cAAclF,OAC5G2X,QAAS,WACP,IAAIK,EAAW,EAAKhQ,MAAM8J,QAAQtR,KAAK,IAvhCrD,SAAkB8B,GAEhB,IAAIE,EAAKF,EAAKG,WAAa,EACvBC,EAAKJ,EAAKK,UAEd,MAAO,CAACL,EAAKY,eACJV,EAAG,EAAI,GAAK,KAAOA,GACnBE,EAAG,EAAI,GAAK,KAAOA,GACnBS,KAAK,IA+gCyC8U,CAAS,IAAI7L,MACpD8L,EAlnClB,SAA6BC,EAAW/S,EAAYgT,EAAaC,GAE/D,IACIC,EAAG,GAcP,SAASC,EAAY3K,EAAI4K,EAAeC,GACvC,IAD6CC,EAC9C,uDADsDD,EAAMA,EAAMzY,OAAO,GAEvE4N,EAAI5H,KAAK,IAAI0S,EAAQ,KACrBF,EAAejV,SAAQ,SAACsI,GACtB,IAAI8M,EAAM/Y,EAAciM,EAAI4M,QACnBtY,IAANwY,IAAgBA,EAAI,IACvB/K,EAAI5H,KAAK,KAAM2S,EAAI,QAKrB/K,EAAI5H,KAAK,MAvBXsS,EAAGtS,KAAK,IAAImS,EAAW,KACvBG,EAAGtS,KAAK,kBAERsS,EAAGtS,KAAK,YAERsS,EAAGtS,KAAK,KAAMjB,OAAOkL,KAAKoI,GAAc5R,QAAO,SAAApG,GAAG,OAAqB,GAAnBgY,EAAahY,MAAS8C,KAAK,KAAK,KACpFmV,EAAGtS,KAAK,KAAMjB,OAAOkL,KAAKoI,GAAc5R,QAAO,SAAApG,GAAG,OAAqB,GAAnBgY,EAAahY,MAAS8C,KAAK,KAAK,KACpFmV,EAAGtS,KAAK,KAAMjB,OAAOkL,KAAKoI,GAAc5R,QAAO,SAAApG,GAAG,OAAsB,GAApBgY,EAAahY,MAAU8C,KAAK,KAAK,KAGrFmV,EAAGtS,KAAK,OACR3E,QAAQC,IAAI8D,EAAYgT,GAcxB,CAAC,OAAO,WACL7U,SAAQ,SAAAqV,GAAK,OAAEL,EAAYD,EAAGlT,EAAY,CAACwT,OAI9C,CAAC,MAAM,MAAM,QAAQ,MAAM,OACxBrV,SAAQ,SAAAqV,GAAK,OAAEL,EAAYD,EAAGlT,EAAY,CAACwT,OAE9CN,EAAGtS,KAAK,OAER,IAAI6S,EAAiB,CAAC,OA+CtB,OA9CAT,EAAa7U,SAAQ,SAAAuV,GACnBA,EAAQtV,MACLD,SAAQ,SAAAnC,GACP,IAAIyK,EAAIzK,EAAK8E,aACboS,EAAGtS,KAAK,IAAI3D,EAAgB,IAAI+J,KAAKhL,EAAK0E,WAE1CV,EAAY7B,SAAQ,SAAAT,GAEhB,IAAIiW,EAAQlN,EAAIjI,MAAK,SAAAmV,GAAK,OAAEA,EAAMjV,IAAIhB,EAAEgB,MACrCiV,EAAMrS,SAASnF,EAAkBE,GAClC6W,EAAGtS,KAAK,IAAI+S,EAAMjU,OAElBwT,EAAGtS,KAAK,QAEd6S,EAAiBtV,SAAQ,SAAA/C,GAEvB,OADA8X,EAAGtS,KAAK,KACDxF,GAEL,IAAK,MACH,IAAI8L,EAAIlL,EAAKkL,IACMA,OAAVnM,IAANmM,EAAoB,GAGjBA,EAAI0M,QAAQ,QAAS,IAAIA,QAAQ,UAAW,KAElDV,EAAGtS,KAAK,IAAIsG,EAAI,SAKtBgM,EAAGtS,KAAK,YAgBPsS,EA2hCkBW,CAAoBjB,EAAW5S,EAAY,EAAK4C,MAAM3C,mBAAmB,EAAK2C,MAAMkR,UACvFhB,EAAQ/U,KAAK,KAnpCrC,SAAwBmH,EAAM6O,EAAUC,GACtC,IAAIC,EAAO,IAAIC,KAAK,CAAC,IAAIC,WAAW,CAAC,IAAM,IAAM,MAAOjP,GAAO,CAAEpC,KAAMiR,IAEnEjH,EAAI9C,SAASoK,cAAc,KAC/BtH,EAAEuH,SAAWL,EACblH,EAAEwH,KAAOC,IAAIC,gBAAgBP,GAC7BnH,EAAE2H,QAAQC,YAAc,CAACX,EAAUjH,EAAEuH,SAAUvH,EAAEwH,MAAMvW,KAAK,KAC5D+O,EAAEvB,MAAM/H,QAAU,OAClBwG,SAAS2K,KAAKC,YAAY9H,GAC1BA,EAAE+H,QACF7K,SAAS2K,KAAKG,YAAYhI,GAC1BsB,YAAW,WAAamG,IAAIQ,gBAAgBjI,EAAEwH,QAAU,MA0oC5CU,CAAelC,EAAQ/U,KAAK,IAAK,WAAY6U,EAAW,WAE1D,wBAAIrH,MAAO,CAACgE,MAAM,SAClB,kBAAC,GAAD,CAAkB0F,eAAgBlP,KAAKnD,MAAM9C,cAC3CoV,mBAAoBnP,KAAKnD,MAAM8J,QAAQwE,WAAW,GAAGiE,YAAYC,oBACjEC,iBAAkB,SAACvB,GAGf,IAAIwB,EAAc,eAAM,EAAK1S,MAAM8J,SAG/B6I,EADuBD,EAAepE,WAAW,GACCiE,YAAYC,oBAC9DI,EAAYC,IAAOF,EAA0B,aAEjDtZ,QAAQC,IAAIoZ,EAAeE,GAG3B,IAAIE,EAAW/V,OAAOkL,KAAKiJ,GAAUzS,QAAO,SAAApG,GAAG,OAAiB,GAAf6Y,EAAS7Y,MACtD0a,EAAchW,OAAOkL,KAAKiJ,GAAUzS,QAAO,SAAApG,GAAG,OAAkB,GAAhB6Y,EAAS7Y,MAEzD2a,EAAOF,EAASlX,MAAK,SAAAqX,GAAO,YAAwC9a,IAAtCwa,EAA2BM,MAC7D,QAAY9a,IAAT6a,EACH,CACE,IAAIE,EAAcP,EAA2BK,GAC7CJ,EAAcA,EAAYzU,KAAI,SAACgV,GAC7B,IAAIC,EAAYF,EAAYtX,MAAK,SAAAyX,GAAI,OAAEA,EAAKvX,IAAIqX,EAAIrX,MACpD,YAAiB3D,IAAdib,EAA+BD,EAE3B,2BAAIA,GAAOC,MAItBV,EAAepE,WAAW,GAAGC,SAASqE,EAEtC,IAAIU,EACF,EAAKtT,MAAM9C,cAAcuB,QAAO,SAAS8U,EAAMvS,EAAOwS,GAClD,IAAIC,EAAKF,EAAKjP,IAAIoP,MAAM,KACpBC,EAAUb,EAASc,OAAM,SAACL,GAAD,OAAQE,EAAKI,SAASN,MAC/CO,EAAYf,EAAYgB,MAAK,SAACR,GAAD,OAAQE,EAAKI,SAASN,MACvD,OAAOI,IAAeG,KAI5Bza,QAAQC,IAAIoZ,GACZ,IAAIrV,EACAJ,EAA4BqW,EAAkB,EAAKtT,MAAM7C,cAAcC,GAE3E,EAAKwQ,YAAY,CACfsD,WACA7T,mBAAmBA,EACnBgQ,0BAA0BiG,EAC1BxJ,QAAQ4I,OAOhB,kBAACjH,GAAD,CAAgBC,WAAYvI,KAAKnD,MAAM8J,QAAQwE,WAAW,GAAGC,SAAS9P,QAAO,SAAA+P,GAAO,MAAkB,YAAfA,EAAQtO,QAC/F0L,iBAAkB,SAACI,GACjB3S,QAAQC,IAAI0S,GACZ,EAAK0B,SAAS,CAACF,gBAAgBxB,OAGjC,wBAAIrD,MAAO,CAACgE,MAAM,UAGrB+B,EACAc,EACD,yBAAKnX,IAAI,KAAKqQ,UAAW,gCAA4CC,MAvN3D,CACZqL,IAAI,MACJrH,MAAM,UAsNDmB,Q,gDA1PuB7K,EAAWgR,GAEzC,QAAuB9b,IAApB8K,EAAU6G,QAAoB,OAAO,KACxC,GAAG7G,EAAU6G,UAAUmK,EAAUC,iBAAiB,OAAOD,EACzD,IAAInK,EAAU+I,IAAO5P,EAAU6G,SAC3ByE,EAASzE,EAAQwE,WAAW,GAAGC,SAC/BgE,EAAYzI,EAAQwE,WAAW,GAAGiE,YAGlC4B,EAAe5B,EAAY6B,cAAcjW,KAAI,SAAArC,GAAE,OAAEyS,EAAS3S,MAAK,SAAAyY,GAAC,OAAEA,EAAEvY,IAAIA,QAkB5E,OAjBAgO,EAAQwE,WAAW,GAAGC,SAAS4F,OAEMhc,IAAlCoa,EAAYC,sBAAgCD,EAAYC,oBAAoB,IAErDD,EAAYC,oBAGf,YAAgBK,IAAO/I,EAAQwE,WAAW,GAAGC,UAU7D,2BAAI0F,GAAX,IAAqBnK,UAAQoK,iBAAiBjR,EAAU6G,c,GArE5BjB,IAAMC,WA8ShCwL,G,kDAGF,WAAY3U,GAAO,IAAD,8BACd,cAAMA,IA6EV4U,gBAAkB,SAAClc,EAAImc,GAErB,IAAIC,EAAM,eAAI,EAAKzU,MAAM0U,MAEf,GAAPF,QAA4Crc,IAAhC,EAAKwH,MAAM2S,yBAEgBna,IAArC,EAAKwH,MAAM2S,mBAAmBja,IAE/B0E,OAAOkL,KAAKwM,GAAOlZ,SAAQ,SAAClD,QACcF,IAArC,EAAKwH,MAAM2S,mBAAmBja,KAE/Boc,EAAMpc,GAAK,WAMRF,IAANE,IAIK,MAALA,EAED0E,OAAOkL,KAAKwM,GAAOlZ,SAAQ,SAAClD,GAC1Boc,EAAMpc,GAAKmc,KAKbC,EAAMpc,GAAKmc,EAEb,EAAK7U,MAAM8S,iBAAiBgC,GAC5B,EAAK/G,SAAU,CAACgH,KAAKD,MA5GrB,EAAKzU,MAAM,CACP0U,KAAK,IAMT,EAAKC,wBAAmBxc,EATV,E,mHAgBQ8K,GACtB,GAAGE,KAAKwR,qBAAqB1R,EAAUoP,eAAvC,CAIAlP,KAAKwR,mBAAmB1R,EAAUoP,eAClChZ,QAAQC,IAAI,uBAAuB2J,EAAUoP,gBAC7C,IAAMuC,EAAU,IAAIC,IAEpB,GAAG5R,EAAUoP,eAAera,OAAO,EAAE,CACjCiL,EAAUoP,eAAe9W,SAAQ,SAAS4L,EAAE/O,EAAE8R,GAE7B/C,EAAE7C,IAAIoP,MAAM,KAEhBnY,SAAQ,SAASuZ,EAAGC,EAAGC,GAEd,GAAXF,EAAG9c,QACF4c,EAAQK,IAAIH,SAGxB,IAAIL,EAAM,GACVS,MAAMC,KAAKP,GAASrZ,SAAQ,SAASlD,GACjCoc,EAAMpc,GAAK,KAGf8K,KAAKuK,SAAU,CAACgH,KAAKD,IAErBtR,KAAKxD,MAAM8S,iBAAiBgC,O,wCAIhCpb,QAAQC,IAAI,qB,+BAkEN,IAAD,OAGL,OACE,oCACE,kBAAC,IAAD,CAAK0J,MAAM,UACX2M,QAAS,SAAAyF,GAAC,OAAE,EAAKb,gBAAgB,KAAK,KADtC,KADF,IAIGxX,OAAOkL,KAAK9E,KAAKnD,MAAM0U,MAAMvW,KAAI,SAAC9F,GACjC,IAAIgd,EAAQhd,EAKV,YAJiCF,IAAhC,EAAKwH,MAAM2S,yBAAuEna,IAArC,EAAKwH,MAAM2S,mBAAmBja,KAE5Egd,EAAQ,IAAIhd,EAAI,KAGd,kBAAC,IAAD,CACA2K,MAA8B,GAAtB,EAAKhD,MAAM0U,KAAKrc,GAAS,eAAUF,EAC3CE,IAAKA,EACLsX,QAAS,SAAAyF,GAAC,OAAE,EAAKb,gBAAgBlc,EAA2B,GAAtB,EAAK2H,MAAM0U,KAAKrc,GAAS,EAAE,KAC/Dgd,MAMR,6BACA,kBAAC,IAAD,CAAKrS,MAAM,OACX2M,QAAS,SAAAyF,GAAC,OAAE,EAAKb,gBAAgB,MAAM,KADvC,KAtBF,IAyBGxX,OAAOkL,KAAK9E,KAAKnD,MAAM0U,MAAMvW,KAAI,SAAC9F,EAAK2I,EAAOwS,GAC3C,IAAI6B,EAAQhd,EAKZ,YAJmCF,IAAhC,EAAKwH,MAAM2S,yBAAuEna,IAArC,EAAKwH,MAAM2S,mBAAmBja,KAE5Egd,EAAQ,IAAIhd,EAAI,KAGhB,kBAAC,IAAD,CAAK2K,OAA+B,GAAvB,EAAKhD,MAAM0U,KAAKrc,GAAU,YAAOF,EAC9CE,IAAKA,EACLsX,QAAS,SAAAyF,GAAC,OAAE,EAAKb,gBAAgBlc,GAA4B,GAAvB,EAAK2H,MAAM0U,KAAKrc,IAAW,EAAE,KACjEgd,U,gDAtGgB1V,EAAOsU,GAEnC5a,QAAQC,IAAI,uBAAuBqG,EAAM0S,gBACzC,IAAMuC,EAAU,IAAIC,IAEpB,GAAGlV,EAAM0S,eAAera,OAAO,EAAE,CAC7B2H,EAAM0S,eAAe9W,SAAQ,SAAS4L,EAAE/O,EAAE8R,GAEzB/C,EAAE7C,IAAIoP,MAAM,KAEhBnY,SAAQ,SAASuZ,EAAGC,EAAGC,GAEd,GAAXF,EAAG9c,QACF4c,EAAQK,IAAIH,SAGxB,IAAIL,EAAM,eAAIR,EAAUS,MAMxB,OALAQ,MAAMC,KAAKP,GAASrZ,SAAQ,SAASlD,QACnBF,IAAbsc,EAAMpc,KACPoc,EAAMpc,GAAK,MAGR,CAACqc,KAAKD,GAGjB,OAAO,S,GA9EgB5L,IAAMC,WAsLtBkE,M,iHCn9CfsI,KAAUC,YAAc,6B,IAEhBvb,GAA2BC,IAA3BD,MAA2BC,IAApBC,UAAoBD,IAATE,KACE0O,IAAMC,UA4BlC,SAAS0M,GAAgB7c,GAGvB,IAAI8c,EAAc9c,EAAMA,EAAI+a,MAAM,KAAK,GAAKgC,OAAOC,SAASC,OAAOC,MAAM,GAIrE5d,EAAM,GAGV,GALAwd,EAAcK,UAAUL,GAatB,IAFA,IAAI7P,GAHJ6P,EAAcA,EAAY/B,MAAM,KAAK,IAGfA,MAAM,KAEnBtb,EAAI,EAAGA,EAAIwN,EAAI5N,OAAQI,IAAK,CAEnC,IAAI8R,EAAItE,EAAIxN,GAAGsb,MAAM,KAGjBqC,EAAY7L,EAAE,GACd8L,EAA+B,qBAAV9L,EAAE,IAA6BA,EAAE,GAO1D,GAAI6L,EAAUE,MAAM,eAAgB,CAGlC,IAAI5d,EAAM0d,EAAU/E,QAAQ,aAAc,IAI1C,GAHK/Y,EAAII,KAAMJ,EAAII,GAAO,IAGtB0d,EAAUE,MAAM,YAAa,CAE/B,IAAIjV,EAAQ,YAAYkV,KAAKH,GAAW,GACxC9d,EAAII,GAAK2I,GAASgV,OAGlB/d,EAAII,GAAK2F,KAAKgY,QAIX/d,EAAI8d,GAGE9d,EAAI8d,IAAwC,kBAAnB9d,EAAI8d,IAEtC9d,EAAI8d,GAAa,CAAC9d,EAAI8d,IACtB9d,EAAI8d,GAAW/X,KAAKgY,IAGpB/d,EAAI8d,GAAW/X,KAAKgY,GAPpB/d,EAAI8d,GAAaC,EAazB,OAAO/d,EAOT,SAASke,GAAOxd,GACf,IADmByd,EACpB,uDAD4B,IAAKC,EACjC,uDAD+C,UAE7C,OAAO,IAAItd,SAAQ,SAACC,EAAIC,GACtB,IAAIqd,OAAYne,EACbie,EAAQ,IAETE,EAAc9K,YAAW,WACvB8K,OAAYne,EACZc,EAAIod,KACJD,IAGJld,IAAMP,GAAM,SAACQ,EAAIC,GACfyQ,aAAayM,GACF,OAARnd,EACCH,EAAII,GAEJH,EAAIE,SAwKd,IAAIod,GAAW,CACbC,KAAK,SAAChe,GAIJ,OAAO,IAAIO,SAAQ,SAACC,EAAIC,GACtB,IAAIN,EAAI,sDAAsDH,EAG9D2d,GAFAxd,GAAK,4CAEM,MAAMyS,MAAK,SAAChS,GACrBJ,EAAII,MACH2W,OAAM,SAAC5W,GACRF,EAAIE,UAIVsd,OAAO,SAACpD,EAAKvX,GAGX,OAAO,IAAI/C,SAAQ,SAACC,EAAIC,GACtB,IAAIN,EAAI,uDAAuD0a,EAAK7a,KAClE,mBAAmBI,KAAKC,UAAUwa,EAAKqD,qBACjCve,IAAL2D,IAEDnD,GAAK,QAAQmD,GAGfqa,GAAOxd,EAAI,MAAMyS,MAAK,SAAChS,GACrBJ,EAAII,MACH2W,OAAM,SAAC5W,GACRF,EAAIE,UAIVwd,OAAO,SAAC7a,GAEN,OAAO,IAAI/C,SAAQ,SAACC,EAAIC,GAEtBkd,GADQ,sDAAsDra,EACnD,MAAMsP,MAAK,SAAChS,GACrBJ,EAAII,MACH2W,OAAM,SAAC5W,GACRF,EAAIE,WA0BZ,SAASyd,GAAT,GAA0E,IAAnDC,EAAkD,EAAlDA,WAAWC,EAAuC,EAAvCA,WAAWC,EAA4B,EAA5BA,YAAYnI,EAAgB,EAAhBA,aAAgB,EAC7B/C,mBAAS,IADoB,mBAChEmL,EADgE,KACjDC,EADiD,KAGvE1K,qBAAU,WACRlT,QAAQC,IAAI,eACZ,IAAI4d,GAAS,IAAI9S,MAAOyG,UAYxB,OAtKJ,SAA6CsM,EAASC,GAEpD,IAAIC,EACJ,OAAO,IAAIte,SAAQ,SAACC,EAAIC,GAWtBkd,GAVQ,qDAAqDgB,EAAS,SAASC,EAAvE,mUAUG,MAAMhM,MAAK,SAAC9E,GAErB+Q,EACA/Q,EAAQnI,KAAI,SAAA/E,GAEV,OADAA,EAAKke,IAAIle,EAAKke,IAAI,GACXle,KACNuF,QAAO,SAAC4Y,EAAIne,GACb,IAAI0C,EAAG1C,EAAKke,IAYZ,YAXanf,IAAVof,EAAIzb,IAELyb,EAAIzb,GAAI1C,SACDme,EAAIzb,GAAIwb,MAIfC,EAAIzb,GAAI0b,OAAOpe,EAAKoe,MACpBD,EAAIzb,GAAI2b,WAAW,CAACjb,KAAKC,IAAI8a,EAAIzb,GAAI2b,WAAW,GAAGre,EAAKqe,WAAW,KACnEF,EAAIzb,GAAI4b,SAAS,CAAClb,KAAKuC,IAAIwY,EAAIzb,GAAI4b,SAAS,GAAGte,EAAKse,SAAS,MAExDH,IACP,IACF,IAAII,EAAW5a,OAAOkL,KAAKoP,GAAmB1Y,QAAO,SAAC4Y,EAAIK,GAAL,YAAkBzf,IAANof,EAAgBK,EAAKL,EAAI,IAAIK,SAAKzf,GAOnG,OALAkB,QAAQC,IAAIgN,EAAQ+Q,EAAkBM,GAK/BxB,GAHC,2DAA2DwB,EACnE,iFAEkB,SAEjBvM,MAAK,SAACyM,GAEPxe,QAAQC,IAAIue,IACZA,EAAc9a,OAAOkE,OAAO4W,EAAYlZ,QAAO,SAAC1G,EAAI6f,GAClD,IAAIC,EAAKD,EAAGE,WAAWvf,gBACnB4I,EAAO+C,KAAK4F,MAAM8N,EAAGG,WAOzB,OANAH,EAAGI,YAAc7W,QACFlJ,IAAZF,EAAI8f,IAAqB9f,EAAI8f,GAAMG,YAAYJ,EAAGI,eAEnDjgB,EAAI8f,GAAMD,GAGL7f,IACP,MAEUsD,SAAQ,SAAC4c,GACnBA,EAAKP,KAAKO,EAAKH,WAAWvf,gBAC1B0f,EAAK3f,KAAK,CAAC2f,EAAKH,WAAWxf,MAC3B,IAAI4f,EAAMf,EAAkBc,EAAKP,WACxBzf,IAANigB,IAEDrb,OAAOC,OAAOmb,EAAMC,GACpBD,EAAKzD,KAAOyD,EAAKzD,KAAK2D,KAAK,GACxBla,KAAI,SAAAmG,GAAG,OAAEA,EAAI0M,QAAQ,WAAY,IAAIA,QAAQ,UAAW,KAAK0C,MAAM,QACnE2E,KAAK,GACL5Z,QAAO,SAAA6F,GAAG,OAAEA,EAAItM,OAAO,KAC1BmgB,EAAKzD,KAAL,YAAgB,IAAIG,IAAIsD,EAAKzD,WAGjCrb,QAAQC,IAAIue,GACZ7e,EAAI6e,MACH9H,OAAM,SAAC5W,GACRF,EAAIE,SA+ENmf,CAAoCpB,EAAO,OAAgBA,EAAO,KAClE9L,MAAK,SAACpS,GAEJie,EAAiBje,GACjB6d,EAAW7d,MACV+W,OAAM,SAAC5I,GACR8P,EAAiB,SACD9e,IAAb2e,GACDA,EAAW3P,MAGR,WACL9N,QAAQC,IAAI,wBAEd,IAEF,IAAIif,EAAU,kBAAC,KAAD,CAAOxB,YAAaA,EAAanI,aAAcA,EAC3D4J,aAAc,SAACrR,GACf9N,QAAQC,IAAI6N,EAAE/K,OAAOU,OACrBma,IA/PJ,SAA0Bze,GAExB,IAAIqf,OAAY1f,EAEhB,OAAO,IAAIY,SAAQ,SAACC,EAAIC,GAGtBkd,GAFQ,gDAAgD3d,EAAK,cAElD,MAAM4S,MAAK,SAAChS,GAGrB,IAAIqf,EAAUrf,EAAK+E,KAAI,SAAAmM,GAAI,OAAEA,EAAK0N,WAAWvf,mBAC7CggB,EAAO,YAAO,IAAI5D,IAAI4D,IAEtBZ,EAAYY,EAAQta,KAAI,SAACyZ,GACvB,IAAIpf,EAAOY,EAAKqF,QAAO,SAAC0Z,GAAD,OAAQA,EAAKH,WAAWvf,iBAAiBmf,KAC7DzZ,KAAI,SAAAga,GAAI,OAAEA,EAAKH,WAAWxf,QAC7B,MAAO,CAACof,OAAKpf,WACZ2F,KAAI,SAAAua,GAEL,OADAA,EAASlgB,KAAT,YAAkB,IAAIqc,IAAI6D,EAASlgB,OAC5BkgB,KAET,IAEI/f,EAAI,8CAUR,OATAA,GAAK,+CACLA,GAAK,qBAJU8f,EAAQ9Z,QAAO,SAAC4Y,EAAIK,GAAL,YAAkBzf,IAANof,EAAgBK,EAAKL,EAAI,IAAIK,SAAKzf,GAIzC,IACnCQ,GAAK,+GAOEwd,GANPxd,GAAK,+NAMa,SAEjByS,MAAK,SAAC9E,GAEP,IAAI+Q,EACJ/Q,EAAQnI,KAAI,SAAA/E,GAEV,OADAA,EAAKke,IAAIle,EAAKke,IAAI,GACXle,KACNuF,QAAO,SAAC4Y,EAAIne,GACb,IAAI0C,EAAG1C,EAAKke,IAYZ,YAXanf,IAAVof,EAAIzb,IAELyb,EAAIzb,GAAI1C,SACDme,EAAIzb,GAAIwb,MAIfC,EAAIzb,GAAI0b,OAAOpe,EAAKoe,MACpBD,EAAIzb,GAAI2b,WAAW,CAACjb,KAAKC,IAAI8a,EAAIzb,GAAI2b,WAAW,GAAGre,EAAKqe,WAAW,KACnEF,EAAIzb,GAAI4b,SAAS,CAAClb,KAAKuC,IAAIwY,EAAIzb,GAAI4b,SAAS,GAAGte,EAAKse,SAAS,MAExDH,IACP,IAGFM,EAAYtc,SAAQ,SAAC4c,GACnB,IAAIC,EAAMf,EAAkBc,EAAKP,WACxBzf,IAANigB,IAEDrb,OAAOC,OAAOmb,EAAMC,GAGpBD,EAAKzD,KAAOyD,EAAKzD,KAAK2D,KAAK,GACxBla,KAAI,SAAAmG,GAAG,OAAEA,EAAI0M,QAAQ,QAAS,IAAIA,QAAQ,UAAW,KAAK0C,MAAM,QAChE2E,KAAK,GACL5Z,QAAO,SAAA6F,GAAG,OAAEA,EAAItM,OAAO,KAC1BmgB,EAAKzD,KAAL,YAAgB,IAAIG,IAAIsD,EAAKzD,WAGjC1b,EAAI6e,MACH9H,OAAM,SAAC5W,GACRF,EAAIE,SAsLNwf,CAAiBxR,EAAE/K,OAAOU,OACxBsO,MAAK,SAACpS,GAEJie,EAAiBje,GACjB6d,EAAW7d,MACV+W,OAAM,SAAC5I,GACR8P,EAAiB,SACD9e,IAAb2e,GACDA,EAAW3P,SASfyR,EAAY,KAChB,QAAmBzgB,IAAhB6e,EACH,CAgBE,IAAM6B,EAAU,CACd,CACExW,MAAO,OACPyW,UAAW,OACXzgB,IAAK,OACL0gB,OAAQ,SAAAC,GAAQ,OAAI,uBAAGtH,KApEtBgE,OAAOC,SAASjE,KAAKuH,UAAUvD,OAAOC,SAASuD,SAASlhB,QAAQ0b,MAAM,KAAK,GAoElC,aAAasF,EAASpB,KAAMxb,OAAO,UAAU4c,EAASxgB,QAElG,CACE6J,MAAO,QACPyW,UAAW,QACXzgB,IAAK,QACL8gB,OAAQ,SAACjP,EAAGC,GAAJ,OAAUD,EAAEsN,MAAQrN,EAAEqN,QAEhC,CACEnV,MAAO,aACPyW,UAAW,aACXzgB,IAAK,aACL0gB,OAAQ,SAAAK,GAAQ,OAAI,6BAAM,IAAIhV,KAAKgV,GAAU,KAC7CD,OAAQ,SAACjP,EAAGC,GAAJ,OAAUD,EAAEmP,WAAalP,EAAEkP,aAErC,CACEhX,MAAO,WACPyW,UAAW,WACXzgB,IAAK,WACL0gB,OAAQ,SAAAK,GAAQ,OAAI,6BAAM,IAAIhV,KAAKgV,GAAU,KAC7CD,OAAQ,SAACjP,EAAGC,GAAJ,OAAUD,EAAEoP,SAAWnP,EAAEmP,WAEnC,CACEjX,MAAO,OACPyW,UAAW,OACXzgB,IAAK,SAGHkhB,EAAavC,EAAcvY,QAAO,SAAAua,GAAQ,YAAmB7gB,IAAjB6gB,EAASxB,SAAmBrZ,KAAI,SAAA6a,GAC9E,IAAIQ,EAAO,CACThhB,KAAKwgB,GAaP,YAXoB7gB,IAAjB6gB,EAASxB,QAEVgC,EAAOhC,MAAMwB,EAASxB,MAItBgC,EAAOH,WAAWL,EAASvB,WAAW,GACtC+B,EAAOF,SAASN,EAAStB,SAAS,GAClC8B,EAAOC,KAAKT,EAAStE,KAAKvZ,KAAK,MAG1Bqe,KAEXngB,QAAQC,IAAIigB,GACZX,EAAY,kBAAC,KAAD,CAAOC,QAASA,EAASU,WAAYA,EAAYG,YAAY,IAE3E,OAEE,6BACGnB,EACAK,GAKP,SAASe,GAAT,GACC,IAD0Bf,EAC3B,EAD2BA,YAEnBgB,EAAY/Q,IAAMgR,OAAO,MAG/B,OAAO,6BACL,kBAAC,GAAD,CAAOC,MAAO,GAAIlB,EAAYpgB,MADzB,QAECogB,EAAYpgB,KACjBogB,EAAYlC,eAAevY,KAAI,SAAC4b,EAAIje,GAAL,MAC9B,OAAOA,EAAG,KAAKlD,KAAKC,UAAU+f,EAAYlC,eAAe5a,OAE3D,4BAASzD,IAAI,OACX2hB,IAAKJ,EACLjK,QAAS,SAAAxI,GACQyS,EAAUK,QACNxR,WAAW,UAOtC,SAASyR,GAAT,GAA+B,qBACSrO,wBAAS1T,GADnB,mBACrBygB,EADqB,KACRuB,EADQ,OAGMtO,oBAAS,GAHf,mBAGrBuO,EAHqB,KAGVC,EAHU,KAI5B9N,qBAAU,WAQR,OAPA4N,OAAehiB,GACfoe,GAAWC,KAAK,KAAKpL,MAAK,SAAAhS,GACxBC,QAAQC,IAAIsf,GACZuB,EAAe/gB,EAAKkhB,SACnBvK,OAAM,SAAA5I,GACP9N,QAAQC,IAAI6N,MAEP,WACL9N,QAAQC,IAAI,wBAEd,IAEFiT,qBAAU,WACRlT,QAAQC,IAAI,0BACZ,CAACsf,IAEH,IAAI2B,EAAG,GAuEP,YAtEiBpiB,IAAdygB,IAEDvf,QAAQC,IAAIsf,IACZ2B,EAAG,IACAvc,KAAK,yBAAK3F,IAAI,QAAQsX,QAAS,kBAAIwK,OAAehiB,KAA7C,cACRoiB,EAAGvc,KAAK,kBAAC,KAAD,CAAM3F,IAAI,QAASsQ,MAAO,CAACC,OAAO,QAASgQ,EAAYza,KAAI,SAAAkV,GAAI,OACrE,kBAAC,KAAD,CAAKhb,IAAKgb,EAAKiE,IAAKkD,KAAM,GAAK7R,MAAO,CAACC,OAAO,SAC5C,kBAAC+Q,GAAD,CAAiBf,YAAavF,IAE9B,kBAAC,IAAD,CAAQhb,IAAI,SACJsX,QAAS,WACP0D,EAAKoH,IAAI,MACTlE,GAAW9Q,OAAO,CAACjN,KAAK,OAAOke,eAAe,CAAC,CAACkB,KAAK,MAAMvE,EAAKiE,KAAKlM,MAAK,WAExEmL,GAAWC,KAAK,KAAKpL,MAAK,SAAAhS,GACxBC,QAAQC,IAAIsf,GACZuB,EAAe/gB,EAAKkhB,SACnBvK,OAAM,SAAA5I,GACP9N,QAAQC,IAAI6N,UAIlBwB,MAAO,CAAEgE,MAAO,QAbxB,OAiBA,kBAAC,IAAD,CAAQzM,KAAK,SACLyP,QAAS,WACPwK,OAAehiB,GACfoe,GAAWI,OAAOtD,EAAKiE,KAAKlM,MAAK,WAE/BmL,GAAWC,KAAK,KAAKpL,MAAK,SAAAhS,GACxBC,QAAQC,IAAIsf,GACZuB,EAAe/gB,EAAKkhB,SACnBvK,OAAM,SAAA5I,GACP9N,QAAQC,IAAI6N,UAIlBwB,MAAO,CAAEgE,MAAO,QAbxB,iBAsBN4N,EAAGvc,KAAK,kBAAC,KAAD,CAAM3F,IAAI,SAAUsQ,MAAO,CAACC,OAAO,QACzC,kBAAC,KAAD,CAAKvQ,IAAK,OAAQmiB,KAAM,GAAK7R,MAAO,CAACC,OAAO,SAE1C,kBAAC,IAAD,CAAQ1I,KAAK,SACLyP,QAAS,WACP4G,GAAWE,OAAO,CAACje,KAAK,MAAMke,eAAe,CAAC,CAACkB,KAAK,0BAAqBzf,GAAWiT,MAAK,WACvFmL,GAAWC,KAAK,KAAKpL,MAAK,SAAAhS,GACxBC,QAAQC,IAAIsf,GACZuB,EAAe/gB,EAAKkhB,SACnBvK,OAAM,SAAA5I,GACP9N,QAAQC,IAAI6N,UAIlBwB,MAAO,CAAEgE,MAAO,QAXxB,gBAqBF,kBAAC,KAAD,CAAQhE,MAAO,CAACC,OAAO,SACrB,kBAAC,KAAO8R,OAAR,CAAe/R,MAAO,CAAE3F,MAAO,YAA/B,UACA,kBAAC,KAAD,KACE,kBAAC,KAAO2X,MAAR,CAAehS,MAAO,CAAE3F,MAAO,WAAa4X,aAAW,EAACR,UAAWA,EACnES,WAAY,kBAAIR,GAAcD,IAC9BU,WAAY,kBAAKV,EAAW,KAAKC,GAAa,IAC9CU,YAAa,kBAAKX,EAAWC,GAAa,GAAO,OAHjD,SAOA,kBAAC,KAAD,KACE,kBAAC,KAAOW,QAAR,CAAiBrS,MAAO,CAAEsS,QAAS,cAAgBV,GACnD,kBAAC,KAAOW,OAAR,4BAQV,SAASC,GAAT,GAAwB,qBACgBtP,wBAAS1T,GAD1B,gCAGa0T,oBAAS,IAHtB,6BA4BrB,OAnBS,IAAI9S,SAAQ,SAACC,EAAIC,GAQtBkd,GANM,oIAMK,MAAM/K,MAAK,SAAC9E,GACrBjN,QAAQC,IAAIgN,MACXyJ,OAAM,SAAC5W,GACRF,EAAIE,SAQH,KApTTod,GAAW9Q,OAAO,SAAC4N,EAAKvX,GACtB,OAAO,IAAI/C,SAAQ,SAACC,EAAIC,GACtB,QAAQd,IAAL2D,EAED,OAAO7C,EAAI,eAEbsd,GAAWE,OAAOpD,EAAKvX,GAAIsP,MAAK,SAAChS,GAC/BJ,EAAII,MACH2W,OAAM,SAAC5W,GACRF,EAAIE,U,IAiaKiiB,G,kDAjHb,WAAYzb,GAAQ,IAAD,6BACjB,cAAMA,GAGNtG,QAAQC,IAAIkc,MACZ,EAAKxV,MAAM,CACTqb,iBAAYljB,EACZmjB,aAAY,EACZf,QAAGpiB,GAIL,EAAKojB,QAAQ,CACXC,cAAc,gBACdC,SAAS,WACTC,SAAS,WACT9F,OAAO,UAhBQ,E,gEAqBjB,IAAI+F,EAAWnG,KACfnc,QAAQC,IAAIqiB,GACK,kBAAdA,EAASpB,IAEVpX,KAAKuK,SAAS,CAAC6M,GAAGpX,KAAKoY,QAAQC,gBAEhB,aAAdG,EAASpB,GAEVpX,KAAKuK,SAAS,CAAC6M,GAAGpX,KAAKoY,QAAQE,gBAEZtjB,IAAbwjB,EAASC,QAAiCzjB,IAAhBwjB,EAAS/D,MAGzCzU,KAAK0Y,eAAejjB,KAAKC,UAAU8iB,IACnCxY,KAAKuK,SAAS,CAAC6M,GAAGpX,KAAKoY,QAAQG,YAI/BvY,KAAKuK,SAAS,CAAC4N,aAAY,EAAKf,GAAGpX,KAAKoY,QAAQ3F,W,0CAIhCvC,GACnB,IAAD,OACElQ,KAAKuK,SAAL,2BAAkBvK,KAAKnD,OAAvB,IAA6Bqb,YAAYhI,KACzCha,QAAQC,IAAI+Z,GACZlI,EAAsBkI,EAAK7a,KAAK6a,EAAKuE,MACnCxM,MAAK,SAAC0Q,GACDA,EAAE9jB,OAAO,GACV,EAAK0V,SAAL,2BAAkB,EAAK1N,OAAvB,IAA6B8J,QAAQgS,EAAEA,EAAE9jB,OAAO,GAAGggB,cACrD3e,QAAQC,IAAIwiB,Q,qCAIHhM,GAEb,IACE,IAAIiM,EAAQnjB,KAAKoR,MAAM8F,IA7lBJ,kBADP3L,EA+lBA4X,EAAQH,IA9lBWzX,aAAekK,UAgmB3C0N,EAAQH,EAAII,OAAOD,EAAQH,IAEf,IAAZG,EAAQH,QAAwBzjB,IAAf4jB,EAAQnE,MAAoBmE,EAAQnE,KAAK5f,OAAO,IAElEqB,QAAQC,IAAIoc,OAAOC,SAASuD,UACI,WAA7BxD,OAAOC,SAASuD,UAEjBxD,OAAOC,SAASjE,KAAO,QAAUgE,OAAOC,SAASjE,KAAKuH,UAAUvD,OAAOC,SAASuD,SAASlhB,QAAQ0b,MAAM,KAAK,GAC1G,MAAMqI,EAAQH,EAAE,SAASG,EAAQnE,KAEnCve,QAAQC,IAAIoc,OAAOC,SAASjE,MAC5BvO,KAAKuK,SAAL,2BAAkBvK,KAAKnD,OAAvB,IAA6Bsb,aAAY,MAIzCnY,KAAK8Y,oBAAoBF,IAG7B,MAAM5U,GACJ+U,MAAM/U,GApnBd,IAAkBhD,I,+BAynBd,IAAIoW,EACJ,OAAOpX,KAAKnD,MAAMua,IAEhB,KAAKpX,KAAKoY,QAAQC,cAChBjB,EAAG,kBAACL,GAAD,MACH,MACF,KAAK/W,KAAKoY,QAAQE,SAChBlB,EAAG,kBAACY,GAAD,MACH,MACF,KAAKhY,KAAKoY,QAAQG,SAChBnB,EAAG,kBAAC,GAAD,CACDpM,YAAahL,KAAKnD,MAAMqb,YAAYzD,KACpCxJ,YAAajL,KAAKnD,MAAMqb,YAAY7iB,KACpCsR,QAAS3G,KAAKnD,MAAM8J,UACtB,MACF,KAAK3G,KAAKoY,QAAQ3F,OAChB2E,EAAG,kBAAC3D,GAAD,CAAaC,WAAY,SAAC7d,GAAOK,QAAQC,IAAIN,IAAO4V,aAAa,GAAGmI,YAAY,6BAIvF,OACE,yBAAKrO,UAAU,MAAOC,MAAO,CAACC,OAAO,SAClC2R,O,GA7GS1R,IAAMC,WCzoBJqT,QACW,cAA7BzG,OAAOC,SAASyG,UAEe,UAA7B1G,OAAOC,SAASyG,UAEhB1G,OAAOC,SAASyG,SAASnG,MACvB,2DCZNoG,IAAStD,OAAO,kBAAC,GAAD,MAAS3R,SAASC,eAAe,SD2H3C,kBAAmBiV,WACrBA,UAAUC,cAAcC,MAAMpR,MAAK,SAAAqR,GACjCA,EAAaC,kB","file":"static/js/main.d7788740.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","\r\n\r\nexport function Num2Str_padding(pad,num)\r\n{\r\n  var str=\"0000000000000000\"+(num);\r\n  return str.substr(-pad);\r\n}\r\n\r\nexport function round(num,round_nor=1)\r\n{\r\n  let tmp = (1/round_nor);\r\n  let round_nor_inv = Math.round(tmp);\r\n  if(round_nor_inv===0)\r\n  {\r\n    round_nor_inv=tmp;\r\n  }\r\n\r\n  return Math.round(num*round_nor_inv)/round_nor_inv;\r\n}\r\n\r\n\r\nexport function xstate_GetCurrentMainState(state)\r\n{\r\n  if(typeof state.value === \"string\")\r\n  {\r\n    return {state:state.value, substate:null};\r\n  }\r\n  let complexState = state.value;\r\n  let state_Str = Object.keys(complexState)[0];\r\n  return {state:state_Str, substate:complexState[state_Str]};\r\n\r\n}\r\n\r\nexport function xstate_GetMainState(state)\r\n{\r\n  if(typeof state.value === \"string\")\r\n  {\r\n    return state.value;\r\n  }\r\n  let complexState = state.value;\r\n  return Object.keys(complexState)[0];\r\n}\r\n\r\nexport function xstate_GetSubState(state)\r\n{\r\n  if(typeof state.value === \"string\")\r\n  {\r\n    return undefined;\r\n  }\r\n  let complexState = state.value;\r\n  let state_Str = Object.keys(complexState)[0];\r\n  return complexState[state_Str];\r\n}\r\n\r\n\r\nexport function GetObjElement(rootObj,keyTrace,traceIdxTo=keyTrace.length-1)\r\n{\r\n  let obj = rootObj;\r\n  let traceIdxTLen = traceIdxTo+1;\r\n  if( rootObj === undefined)return;\r\n  for (let i=0;i<traceIdxTLen;i++) {\r\n    let key = keyTrace[i];\r\n    //console.log(obj,key,obj[key]);\r\n    obj = obj[key];\r\n\r\n    if( obj === undefined)return;\r\n  }\r\n  return obj;\r\n}\r\n\r\n\r\n\r\nexport function DictConv(key,dict,dictTheme)\r\n{\r\n  let translation = (dictTheme===undefined)?undefined:GetObjElement(dict,[dictTheme, key]);\r\n\r\n  if(translation===undefined)\r\n  {\r\n    translation = GetObjElement(dict,[\"fallback\", key]);\r\n  }\r\n\r\n  return translation;\r\n}\r\n\r\n\r\n\r\nexport class websocket_autoReconnect{\r\n  constructor(url,timeout=5000) {\r\n      this.url=undefined;\r\n      this.wsclose=false;\r\n      this.reconnectionCounter=0;\r\n      this.reconnectGap_ms=1000;\r\n      this.connectionTimeout_ms=timeout;\r\n      this.connectionTimer=null;\r\n      this.readyState=undefined;\r\n      this._connect(url);\r\n\r\n  }\r\n  onopen(ev){}\r\n  onmessage(ev){}\r\n  onerror(ev){}\r\n  onclose(ev){}\r\n\r\n  onreconnection(reconnectionCounter){}\r\n  onconnectiontimeout(){}\r\n\r\n  setWebsocketCallbackUndefined(ws)\r\n  {\r\n    ws.onopen=\r\n    ws.onmessage=\r\n    ws.onerror=\r\n    ws.onclose=undefined;\r\n  }\r\n  _connect(url) {\r\n    if(this.wsclose)return;\r\n    \r\n    console.log(\"_connect\");\r\n    this.url=url;\r\n    if(this.websocket!==undefined)\r\n    {\r\n        this.reconnectionCounter++;\r\n        let doconnection = this.onreconnection(this.reconnectionCounter);\r\n        if(doconnection!==undefined && doconnection!==true)\r\n        {\r\n          this.websocket=undefined;\r\n          return;\r\n        }\r\n    }\r\n\r\n    if(this.connectionTimer!==undefined)\r\n      clearTimeout(this.connectionTimer);\r\n    this.connectionTimer=undefined;\r\n\r\n    this.websocket = new WebSocket(url);\r\n    this.OPEN=this.websocket.OPEN;\r\n    this.CONNECTING=this.websocket.CONNECTING;\r\n    this.CLOSED=this.websocket.CLOSED;\r\n    this.CLOSING=this.websocket.CLOSING;\r\n    this.connectionTimer = setTimeout(()=>{\r\n        this.close();\r\n        this.onconnectiontimeout();\r\n    },this.connectionTimeout_ms);\r\n    // this.state.WS_DB_Insert.binaryType = \"arraybuffer\";\r\n\r\n    this.websocket.onopen = (ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      clearTimeout(this.connectionTimer);\r\n      this.connectionTimer=undefined;\r\n      return this.onopen(ev);\r\n    };\r\n    this.websocket.onmessage =(ev)=> this.onmessage(ev);\r\n    this.websocket.onerror =(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      //setTimeout(()=>this._connect(url),10);\r\n      return this.onerror(ev);\r\n    }\r\n    this.websocket.onclose =(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      setTimeout(()=>this._connect(url),this.reconnectGap_ms);\r\n      return this.onclose(ev);\r\n    }\r\n  }\r\n  \r\n  reconnect() {\r\n    console.log(    this.wsclose,this.websocket);\r\n    this.wsclose=false;\r\n    if(this.websocket!==undefined)\r\n    {\r\n      if(this.websocket.readyState!==this.websocket.OPEN)\r\n      {\r\n        this.setWebsocketCallbackUndefined(this.websocket);\r\n        this.websocket=undefined;\r\n        this._connect(this.url);\r\n      }\r\n      else\r\n        this.websocket.close();//this should trigger _connect affter close/error event\r\n    }\r\n    else\r\n    {\r\n      this._connect(this.url);\r\n    }\r\n  }\r\n  close() {\r\n    this.wsclose=true;\r\n    \r\n    if(this.connectionTimer!==undefined)\r\n      clearTimeout(this.connectionTimer);\r\n    this.connectionTimer=undefined;\r\n    if(this.websocket!==undefined)\r\n    {\r\n        this.websocket.close();\r\n\r\n    }\r\n  }\r\n\r\n  send(data){\r\n    return this.websocket.send(data);\r\n  }\r\n}\r\n\r\nexport class websocket_reqTrack{\r\n  constructor(websocket) {\r\n    let onopen = websocket.onopen;\r\n    let onmessage = websocket.onmessage;\r\n    let onerror = websocket.onerror;\r\n    let onclose = websocket.onclose;\r\n\r\n    this.trackWindow={};\r\n\r\n    websocket.onopen=(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      this.onopen(ev);\r\n    };\r\n    websocket.onclose=(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      this.onclose(ev);\r\n    };\r\n    websocket.onmessage=(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      let p = JSON.parse(ev.data);\r\n      let type=p.type;\r\n      if(type===\"ACK\" || type===\"NAK\")\r\n      {\r\n        let req_id=p.req_id;\r\n        if(req_id!==undefined)\r\n        {\r\n          let tobj = this.trackWindow[req_id];\r\n          if(tobj!==undefined)\r\n          {\r\n            delete this.trackWindow[req_id];\r\n            if(type===\"ACK\")\r\n            {\r\n              tobj.resolve(p);\r\n            }\r\n            else\r\n            {\r\n              tobj.reject(p);\r\n            }\r\n          }\r\n          else\r\n          {\r\n            req_id=undefined;\r\n          }\r\n        }\r\n        \r\n        if(req_id===undefined){\r\n          \r\n          this.onTrackError({\r\n            type:\"ACK_TRACK_ERR\",\r\n            data:p\r\n          });\r\n        }\r\n      }\r\n      this.onmessage(ev,p);\r\n    };\r\n    websocket.onerror=(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      this.onerror(ev);\r\n    };\r\n    this.websocket=websocket;\r\n  }\r\n  \r\n  onTrackError(ev){}\r\n\r\n  onopen(ev){}\r\n  onmessage(ev){}\r\n  onerror(ev){}\r\n  onclose(ev){}\r\n\r\n\r\n  \r\n  close() {\r\n    return this.websocket.close();\r\n  }\r\n\r\n  send_obj(data,replacer){\r\n\r\n    let req_id = data.req_id;\r\n\r\n    while(req_id===undefined||\r\n      Object.keys(this.trackWindow).reduce((match,id)=>match||id === req_id,false))\r\n      //Check existance\r\n    {\r\n      //if req_id is undefined / exists in the lookup table\r\n      req_id = Math.floor(Math.random()*16777215).toString(16);\r\n    }\r\n    data.req_id = req_id;\r\n\r\n\r\n    this.websocket.send(JSON.stringify(data,replacer));\r\n  \r\n    let trackObj={\r\n      time:Date.now(),\r\n      resolve:undefined,\r\n      reject:undefined,\r\n      data:data,\r\n      rsp:undefined\r\n    };\r\n    this.trackWindow[req_id]=trackObj;\r\n    return new Promise((resolve, reject)=>{\r\n      trackObj.resolve=resolve;\r\n      trackObj.reject=reject;\r\n    });\r\n  }\r\n}","import jsonp from 'jsonp';\r\n\r\n\r\nlet db_url = \"http://hyv.decade.tw:8080/\";\r\n\r\nfunction defFileQueryStr(name,featureSet_sha1,projection)\r\n{\r\n  let url =\"\";\r\n  \r\n  if(name!==undefined)\r\n  url+=\"&name=\"+name;\r\n\r\n  if(featureSet_sha1!==undefined)\r\n    url+=\"&featureSet_sha1=\"+featureSet_sha1;\r\n\r\n  if(projection!==undefined)\r\n    url+=\"&projection=\"+JSON.stringify(projection);\r\n  else\r\n    url+=\"&projection={}\";\r\n\r\n  return url;\r\n}\r\n\r\nfunction defFileQuery(name,featureSet_sha1,projection)\r\n{\r\n    \r\n    let url = db_url+\"query/deffile?\";\r\n    \r\n    url+=\"limit=1000\";\r\n    url+=defFileQueryStr(name,featureSet_sha1,projection);\r\n    return new Promise((res,rej)=>{\r\n\r\n        jsonp(url,  (err,data)=>{\r\n            if(err === null)\r\n                res(data);\r\n            else\r\n                rej(err)\r\n            console.log(err,data);\r\n        });\r\n    });\r\n}\r\n\r\n\r\nfunction inspectionQuery(subFeatureDefSha1,date_start,date_end,limit=100)\r\n{\t\r\n    let TYPE=\"query/inspection\";\r\n    let url = db_url+TYPE+\"?\";\r\n\r\n    url+=\"tStart=\"+date_start.toString()+\"&tEnd=\"+date_end.toString()+\"&\";\r\n    url+=\"limit=\"+limit+\"&page=1&\"\r\n    url+=\"subFeatureDefSha1=\"+subFeatureDefSha1+\"&\"\r\n    if(true)\r\n    {\r\n        url+=\"projection=\"+JSON.stringify(\r\n            {\"_id\":0,\"InspectionData.time_ms\":1,\r\n            \"InspectionData.judgeReports.id\":1,\r\n            \"InspectionData.judgeReports.value\":1,\r\n            \"InspectionData.judgeReports.status\":1,\r\n            \r\n            \"createdAt\":1,\r\n            \"updatedAt\":1,\r\n            \"InspectionData.tag\":1\r\n            });\r\n    }\r\n    else{\r\n        \r\n        url+=\"projection=\"+JSON.stringify(\r\n            {\"_id\":0,\"InspectionData.time_ms\":1,\r\n            \"InspectionData.judgeReports\":1}\r\n            );\r\n    }\r\n    url+=\"\";\r\n    \r\n\r\n    \r\n    return new Promise((res,rej)=>{\r\n\r\n        jsonp(url,  (err,data)=>{\r\n            \r\n            if(err === null)\r\n                res(data);\r\n            else\r\n                rej(err)\r\n            console.log(err,data);\r\n            /*console.log(err,data);\r\n            text=JSON.stringify(\r\n                data.\r\n                reduce((arr,data)=>\r\n                {\r\n                    data.InspectionData.forEach(ele =>arr.push(ele));\r\n                    return arr;\r\n                },[]).\r\n                map(data=>data.judgeReports)\r\n            );*/\r\n        });\r\n    });\r\n\r\n}\r\n\r\n\r\nexport {defFileQuery,inspectionQuery};","\r\nconst BPG_header_L = 9;\r\nlet raw2header=(ws_evt, offset = 0)=>{\r\n  if (( ws_evt.data instanceof ArrayBuffer) && ws_evt.data.byteLength>=BPG_header_L) {\r\n    // var aDataArray = new Float64Array(evt.data);\r\n    // var aDataArray = new Uint8Array(evt.data);\r\n    var headerArray = new Uint8ClampedArray(\r\n      ws_evt.data,offset,BPG_header_L);\r\n    let ret_obj={};\r\n\r\n\r\n    ret_obj.type = String.fromCharCode(headerArray[0],headerArray[1]);\r\n    ret_obj.prop = headerArray[2];\r\n    ret_obj.pgID = (headerArray[3]<<8)+headerArray[4];\r\n    //console.log(ret_obj.pgID);\r\n\r\n    ret_obj.length =\r\n      headerArray[5]<<24 | headerArray[6]<<16 |\r\n      headerArray[7]<<8  | headerArray[8];\r\n    return ret_obj;\r\n  }\r\n  return null;\r\n};\r\nlet raw2obj_rawdata=(ws_evt, offset = 0)=>{\r\n  let ret_obj = raw2header(ws_evt, offset);\r\n  if(ret_obj==null)return null;\r\n\r\n  ret_obj.rawdata = new Uint8ClampedArray(ws_evt.data,\r\n    offset+BPG_header_L,ret_obj.length\r\n  );\r\n\r\n  return ret_obj;\r\n};\r\nlet raw2obj=(ws_evt, offset = 0)=>{\r\n  let ret_obj = raw2header(ws_evt, offset);\r\n  if(ret_obj==null)return null;\r\n\r\n  ret_obj.rawdata = new Uint8ClampedArray(ws_evt.data,\r\n    offset+BPG_header_L,ret_obj.length\r\n  );\r\n  let  enc = new TextDecoder(\"utf-8\");\r\n  let str = enc.decode(ret_obj.rawdata);\r\n  ret_obj.data = JSON.parse(str);\r\n  return ret_obj;\r\n};\r\nlet raw2Obj_IM=(ws_evt, offset = 0)=>{\r\n  let ret_obj = raw2header(ws_evt, offset);\r\n  if(ret_obj==null)return null;\r\n\r\n  let headerArray = new Uint8ClampedArray(ws_evt.data,\r\n    offset+BPG_header_L,6);\r\n  ret_obj.camera_id=headerArray[0];\r\n  ret_obj.session_id=headerArray[1];\r\n  ret_obj.width=(headerArray[2]<<8)|headerArray[3];\r\n  ret_obj.height=(headerArray[4]<<8)|headerArray[5];\r\n  let RGBA_pix_Num = 4*ret_obj.width*ret_obj.height;\r\n  \r\n\r\n  if(true||RGBA_pix_Num == (ret_obj.length-6))\r\n  {\r\n    ret_obj.image=new Uint8ClampedArray(ws_evt.data,\r\n      offset+BPG_header_L+6,4*ret_obj.width*ret_obj.height);\r\n  }\r\n  else\r\n  {\r\n    ret_obj.image=null;\r\n  }\r\n\r\n\r\n  return ret_obj;\r\n};\r\n\r\nvar enc = new TextEncoder();\r\nlet objbarr2raw=(type,prop,pgID,obj,barr=null)=>{\r\n  \r\n  let str = (obj==null)?\"\":JSON.stringify(obj);\r\n\r\n  let encStr= enc.encode(str);\r\n  let objstr_L = encStr.length;\r\n  \r\n  let barr_L = (barr instanceof Uint8Array)?barr.length:0;\r\n  let bbuf = new Uint8Array(BPG_header_L+objstr_L+1+barr_L);\r\n\r\n  bbuf[0] = type.charCodeAt(0);\r\n  bbuf[1] = type.charCodeAt(1);\r\n  bbuf[2] = prop;\r\n  bbuf[3] = pgID>>1;\r\n  bbuf[4] = pgID&255;\r\n\r\n  let data_length =bbuf.length - BPG_header_L;//Add NULL in the end of the string\r\n  bbuf[5] = data_length>>24;\r\n  bbuf[6] = data_length>>16;\r\n  bbuf[7] = data_length>>8;\r\n  bbuf[8] = data_length;\r\n  if(objstr_L!=0)\r\n  {\r\n    bbuf.set(encStr, BPG_header_L);\r\n  }\r\n  bbuf[BPG_header_L+objstr_L]=0;//The end of string session\r\n  if(barr_L!=0)\r\n  {\r\n    bbuf.set(barr, BPG_header_L+objstr_L+1);\r\n  }\r\n  return bbuf;\r\n};\r\n\r\n\r\n\r\nexport const INSPECTION_STATUS = {\r\n  NA:-128,\r\n  SUCCESS:0,\r\n  FAILURE:-1,\r\n};\r\n\r\n\r\n\r\n\r\nexport const DEF_EXTENSION = \"hydef\";\r\n\r\nexport default { raw2header, raw2obj_rawdata, raw2obj,raw2Obj_IM,objbarr2raw,INSPECTION_STATUS }\r\n\r\n//let binaryX = BPG_Protocol.obj2raw(\"TC\",{a:1,b:{c:2}});\r\n//console.log(BPG_Protocol.raw2obj({data:binaryX.buffer}));\r\n","'use strict'\r\n   \r\n\r\nimport React, { useState, useEffect,useRef } from 'react';\r\nimport {round as roundX,GetObjElement} from './UTIL/MISC_Util';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport dclone from 'clone';\r\nimport moment from 'moment';\r\nimport Table from 'antd/lib/table';\r\nimport Button from 'antd/lib/button';\r\n\r\nimport * as logX from 'loglevel';\r\nimport 'chartjs-plugin-zoom'\r\n\r\nimport * as DB_Query from './UTIL/DB_Query';\r\n\r\nimport Input from 'antd/lib/input';\r\nimport Slider from 'antd/lib/slider';\r\nimport TimePicker from 'antd/lib/time-picker';\r\nimport DatePicker from 'antd/lib/date-picker';\r\nimport Checkbox from 'antd/lib/checkbox';\r\n\r\nimport  Typography  from 'antd/lib/typography';\r\nimport ReactResizeDetector from 'react-resize-detector';\r\n\r\nimport Chart from 'chart.js';\r\nimport 'chartjs-plugin-annotation';\r\nimport {INSPECTION_STATUS} from './UTIL/BPG_Protocol';\r\nimport Tag  from 'antd/lib/tag';\r\n\r\n// import { StarOutlined} from '@ant-design/icons';\r\nconst { CheckableTag } = Tag;\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Title, Paragraph, Text } = Typography;\r\nlet log = logX.getLogger(\"AnalysisUI\");\r\n\r\n\r\n\r\nChart.pluginService.register({\r\n  afterDraw: function(chart) {\r\n  }\r\n});\r\n\r\n\r\n\r\nfunction calcCpk(mean,sigma,USL,LSL,target)\r\n{\r\n  \r\n  let CPU = (USL-mean)/(3*sigma);\r\n  let CPL = (mean-LSL)/(3*sigma);\r\n  let CP = Math.min(CPU,CPL);\r\n  let CA = (mean-target)/((USL-LSL)/2);\r\n  let CPK = CP*(1-Math.abs(CA));\r\n  return {mean,sigma,CPU,CPL,CP,CA,CPK}\r\n}\r\nfunction copyStringToClipboard (str) {\r\n  // Create new element\r\n  var el = document.createElement('textarea');\r\n  // Set value (string to be copied)\r\n  el.value = str;\r\n  // Set non-editable to avoid focus and move outside of view\r\n  el.setAttribute('readonly', '');\r\n  el.style = {position: 'absolute', left: '-9999px'};\r\n  document.body.appendChild(el);\r\n  // Select text inside element\r\n  el.select();\r\n  // Copy text to clipboard\r\n  document.execCommand('copy');\r\n  // Remove temporary element\r\n  document.body.removeChild(el);\r\n}\r\n\r\nfunction downloadString(text, fileType, fileName) {\r\n  var blob = new Blob([new Uint8Array([0xef, 0xbb, 0xbf]),text], { type: fileType });\r\n// downloadString(\"a,b,c\\n1,2,3\", \"text/csv\", \"myCSV.csv\")\r\n  var a = document.createElement('a');\r\n  a.download = fileName;\r\n  a.href = URL.createObjectURL(blob);\r\n  a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\r\n  a.style.display = \"none\";\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\r\n}\r\n\r\nfunction isString (value) {\r\n  return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\n\r\n\r\nfunction datePrintSimple(date) {\r\n  function addZero(i) {\r\n    return (i < 10)?\"0\" + i:i;\r\n  }\r\n  var mm = addZero(date.getMonth() + 1); // getMonth() is zero-based\r\n  var dd = addZero(date.getDate());\r\n  var h = addZero(date.getHours());\r\n  var m = addZero(date.getMinutes());\r\n  var s = addZero(date.getSeconds());\r\n\r\n  return [date.getFullYear(),mm,dd].join('/')+\" \"+h+\":\"+m+\":\"+s;\r\n};\r\nfunction convertInspInfo2CSV(reportName,measureList,inspRecGroup,cur_tagState)\r\n{\r\n  let converterV=\"0.0.1 Alpha\"\r\n  let ci=[];\r\n  \r\n  ci.push('\"'+reportName+'\"');\r\n  ci.push(\",\\\"\"+converterV+'\"');\r\n\r\n  ci.push(',,\"tags\"');\r\n  \r\n  ci.push(\",\\\"\"+Object.keys(cur_tagState).filter(key=>cur_tagState[key]==1).join(\",\")+'\"');\r\n  ci.push(\",\\\"\"+Object.keys(cur_tagState).filter(key=>cur_tagState[key]==0).join(\",\")+'\"');\r\n  ci.push(\",\\\"\"+Object.keys(cur_tagState).filter(key=>cur_tagState[key]==-1).join(\",\")+'\"');\r\n  \r\n\r\n  ci.push(\",\\n\");\r\n  console.log(measureList,inspRecGroup);\r\n  function pushDataRow(arr,measureReports,trace,RowName=trace[trace.length-1])\r\n  {\r\n    arr.push('\"'+RowName+'\"');\r\n    measureReports.forEach((rep)=>{\r\n      let ele = GetObjElement(rep,trace);\r\n      if(ele===undefined)ele='';\r\n      arr.push(\",\\\"\"+ele+'\"');\r\n    });\r\n    let additional\r\n\r\n\r\n    arr.push(\"\\n\");\r\n  }\r\n  [\"name\",\"subtype\"]\r\n    .forEach(field=>pushDataRow(ci,measureList,[field]));\r\n\r\n   \r\n\r\n  [\"USL\",\"LSL\",\"value\",\"UCL\",\"LCL\"]\r\n    .forEach(field=>pushDataRow(ci,measureList,[field]));\r\n\r\n  ci.push(\",\\n\");\r\n\r\n  let additionalColumn=[\"tag\"]\r\n  inspRecGroup.forEach(s_group=>{\r\n    s_group.group\r\n      .forEach(data=>{\r\n        let rep=data.judgeReports;\r\n        ci.push(\"'\"+datePrintSimple(new Date(data.time_ms)));\r\n        //The \"'\" in the head of time will let Excel left alingn time string, and have better lookup exprience\r\n        measureList.forEach(m=>\r\n          {\r\n            let s_rep = rep.find(s_rep=>s_rep.id==m.id);\r\n            if(s_rep.status!==INSPECTION_STATUS.NA)\r\n              ci.push(\",\"+s_rep.value);\r\n            else\r\n              ci.push(\",\");\r\n          })\r\n        additionalColumn.forEach(name=>{\r\n          ci.push(\",\");\r\n          switch(name)\r\n          {\r\n            case \"tag\":\r\n              let tag=data.tag;\r\n              if(tag===undefined)tag=\"\";\r\n              else\r\n              {\r\n                tag=tag.replace(/^\\,+/g, \"\").replace(/\\,{2,}/g, \",\")\r\n              }\r\n              ci.push('\"'+tag+'\"');\r\n              break;\r\n          }\r\n          \r\n        })\r\n        ci.push(\"\\n\");\r\n        \r\n      });\r\n  })\r\n  /*\r\n  measureReports.forEach((rep)=>{\r\n    ci.push(\",\");\r\n  });ci.push(\"\\n\");\r\n\r\n  let dateL = measureReports[0].valArr.length;\r\n  for(let i=0;i<dateL;i++)\r\n  {\r\n    pushDataRow(ci,measureReports,[\"valArr\",i],insp[i].time_ms);\r\n  }*/\r\n\r\n\r\n  return ci;\r\n}\r\n\r\nfunction YYYYMMDD(date)\r\n{\r\n  var mm = date.getMonth() + 1; // getMonth() is zero-based\r\n  var dd = date.getDate();\r\n\r\n  return [date.getFullYear(),\r\n          (mm>9 ? '' : '0') + mm,\r\n          (dd>9 ? '' : '0') + dd\r\n         ].join('');\r\n}\r\n\r\nfunction InspectionRecordGrouping(InspectionRecord,largestInterval=2*60*1000)\r\n{\r\n  let fd = InspectionRecord;\r\n  let inspGroups=[];\r\n  let frontGroup=undefined;\r\n  function AddNewGroup(new_rec)\r\n  {\r\n    if(new_rec===undefined)return;\r\n    frontGroup={\r\n      group:[new_rec],\r\n      startTime:new_rec.time_ms,\r\n      endTime:new_rec.time_ms,\r\n    }\r\n    inspGroups.push(frontGroup);\r\n  }\r\n  AddNewGroup(fd[0]);\r\n  for(let i=1;i<fd.length;i++)\r\n  {\r\n    if(fd[i].time_ms-frontGroup.endTime<largestInterval)\r\n    {\r\n      frontGroup.group.push(fd[i]);\r\n      frontGroup.endTime=fd[i].time_ms;\r\n    }\r\n    else\r\n    {\r\n      AddNewGroup(fd[i]);\r\n    }\r\n  }\r\n\r\n  inspGroups.forEach(frontGroup=>{\r\n    let g= frontGroup.group;\r\n    if(g.length==0)return;\r\n\r\n    let stat = g[0].judgeReports.map(x=>({id:x.id}));\r\n    stat=stat.map(s_stat=>{\r\n\r\n      let measures=g.map(singleRep=>singleRep.judgeReports.find(measure=>measure.id==s_stat.id));\r\n      let availData= measures.filter((measure)=>measure.status !==INSPECTION_STATUS.NA);\r\n      let mean = availData.reduce((sum,measure)=>sum+measure.value,0)/availData.length;\r\n      \r\n      let minMax = measures.reduce((mM,measure)=>{\r\n        if(measure.status ===INSPECTION_STATUS.NA)\r\n        {\r\n          return mM;\r\n        }\r\n\r\n\r\n        if(mM.max===undefined || mM.max===null || measure.value>mM.max)\r\n          mM.max = measure.value;\r\n        if(mM.min===undefined || mM.min===null || measure.value<mM.min)\r\n          mM.min = measure.value;\r\n        \r\n        return mM;\r\n\r\n      },{\r\n        min:undefined,\r\n        max:undefined\r\n      });\r\n      let sigma = Math.sqrt(availData.reduce((sum,measure)=>sum+(mean-+measure.value)*(mean-+measure.value),0)/availData.length);\r\n\r\n      return {\r\n        id:s_stat.id,\r\n        mean,sigma,\r\n        min:minMax.min,\r\n        max:minMax.max\r\n      }\r\n    })\r\n\r\n\r\n    frontGroup.stat=stat;\r\n\r\n\r\n  })\r\n\r\n\r\n  return inspGroups;\r\n}\r\n\r\nfunction InspectionRecordGroup_AppendCPK(InspRecGroup,defInspRange)\r\n{\r\n  InspRecGroup.forEach(group=>{\r\n    group.stat.forEach(s_stat=>{\r\n      let defRange = defInspRange.find(s_def=>s_def.id==s_stat.id);\r\n      if(defRange===undefined)return;\r\n      let cpkInfo = calcCpk(s_stat.mean,s_stat.sigma,defRange.USL,defRange.LSL,defRange.value);\r\n      Object.assign(s_stat, cpkInfo);\r\n    })\r\n  })\r\n}\r\n\r\n\r\nfunction inspectionRecGroup_Generate(inspectionRec,groupInterval,measureList)\r\n{\r\n    let inspectionRecGroup = InspectionRecordGrouping(inspectionRec,groupInterval);\r\n    InspectionRecordGroup_AppendCPK(inspectionRecGroup,measureList);\r\n    return inspectionRecGroup;\r\n}\r\n\r\nconst MEASURERSULTRESION=\r\n{\r\n  NA:\"NA\",\r\n  UOK:\"UOK\",\r\n  LOK:\"LOK\",\r\n  \r\n  UCNG:\"UCNG\",\r\n  LCNG:\"LCNG\",\r\n\r\n  USNG:\"USNG\",\r\n  LSNG:\"LSNG\",\r\n};\r\n\r\n\r\nexport const OK_NG_BOX_COLOR_TEXT = {\r\n  [MEASURERSULTRESION.NA]:{COLOR:\"#aaa\",TEXT:MEASURERSULTRESION.NA},\r\n  [MEASURERSULTRESION.UOK]:{COLOR:\"#87d068\",TEXT:MEASURERSULTRESION.UOK},\r\n  [MEASURERSULTRESION.LOK]:{COLOR:\"#87d068\",TEXT:MEASURERSULTRESION.LOK},\r\n  [MEASURERSULTRESION.UCNG]:{COLOR:\"#d0d068\",TEXT:MEASURERSULTRESION.UCNG},\r\n  [MEASURERSULTRESION.LCNG]:{COLOR:\"#d0d068\",TEXT:MEASURERSULTRESION.LCNG},\r\n  [MEASURERSULTRESION.USNG]:{COLOR:\"#f50\",TEXT:MEASURERSULTRESION.USNG},\r\n  [MEASURERSULTRESION.LSNG]:{COLOR:\"#f50\",TEXT:MEASURERSULTRESION.LSNG},\r\n};\r\nfunction newDate(time_ms) {\r\n  return moment(time_ms).toDate();\r\n}\r\n\r\n\r\n\r\n\r\nclass ControlChart extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.divID=\"ControlChart_ID_\" + Math.round(Math.random() * 10000);\r\n      this.charObj = undefined;\r\n      this.state={\r\n          chartOpt:{\r\n              type: 'line',\r\n              data:{labels:[],datasets:[{            \r\n                  \r\n                  borderColor:\"rgba(100, 255, 100,0)\",\r\n                  lineTension: 0,data:[],\r\n                  pointBackgroundColor:[]},\r\n                {            \r\n                  type: \"scatter\",\r\n                  borderColor:\"rgba(100, 255, 100)\",\r\n                  lineTension: 0,data:[],\r\n                  pointBackgroundColor:[]}\r\n                \r\n                ]},\r\n              bezierCurve : false,\r\n              options: {\r\n                \r\n                  scales: {\r\n                      xAxes: [\r\n                        {\r\n                          display: true,\r\n                          type: 'time',\r\n                          distribution: \"linear\",\r\n                          ticks: {\r\n                            callback: function(value, index, values) {\r\n                              return value.toString();\r\n                            },\r\n                            source: 'labels',\r\n                            autoSkip: true\r\n                          },\r\n                          time:{\r\n                            displayFormat:true,\r\n                            displayFormats:{\r\n                              hour: \"MMM D, h:mm:ss\"\r\n                            },\r\n                            minUnit:\"hour\"\r\n                          }\r\n                        }] ,\r\n                      yAxes: [{\r\n                        display: true,\r\n                        scaleLabel: {\r\n                          display: true,\r\n                        }\r\n                      }]  \r\n                  },\r\n                  elements: {\r\n                      line: {fill: false},\r\n                      point: { radius: 6 } \r\n                  },\r\n                  bezierCurve : false,\r\n                  animation: {\r\n                      duration: 0\r\n                  },\r\n                  maintainAspectRatio: false,\r\n                  responsive: true,\r\n                  title: {\r\n                      display: true,\r\n                      text: ''\r\n                  },\r\n                  annotation: {\r\n                      annotations: []\r\n                  },\r\n                  legend: {\r\n                      display: true\r\n                  },\r\n                  tooltips: {\r\n                      enabled: true\r\n                  }\r\n              }\r\n          },\r\n          \r\n\r\n      };\r\n\r\n      this.state.chartOpt.options.pan={\r\n          enabled: true,\r\n          mode: 'y' // is panning about the y axis neccessary for bar charts?\r\n        }\r\n      this.state.chartOpt.options.zoom={\r\n          enabled: true,\r\n          mode: 'y',\r\n      }\r\n\r\n\r\n\r\n      this.default_annotationTargets=[\r\n          {type:\"USL\",color:\"rgba(200, 0, 0,0.2)\"},\r\n          {type:\"LSL\",color:\"rgba(200, 0, 0,0.2)\"},\r\n          {type:\"UCL\",color:\"rgba(100, 100, 0,0.2)\"},\r\n          {type:\"LCL\",color:\"rgba(100, 100, 0,0.2)\"},\r\n          {type:\"value\",color:\"rgba(0, 0, 0,0.2)\"},\r\n      ];\r\n\r\n      \r\n  } \r\n  \r\n  componentWillMount(nextProps, nextState){\r\n  }\r\n  componentWillUpdate(nextProps, nextState){\r\n    this.PropsUpdate(nextProps);\r\n  }\r\n\r\n  genSingleRepPoints(_inspectionRecGroup,_targetMeasure,_xAxisRange,color)\r\n  {\r\n    let value_target=_targetMeasure[\"value\"];\r\n    return _inspectionRecGroup\r\n        .reduce((sumG,recG)=>sumG.concat(recG.group),[])//make [{group:[a,b]},{group:[c,d]}] => [a,b,c,d...]\r\n        .reduce((acc_chart_data,rep,idx)=>{\r\n          //acc_data.labels.push(rep.time_ms);\r\n          if(_xAxisRange!==undefined)\r\n          {\r\n            if(_xAxisRange[0]>rep.time_ms || \r\n              _xAxisRange[1]<rep.time_ms)return acc_chart_data;\r\n          }\r\n\r\n          let measureObj = rep.judgeReports.find((jrep)=>jrep.id===_targetMeasure.id);\r\n            \r\n\r\n          let measureValue=measureObj.value;\r\n          let pointColor=color;\r\n\r\n          if(pointColor===undefined)\r\n          {\r\n            switch(measureObj.status)\r\n              {\r\n              case INSPECTION_STATUS.SUCCESS:\r\n                pointColor=\"rgba(0,255,200,0.2)\";\r\n              break;\r\n              case INSPECTION_STATUS.FAILURE:\r\n                pointColor=\"rgba(255,0,200,0.2)\";\r\n              break;\r\n              case INSPECTION_STATUS.NA:\r\n                pointColor=\"#000000\";\r\n                measureValue=value_target;\r\n              break;\r\n              }\r\n          }\r\n          else\r\n          {\r\n            if(measureObj.status === INSPECTION_STATUS.NA)\r\n            {\r\n              pointColor=\"#000000\";\r\n              measureValue=value_target;\r\n            }\r\n          }\r\n\r\n            let val={\r\n            x:new Date(rep.time_ms).toString(),\r\n            y:measureValue,\r\n            tag:rep.tag\r\n            };\r\n            \r\n\r\n          acc_chart_data.pointBackgroundColor.push(pointColor);\r\n          //TODO:for now there is only one data set in one chart\r\n          acc_chart_data.data.push(val);\r\n          return acc_chart_data;\r\n      }, { \r\n        borderColor:\"rgba(100, 255, 100,0)\",\r\n        lineTension: 0,data:[],\r\n        pointBackgroundColor:[]});\r\n  }\r\n\r\n  dataPointNormalizer(value,USL,targetValue,LSL,bestEffert=true)\r\n  {\r\n    if(USL==LSL)return 1/0.0;\r\n    if(bestEffert)\r\n    {\r\n      if(targetValue<=LSL)\r\n      {\r\n        LSL=targetValue-(USL-targetValue);\r\n      }\r\n      else if(targetValue>=USL)\r\n      {\r\n        USL = targetValue+(targetValue-LSL);\r\n      }\r\n      if(USL<=targetValue || LSL >=targetValue)return 1/0.0;\r\n    }\r\n\r\n    let mValue;\r\n    //console.log(value,USL,targetValue,LSL);\r\n    if(value>targetValue)\r\n    {\r\n      mValue=(value-targetValue)/(USL-targetValue);\r\n    }\r\n    else\r\n    {\r\n      mValue=(value-targetValue)/(targetValue-LSL);\r\n    }\r\n    return mValue;\r\n  }\r\n\r\n  genGroupRepPoints(_inspectionRecGroup,_targetMeasure,_xAxisRange,color)\r\n  {\r\n    return _inspectionRecGroup.reduce((acc_chart_data,repG)=>{\r\n      let this_id_stat = repG.stat.\r\n        find((st)=>st.id===_targetMeasure.id);\r\n      \r\n      let value =this_id_stat.mean;\r\n      let time = repG.group.reduce((sum,rep)=>sum+rep.time_ms,0)/repG.group.length;\r\n      if(_xAxisRange!==undefined)\r\n      {\r\n        if(_xAxisRange[0]>time || \r\n          _xAxisRange[1]<time)return acc_chart_data;\r\n      }\r\n      let pointColor=(color===undefined)?\"rgba(0,255,0,1)\":color;\r\n        let val={\r\n          x:new Date(time).toString(),\r\n        y:value,\r\n          data:repG,\r\n          stat:this_id_stat\r\n        };\r\n\r\n      \r\n      acc_chart_data.pointBackgroundColor.push(pointColor);\r\n      //TODO:for now there is only one data set in one chart\r\n      acc_chart_data.data.push(val);\r\n      return acc_chart_data;\r\n    }, { \r\n      type: \"scatter\",\r\n      borderColor:\"rgba(100, 255, 100,1)\",\r\n      lineTension: 0,data:[],\r\n      pointBackgroundColor:[],} );\r\n  }\r\n\r\n\r\n  colorPalette(idx,arrLen,alpha=1,hueOffset=0,sat=\"100%\",light=\"50%\"){\r\n    let hue=360*idx/arrLen+hueOffset;\r\n    return \"hsla(\"+hue+\", \"+sat+\", \"+light+\",\"+alpha+\")\";\r\n  }\r\n  PropsUpdate(nextProps) {\r\n    console.log(\">>>>\");\r\n    let doMultipleChart=nextProps.targetMeasure.length!=1;\r\n    if(this.targetMeasure_cache != nextProps.targetMeasure ||\r\n      this.inspectionRecGroup != nextProps.inspectionRecGroup)\r\n    {\r\n      this.doChartDataUpdate(nextProps,doMultipleChart);\r\n    }\r\n    this.targetMeasure_cache = nextProps.targetMeasure;\r\n    this.inspectionRecGroup = nextProps.inspectionRecGroup;\r\n\r\n    let N_LSL=-100;\r\n    let N_USL=100;\r\n    let N_value_target=0;\r\n    if(doMultipleChart)\r\n    {\r\n      N_LSL=-100;\r\n      N_USL=100;\r\n      N_value_target=0;\r\n    }\r\n    else\r\n    {\r\n      let _targetMeasure = nextProps.targetMeasure[0];\r\n      N_LSL=_targetMeasure[\"LSL\"];\r\n      N_USL=_targetMeasure[\"USL\"];\r\n      N_value_target=_targetMeasure[\"value\"];\r\n    }\r\n\r\n    if(N_LSL!=0 || N_USL!=0 || N_value_target!=0)\r\n    {\r\n      this.state.chartOpt.options.scales.yAxes[0].ticks={\r\n        min:1.2*(N_LSL-N_value_target)+N_value_target,\r\n        max:1.2*(N_USL-N_value_target)+N_value_target,\r\n      };\r\n    }\r\n    else\r\n    {\r\n\r\n    }\r\n\r\n    this.charObj.update();\r\n      \r\n    //console.log(this.state.chartOpt.options.scales);\r\n\r\n  }\r\n      \r\n  doChartDataUpdate(nextProps,doMultipleChart){\r\n      \r\n      //Make sure the data object is the same, don't change it/ you gonna set the data object to chart again\r\n      this.state.chartOpt.data.labels=[];\r\n      this.state.chartOpt.data.datasets.forEach((datInfo)=>{\r\n          datInfo.data=[];\r\n          datInfo.pointBackgroundColor=[];\r\n        });\r\n\r\n        \r\n      let length = nextProps.inspectionRecGroup.length;\r\n      if(length===0)return;\r\n\r\n\r\n      let _inspectionRecGroup = nextProps.inspectionRecGroup;\r\n      let _xAxisRange = nextProps.xAxisRange;\r\n\r\n\r\n        \r\n      let N_LSL=-100;\r\n      let N_USL=100;\r\n      let N_value_target=0;\r\n      this.state.chartOpt.data.datasets=[];\r\n      if(doMultipleChart)\r\n      {\r\n        N_LSL=-100;\r\n        N_USL=100;\r\n        N_value_target=0;\r\n      }\r\n      else\r\n      {\r\n        let _targetMeasure = nextProps.targetMeasure[0];\r\n        N_LSL=_targetMeasure[\"LSL\"];\r\n        N_USL=_targetMeasure[\"USL\"];\r\n        N_value_target=_targetMeasure[\"value\"];\r\n      }\r\n      //this.state.chartOpt.options.legend.display=(nextProps.targetMeasure.length>1);\r\n      nextProps.targetMeasure.forEach((_targetMeasure,idx,arr)=>{\r\n        \r\n        let pointColor=arr.length>1?this.colorPalette(idx,arr.length,0.4,100):undefined;\r\n        let chart_data = this.genSingleRepPoints(_inspectionRecGroup,_targetMeasure,_xAxisRange,pointColor);\r\n        let groupColor=this.colorPalette(idx,arr.length,1,100);\r\n        let chart_group_data = this.genGroupRepPoints(_inspectionRecGroup,_targetMeasure,_xAxisRange,groupColor);\r\n\r\n        if(doMultipleChart)\r\n        {\r\n          let LSL=_targetMeasure[\"LSL\"];\r\n          let USL=_targetMeasure[\"USL\"];\r\n          let value_target=_targetMeasure[\"value\"];\r\n    \r\n          chart_data.data.forEach(dat=>{\r\n\r\n            dat.original_y=dat.y\r\n            dat.y=\r\n              (N_USL)*this.dataPointNormalizer(dat.y,USL,value_target,LSL)});\r\n  \r\n          chart_group_data.data.forEach(dat=>{\r\n            dat.original_y=dat.y\r\n            dat.y=\r\n              (N_USL)*this.dataPointNormalizer(dat.y,USL,value_target,LSL)});\r\n        }\r\n        else\r\n        {\r\n          chart_data.data.forEach(dat=>{dat.original_y=dat.y});\r\n          chart_group_data.data.forEach(dat=>{dat.original_y=dat.y});\r\n        }\r\n        //console.log(chart_data.data);\r\n        let dataSet = this.state.chartOpt.data.datasets;\r\n        dataSet.push(chart_data);\r\n        dataSet.push(chart_group_data);\r\n        \r\n        dataSet[dataSet.length-2].label=\"\";\r\n        dataSet[dataSet.length-1].label=_targetMeasure.name;\r\n        \r\n        //dataSet[dataSet.length-2].borderColor=(pointColor);\r\n        dataSet[dataSet.length-2].backgroundColor=(pointColor);\r\n\r\n        dataSet[dataSet.length-1].borderColor=(groupColor);\r\n        dataSet[dataSet.length-1].backgroundColor=(groupColor);\r\n        //dataSet[dataSet.length-1].pointRadius=10;\r\n\r\n      })\r\n      this.state.chartOpt.data.labels = \r\n      _inspectionRecGroup.map(g=>datePrintSimple(new Date((g.startTime+g.endTime)/2)));\r\n\r\n\r\n      let annotationTargets=this.props.anotationTargets;\r\n      if(annotationTargets===undefined)\r\n      {\r\n          annotationTargets = this.default_annotationTargets\r\n      }\r\n\r\n      let annoT={\r\n        USL:N_USL,\r\n        LSL:N_LSL,\r\n        value:N_value_target,\r\n      };//_targetMeasure;\r\n\r\n      this.state.chartOpt.options.annotation.annotations = \r\n          annotationTargets.map((annotationTar) => {\r\n          \r\n              let val = annoT[annotationTar.type];\r\n              return ({\r\n                  type: 'line',\r\n                  mode: 'horizontal',\r\n                  scaleID: 'y-axis-0',\r\n                  value: val,\r\n                  borderColor: annotationTar.color,\r\n                  borderWidth: 4,\r\n                  borderDash: [12, 12],\r\n                  label: {\r\n                      position: \"right\",\r\n                      enabled: true,\r\n                      content: \"\"//annotationTar.type+\":\"+val\r\n                  },\r\n                  onMouseover: function (e) {\r\n                    document.getElementById(\"info\").innerHTML = 'whatever';\r\n                  },\r\n              });\r\n          });\r\n      \r\n      this.state.chartOpt.options.tooltips={\r\n        callbacks: {\r\n          title: function(tooltipItem, data) {\r\n            // let datasetIndex = tooltipItem[0].datasetIndex;\r\n            // let index = tooltipItem[0].index;\r\n\r\n            // return data.datasets[datasetIndex].data[index].original_y\r\n            return \"\"\r\n          },\r\n          label: function(tooltipItem, data) {\r\n\r\n            let datasetIndex = tooltipItem.datasetIndex;\r\n            if(datasetIndex===undefined)return \"\"\r\n            let index = tooltipItem.index;\r\n\r\n            console.log(data,data.datasets[datasetIndex]);\r\n            return data.datasets[datasetIndex].data[index].original_y\r\n          },\r\n          afterLabel: function(tooltipItem, data) {\r\n            let datasetIndex = tooltipItem.datasetIndex;\r\n            let index = tooltipItem.index;\r\n            let dataOnTip=data.datasets[datasetIndex].data[index];\r\n            let stat = dataOnTip.stat;\r\n            if(stat===undefined)return dataOnTip.x+\"\\ntag:\"+dataOnTip.tag;\r\n\r\n            let groupSize = dataOnTip.data.group.length;\r\n            if(groupSize==0)return dataOnTip.x;\r\n            let str_arr=[\r\n              moment(dataOnTip.data.group[0].time_ms).format(\"YYYY/MM/DD , h:mm:ss a\"),\r\n              moment(dataOnTip.data.group[groupSize-1].time_ms).format(\"YYYY/MM/DD , h:mm:ss a\")\r\n            ];\r\n\r\n\r\n            let str = Object.keys(stat).map(key=>key+\":\"+\r\n              ((stat[key]!=null)?stat[key].toFixed(4):\"NULL\")\r\n            );\r\n            str_arr = str_arr.concat(str);\r\n            if(dataOnTip.data.group!==undefined)\r\n              str_arr.push(\"count:\"+dataOnTip.data.group.length);\r\n            return str_arr;\r\n\r\n\r\n          }\r\n        },\r\n        backgroundColor: '#FFF',\r\n        titleFontSize: 16,\r\n        titleFontColor: '#0066ff',\r\n        bodyFontColor: '#000',\r\n        bodyFontSize: 14,\r\n        displayColors: true\r\n      }\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n      var ctx = document.getElementById(this.divID).getContext(\"2d\");\r\n\r\n      this.charObj = new Chart(ctx, this.state.chartOpt);\r\n      this.PropsUpdate(this.props);\r\n  }\r\n\r\n  render() {\r\n    return <div className={this.props.className} style={this.props.style}> \r\n        <canvas id={this.divID}  style={{height: \"100%\"}} className={this.props.className}/>\r\n    </div>\r\n  }\r\n\r\n}\r\n\r\nfunction Date_addDay(date,addDays)\r\n{\r\n  if( date===undefined)date=new Date();\r\n\r\n  return date.setDate(date.getDate() + addDays);\r\n}\r\n\r\nclass InspRecStream\r\n{\r\n  constructor(){\r\n    this.reset();\r\n    this.newFeedCallBack=(newStream,fullStream)=>console.log(\"newFeedCallBack=>\",newStream,fullStream);\r\n    this.liveFeedMode=false;\r\n  }\r\n  \r\n  resetStreamInfo()\r\n  {\r\n    this.rec=[];\r\n    this.liveFeedInterval=10000;\r\n    this.passiveQueryRange=[];\r\n    this.liveQueryRange=[];\r\n    if(this.timeoutHDL!==undefined)\r\n    {\r\n      clearTimeout(this.timeoutHDL);\r\n    }\r\n    this.timeoutHDL=undefined;\r\n  }\r\n  reset()\r\n  {\r\n    this.defFile=undefined;\r\n    this.resetStreamInfo();\r\n  }\r\n\r\n  setDefFile(defFile)\r\n  {\r\n    this.resetStreamInfo();\r\n    this.defFile=JSON.parse(JSON.stringify(defFile));\r\n    console.log(\"setDefFile=\",defFile);\r\n  }\r\n\r\n  newStreamFeed(inspectionRec)\r\n  {\r\n    inspectionRec.sort(function(a, b) {\r\n      return a.time_ms - b.time_ms;\r\n    })\r\n\r\n    if(this.rec.length>0)\r\n    {\r\n      let lastMsInRec = this.rec[this.rec.length-1].time_ms;\r\n      let recAfterLast = inspectionRec.filter((srec)=>srec.time_ms>lastMsInRec);\r\n      let concatArr = this.rec.concat(recAfterLast);\r\n      console.log( this.rec.length,inspectionRec.length,concatArr.length);\r\n      \r\n      this.rec = concatArr;\r\n\r\n    }\r\n    else\r\n    {\r\n      this.rec = inspectionRec;\r\n    }\r\n    this.newFeedCallBack(inspectionRec,this.rec);\r\n  }\r\n  setLiveFeedMode(enable){\r\n    console.log(enable);\r\n    if(this.rec.length<0)\r\n    {\r\n      enable=false;\r\n    }\r\n\r\n    console.log(this.rec);\r\n    if(enable)\r\n    {\r\n      \r\n      if(this.timeoutHDL==undefined)\r\n      {\r\n        this.liveQueryInspRec();\r\n      }\r\n    }\r\n    else\r\n    {\r\n      if(this.timeoutHDL!==undefined)\r\n      {\r\n        clearTimeout(this.timeoutHDL);\r\n        this.timeoutHDL=undefined;\r\n      }\r\n    }\r\n    return this.liveFeedMode=enable;\r\n  }\r\n\r\n  liveQueryInspRec(timeRange,maxResults)\r\n  {\r\n    if(timeRange==undefined)\r\n    {\r\n      if(this.rec.length>0)\r\n      {\r\n        let lastMsInRec = this.rec[this.rec.length-1].time_ms;\r\n        timeRange=[moment(lastMsInRec)._d.getTime(), moment(Date_addDay(new Date(),1))._d.getTime()];\r\n        console.log(moment(lastMsInRec));\r\n      }\r\n      else\r\n      {\r\n        console.log(\"No existed rec to do live query\");\r\n        \r\n        this.timeoutHDL =undefined;\r\n        return undefined;\r\n      }\r\n    }\r\n    if(maxResults==undefined)\r\n    {\r\n      maxResults=10;\r\n    }\r\n    console.log(\"timeRange=\"+timeRange);\r\n    return DB_Query.inspectionQuery(this.defFile.featureSet_sha1,timeRange[0],timeRange[1],maxResults)\r\n    .then((queryResult)=>{\r\n      let inspectionRec = queryResult.map(res=>res.InspectionData[0]);\r\n      this.newStreamFeed(inspectionRec);\r\n      if(this.liveFeedMode)\r\n      {\r\n        this.timeoutHDL = \r\n          setTimeout(()=>this.liveQueryInspRec(),this.liveFeedInterval);\r\n      }\r\n      else\r\n      {\r\n        this.timeoutHDL =undefined;\r\n      }\r\n      return inspectionRec;\r\n    })\r\n  }\r\n  queryInspRec(timeRange=[moment(Date_addDay(new Date(),-7)), moment(Date_addDay(new Date(),1))])\r\n  {\r\n    if(this.defFile===undefined)return false;\r\n    this.passiveQueryRange = timeRange;\r\n\r\n    //this.liveFeedMode =(moment().isBefore(timeRange[1]));\r\n    if(!this.liveFeedMode)\r\n    {\r\n      this.resetStreamInfo();\r\n    }\r\n    return this.liveQueryInspRec(timeRange,10000000);\r\n  }\r\n\r\n\r\n}\r\n\r\nfunction ListInfoEditUI ({shape_list,initRank=0,onListInfoChange}){\r\n      \r\n  const [sliderV,setSliderV]=useState(initRank);\r\n  const [listInfo,setListInfo]=useState({});\r\n  let measureList = shape_list\r\n    .filter(shape=>shape.type===\"measure\");\r\n  let rankMax=measureList.reduce((max,m)=>max<m.rank?m.rank:max,0);\r\n  let rankMin=measureList.reduce((min,m)=>min>m.rank?m.rank:min,0);\r\n\r\n  if(rankMin==1000)\r\n  {\r\n    rankMin=0;\r\n    rankMax=0;\r\n  }\r\n  if(rankMin==rankMax)\r\n  {\r\n    rankMin=0;\r\n  }\r\n  let marks = {};\r\n\r\n\r\n  marks[rankMin]=rankMin+\"\";\r\n  marks[rankMax]=rankMax+\"\";\r\n  measureList.forEach((m)=>{\r\n    if(m.rank!==undefined)\r\n    {\r\n      marks[m.rank]=m.rank+\"\";\r\n    }\r\n  });\r\n\r\n\r\n  useEffect(()=>{\r\n    if(onListInfoChange==undefined)return;\r\n    let new_list_info={};\r\n    shape_list.forEach((s)=>{\r\n      new_list_info[s.id]={\r\n        name:s.name,\r\n        selected:(s.rank===undefined)||(s.rank<=sliderV)};\r\n    });\r\n    setListInfo(new_list_info);\r\n    onListInfoChange(new_list_info);\r\n  },[sliderV]);\r\n\r\n\r\n  \r\n\r\n  return <>\r\n    <Slider\r\n      min={rankMin}\r\n      max={rankMax}\r\n      onChange={setSliderV}\r\n      marks={marks}\r\n      value={sliderV}\r\n      style={{width:\"300px\",    \r\n      marginLeft: \"auto\",\r\n      marginRight:\"auto\"}}\r\n    />\r\n    \r\n    {Object.keys(listInfo).map(key=><CheckableTag\r\n    checked={listInfo[key].selected}\r\n    onChange={(checked)=>{\r\n      let nLInfo={...listInfo};\r\n      nLInfo[key]={ ...nLInfo[key], selected:checked}\r\n      \r\n      setListInfo(nLInfo);\r\n      onListInfoChange(nLInfo);\r\n    }}>{listInfo[key].name}</CheckableTag>)}\r\n  \r\n  </>;\r\n}\r\n\r\n\r\n\r\nclass APP_ANALYSIS_MODE extends React.Component{\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.ec_canvas = null;\r\n    this.state={\r\n      defFileSearchName:\"\",\r\n      dateRange:[moment(Date_addDay(new Date(),-1)), moment(Date_addDay(new Date(),1))],\r\n      displayRange:[moment(0), moment(Date_addDay(new Date(),1))],\r\n      inspectionRec:[],\r\n        inspectionRec_TagFiltered:[],\r\n      inspectionRecGroup:[],\r\n      groupInterval:2*60*1000,//10 mins\r\n      liveFeedMode:false,\r\n      dataInSync:false,\r\n      controlChartOverlap:false,\r\n      displayListInfo:{},\r\n\r\n\r\n    };\r\n    this.recStream=new InspRecStream();\r\n  }\r\n  \r\n\r\n  stateUpdate(obj) {\r\n    return this.setState({...this.state,...obj});\r\n  }\r\n  liveFeedMode_ctrl(enable=!this.state.liveFeedMode) {\r\n    //console.log(enable);\r\n    enable = this.recStream.setLiveFeedMode(enable);\r\n    return this.stateUpdate({liveFeedMode:enable});\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if(nextProps.defFile!==this.props.defFile)\r\n    {\r\n      console.log(\"shouldComponentUpdate\");\r\n      this.recStream.setDefFile(nextProps.defFile);\r\n    }\r\n    return true;\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState)\r\n  {\r\n    if(nextProps.defFile===undefined)return null;\r\n    if(nextProps.defFile===prevState.__cached_defFile)return prevState;\r\n    let defFile = dclone(nextProps.defFile);\r\n    let features=defFile.featureSet[0].features;\r\n    let __decorator=defFile.featureSet[0].__decorator;\r\n\r\n    //order the feature array according to the __decorator\r\n    let featureInOrder=__decorator.list_id_order.map(id=>features.find(f=>f.id==id));\r\n    defFile.featureSet[0].features=featureInOrder;\r\n\r\n    if(__decorator.control_margin_info===undefined)__decorator.control_margin_info={};\r\n\r\n    let __control_margin_info=__decorator.control_margin_info;\r\n\r\n    {//back up \r\n      __control_margin_info[\"__DEFAULT__\"]=dclone(defFile.featureSet[0].features);\r\n      // console.log(defFile);\r\n\r\n\r\n      \r\n    }\r\n\r\n\r\n\r\n    // console.log(features,__decorator.list_id_order,featureInOrder);\r\n    return {...prevState,defFile,__cached_defFile:nextProps.defFile};\r\n  }\r\n  render() {\r\n    console.log(\">>>>\",this.state);\r\n    if(this.state.defFile===undefined)return null;\r\n    let menu_height=\"HXA\";//auto\r\n    let MenuSet=[];\r\n    let menuStyle={\r\n      top:\"0px\",\r\n      width:\"100px\"\r\n    }\r\n\r\n    let dateRangeReady = \r\n      (this.state.dateRange.length===2) &&\r\n      (this.state.dateRange.reduce(\r\n        (isReady,date)=> \r\n          ( isReady) && \r\n          ( date._d !==undefined) && \r\n          ( date._d.getTime !==undefined)\r\n      ,true));\r\n\r\n    let dateRange=this.state.dateRange.map(dr=>dr._d);\r\n    let DefFileHash = this.props.DefFileHash;\r\n    let DefFileName = this.props.DefFileName;\r\n    let defFileReady = \r\n      isString(this.props.DefFileHash)&&\r\n      this.props.DefFileHash.length>5;\r\n\r\n    const dateFormat = 'YYYY/MM/DD';\r\n    // console.log( this.state.defFile);\r\n    let measureList = this.state.defFile.featureSet[0].features\r\n      .filter(feature=>\r\n        (this.state.displayListInfo[feature.id]!==undefined) &&\r\n        (this.state.displayListInfo[feature.id].selected) &&\r\n        (feature.type===\"measure\"));\r\n    \r\n    // console.log(this.state.defFile);\r\n    document.title = this.state.defFile.name; \r\n    let HEADER=<Typography>\r\n      <Title>{this.state.defFile.name}</Title>\r\n    </Typography>;\r\n    \r\n    let graphCtrlUI=null;\r\n\r\n    if(this.state.inspectionRec.length>0)\r\n    {    \r\n      graphCtrlUI = [\r\n        <Slider range \r\n          min={this.state.inspectionRec[0].time_ms-1000}\r\n          max={this.state.inspectionRec[this.state.inspectionRec.length-1].time_ms+1000}\r\n          defaultValue={\r\n              [this.state.inspectionRec[0].time_ms-1000, \r\n              this.state.inspectionRec[this.state.inspectionRec.length-1].time_ms+1000]} \r\n          step={1000*60*5}\r\n          tipFormatter={(time)=>new Date(time).toString()}\r\n          onChange={(data)=>this.stateUpdate({displayRange:data})}\r\n        />,\r\n        <Checkbox checked={this.state.liveFeedMode} onChange={(ev)=>this.liveFeedMode_ctrl(ev.target.checked)}>LIVE</Checkbox>,\r\n        \"  抽檢間隔\",\r\n        <TimePicker defaultValue={moment('0:'+(this.state.groupInterval/60000), 'HH:mm')} format={'HH:mm'} hourStep={3} minuteStep={1} allowClear={false} \r\n          onChange={(t)=>\r\n          {\r\n            if(t===null)return;\r\n            console.log(t);\r\n            let mo=t._d.getTime();\r\n            let day_base=moment(t._d).startOf('date')._d.getTime();\r\n            console.log(mo-day_base)\r\n            let groupInterval = mo-day_base;\r\n            console.log(\"TimePicker\",this.state.inspectionRec_TagFiltered);\r\n            let inspectionRecGroup =\r\n              inspectionRecGroup_Generate(this.state.inspectionRec_TagFiltered,groupInterval,measureList);\r\n\r\n            this.stateUpdate({inspectionRecGroup,groupInterval});\r\n        }}/>,\r\n        <Checkbox checked={this.state.controlChartOverlap} onChange={(ev)=>this.setState({controlChartOverlap:ev.target.checked})}>重疊顯示</Checkbox>,\r\n      ]\r\n\r\n    }\r\n\r\n    \r\n    console.log(measureList);\r\n    let graphUI=null;\r\n    if(this.state.controlChartOverlap)\r\n    {\r\n      graphUI =\r\n      <div  style={{width:\"95%\",height:\"100%\"}}> \r\n        <ControlChart inspectionRecGroup={this.state.inspectionRecGroup} \r\n          style={{height:\"100%\"}}\r\n          key={\"_\"}\r\n          targetMeasure={measureList} \r\n          xAxisRange={this.state.displayRange}/>\r\n      </div>\r\n    }\r\n    else\r\n    {\r\n      graphUI =\r\n      <div  style={{width:\"95%\"}}> \r\n        {measureList.map(m=>\r\n        <ControlChart inspectionRecGroup={this.state.inspectionRecGroup} \r\n          style={{height:\"400px\"}}\r\n          key={m.name+\"_\"}\r\n          targetMeasure={[m]} \r\n          xAxisRange={this.state.displayRange}/>)}\r\n      </div>\r\n    }\r\n\r\n\r\n    \r\n    return(\r\n    <div className=\"HXF\">\r\n      \r\n      <div className=\"overlayCon s overlayCon width12 HXF\">\r\n        \r\n        {HEADER}\r\n        <div className=\"s height12\">\r\n\r\n          <RangePicker key=\"RP\"\r\n            defaultValue={this.state.dateRange} \r\n            onChange={(date)=>this.stateUpdate({dateRange:date})}/>\r\n\r\n          <Button type=\"primary\" icon=\"search\" disabled={ (!dateRangeReady || !defFileReady) || (this.state.dataInSync)} onClick={\r\n            ()=>{\r\n              this.recStream.newFeedCallBack=\r\n                (newStream,fullStream)=>{\r\n                  if(newStream.length>0)\r\n                  {\r\n                    let latestTime=newStream[newStream.length-1].time_ms;\r\n                    let inspectionRecGroup =\r\n                      inspectionRecGroup_Generate(fullStream,this.state.groupInterval,measureList);\r\n                    this.stateUpdate({\r\n                      inspectionRec:fullStream,\r\n                      inspectionRecGroup:inspectionRecGroup,\r\n                        inspectionRec_TagFiltered:fullStream,\r\n                      displayRange:[this.state.displayRange[0],moment(latestTime+1000)]\r\n                    });\r\n\r\n                    //console.log(\"fullStream=\",fullStream);\r\n                  }\r\n                }\r\n              this.stateUpdate({dataInSync:true});\r\n              this.recStream.queryInspRec(dateRange).then(result=>{\r\n                this.stateUpdate({dataInSync:false});\r\n              }).catch(err=>{\r\n                this.stateUpdate({dataInSync:false});\r\n              });\r\n            }} />\r\n            \r\n          <Button type=\"primary\" icon=\"download\" disabled={!dateRangeReady || !defFileReady || this.state.inspectionRec.length===0} \r\n            onClick={()=>{\r\n              let ReportName=this.state.defFile.name+\"_\"+YYYYMMDD(new Date());\r\n              let csv_arr= convertInspInfo2CSV(ReportName,measureList,this.state.inspectionRecGroup,this.state.tagState);\r\n              let str = csv_arr.join('');\r\n              //copyStringToClipboard(str);\r\n              downloadString(csv_arr.join(''), \"text/csv\", ReportName+\".csv\");\r\n            }} />\r\n            <hr style={{width:\"80%\"}}/>\r\n            <RelatedUsageInfo fullStream2Tag={this.state.inspectionRec}\r\n              control_margin_set={this.state.defFile.featureSet[0].__decorator.control_margin_info}\r\n              onTagStateChange={(tagState)=>{\r\n                  \r\n\r\n                  let updatedDefFile ={...this.state.defFile};\r\n                  // updatedDefFile\r\n                  let updatedDefFile_feature=updatedDefFile.featureSet[0];\r\n                  let __deco_control_margin_info=updatedDefFile_feature.__decorator.control_margin_info;\r\n                  let new_feature=dclone(__deco_control_margin_info[\"__DEFAULT__\"]);\r\n\r\n                  console.log(updatedDefFile,new_feature);\r\n\r\n\r\n                  let mustList = Object.keys(tagState).filter(key=>tagState[key]==1);\r\n                  let mustNotList = Object.keys(tagState).filter(key=>tagState[key]==-1);\r\n\r\n                  let selKey=mustList.find(mustKey=>__deco_control_margin_info[mustKey]!==undefined);\r\n                  if(selKey!==undefined)\r\n                  {\r\n                    let curMargInfo = __deco_control_margin_info[selKey];\r\n                    new_feature = new_feature.map((fea)=>{\r\n                      let matched_cmi=curMargInfo.find(info=>info.id==fea.id);\r\n                      if(matched_cmi===undefined)return fea;\r\n                      \r\n                      return {...fea,...matched_cmi}\r\n                    });\r\n\r\n                  }\r\n                  updatedDefFile.featureSet[0].features=new_feature;\r\n\r\n                  let filterTagsBoolean = \r\n                    this.state.inspectionRec.filter(function(item, index, array){\r\n                        let tArr=item.tag.split(\",\");\r\n                        let everyMust=mustList.every((item)=>tArr.includes(item));\r\n                        let someMustNot=mustNotList.some((item)=>tArr.includes(item));\r\n                        return everyMust && (!someMustNot);\r\n                        //return selectedTrueTags.every((item)=>tArr.includes(item));\r\n                    });\r\n\r\n                  console.log(updatedDefFile);\r\n                  let inspectionRecGroup =\r\n                      inspectionRecGroup_Generate(filterTagsBoolean,this.state.groupInterval,measureList);\r\n                  //console.log(filterTagsBoolean,inspectionRecGroup);\r\n                  this.stateUpdate({\r\n                    tagState,\r\n                    inspectionRecGroup:inspectionRecGroup,\r\n                    inspectionRec_TagFiltered:filterTagsBoolean,\r\n                    defFile:updatedDefFile\r\n                  });\r\n\r\n\r\n              }}/>\r\n\r\n\r\n            <ListInfoEditUI shape_list={this.state.defFile.featureSet[0].features.filter(feature=>(feature.type===\"measure\"))}\r\n            onListInfoChange={(listInfo)=>{\r\n              console.log(listInfo);\r\n              this.setState({displayListInfo:listInfo})\r\n            }}/>\r\n            \r\n            <hr style={{width:\"80%\"}}/>\r\n        </div>\r\n\r\n        {graphCtrlUI}\r\n        {graphUI}\r\n        <div key=\"k1\" className={\"s overlay scroll MenuAnim \" + menu_height} style={menuStyle}>\r\n          {MenuSet}\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass RelatedUsageInfo extends React.Component{\r\n//http://hyv.decade.tw:8080/query/deffile?name=BOS-LT13BH3421&\r\n// http://localhost:3000/hyvision_monitor/0.0.0/?v=0&hash=9fa42a5e990e4da632070e95daf14ec50de8a112&name=BOS-LT13BH3421\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            tags:{\r\n                //\"name\":false\r\n            }\r\n            // DefFileInfo:[],\r\n        };\r\n\r\n        this.checkInspectionRec=undefined;\r\n        // this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(this.checkInspectionRec===nextProps.fullStream2Tag)\r\n        {\r\n            return;\r\n        }\r\n        this.checkInspectionRec=nextProps.fullStream2Tag;\r\n        console.log(\"props.fullStream2Tag\",nextProps.fullStream2Tag);\r\n        const uniSet2 = new Set();\r\n        // uniSet2.add(\"judgeReport Tag\");\r\n        if(nextProps.fullStream2Tag.length>0){\r\n            nextProps.fullStream2Tag.forEach(function(e,i,a){\r\n                //console.log(\"e.tag=\",e.tag);\r\n                let tagSplit=e.tag.split(\",\");\r\n                //console.log(\"e.tag.split=\",e.tagSplit);\r\n                tagSplit.forEach(function(e2,i2,a2){\r\n                    //console.log(\"forEach2\",e2);\r\n                    if(e2.length!=0)\r\n                        uniSet2.add(e2);\r\n                });\r\n            });\r\n            let tags2={};\r\n            Array.from(uniSet2).forEach(function(key){\r\n                tags2[key]=0;\r\n            });\r\n\r\n            this.setState( {tags:tags2});\r\n\r\n            this.props.onTagStateChange(tags2);\r\n        }\r\n    }\r\n    handleTagChange(){\r\n        console.log(\"handleTagChange\");\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, prevState)\r\n    {\r\n        console.log(\"props.fullStream2Tag\",props.fullStream2Tag);\r\n        const uniSet2 = new Set();\r\n        // uniSet2.add(\"judgeReport Tag\");\r\n        if(props.fullStream2Tag.length>0){\r\n            props.fullStream2Tag.forEach(function(e,i,a){\r\n                //console.log(\"e.tag=\",e.tag);\r\n                let tagSplit=e.tag.split(\",\");\r\n                //console.log(\"e.tag.split=\",e.tagSplit);\r\n                tagSplit.forEach(function(e2,i2,a2){\r\n                    //console.log(\"forEach2\",e2);\r\n                    if(e2.length!=0)\r\n                        uniSet2.add(e2);\r\n                });\r\n            });\r\n            let tags2={...prevState.tags};\r\n            Array.from(uniSet2).forEach(function(key){\r\n              if(tags2[key]===undefined)\r\n                tags2[key]=0;\r\n            });\r\n\r\n            return {tags:tags2};\r\n\r\n        }\r\n        return null;\r\n    }\r\n\r\n    handleTagChange = (key,onoff) =>\r\n    {\r\n      let tags2={...this.state.tags};\r\n      //if the special tag is set to SET, unset other special tags.\r\n      if(onoff==1 && this.props.control_margin_set!==undefined)\r\n      {\r\n        if(this.props.control_margin_set[key]!==undefined)\r\n        {\r\n          Object.keys(tags2).forEach((key)=>{\r\n            if(this.props.control_margin_set[key]!==undefined)\r\n            {\r\n              tags2[key]=0;\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n        if(key===undefined)\r\n        {\r\n          return;\r\n        }\r\n        if(key==null)\r\n        {\r\n          Object.keys(tags2).forEach((key)=>{\r\n            tags2[key]=onoff;\r\n          });\r\n        }\r\n        else\r\n        {\r\n          tags2[key]=onoff;\r\n        }\r\n        this.props.onTagStateChange(tags2);\r\n        this.setState( {tags:tags2});\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"this.state.tags\",this.state.tags);\r\n        // control_margin_set\r\n        return (\r\n          <>\r\n            <Tag color=\"#87d068\" \r\n            onClick={_=>this.handleTagChange(null,1)}\r\n            >O</Tag>:\r\n            {Object.keys(this.state.tags).map((key)=>{\r\n              let tagName=key;\r\n              if(this.props.control_margin_set!==undefined && this.props.control_margin_set[key]!==undefined)\r\n              {\r\n                tagName=\"[\"+key+\"]\";\r\n              }\r\n                return (\r\n                  <Tag \r\n                  color={(this.state.tags[key]==1)?\"#87d068\":undefined}\r\n                  key={key}\r\n                  onClick={_=>this.handleTagChange(key,(this.state.tags[key]!=1)?1:0)}\r\n                  >{tagName}</Tag>\r\n                );\r\n            })\r\n            \r\n            }\r\n\r\n            <br/>\r\n            <Tag color=\"#f50\"\r\n            onClick={_=>this.handleTagChange(null,-1)}\r\n            >X</Tag>:\r\n            {Object.keys(this.state.tags).map((key, index, array)=>{\r\n                let tagName=key;\r\n                if(this.props.control_margin_set!==undefined && this.props.control_margin_set[key]!==undefined)\r\n                {\r\n                  tagName=\"[\"+key+\"]\";\r\n                }\r\n                return (\r\n                  <Tag color={(this.state.tags[key]==-1)?\"#f50\":undefined}\r\n                  key={key}\r\n                  onClick={_=>this.handleTagChange(key,(this.state.tags[key]!=-1)?-1:0)}\r\n                  >{tagName}</Tag>\r\n                );\r\n            })\r\n            \r\n            }\r\n          </>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n// function getDef(q_info) {\r\n//     let result\r\n//     console.log(\"q_info\",q_info);\r\n//     DB_Query.defFileQuery(q_info.name,q_info.hash).\r\n//     then((q)=>{\r\n//         if(q.length>0){\r\n//\r\n//             result=q;\r\n//         }else{\r\n//             console.log(\"[X]No result.\");\r\n//         }\r\n//\r\n//     });\r\n//     return result;\r\n// }\r\nexport default APP_ANALYSIS_MODE;","import React , { useState,useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport APP_ANALYSIS_MODE from \"./AnalysisUI\";\r\nimport * as DB_Query from './UTIL/DB_Query';\r\nimport  Modal  from 'antd/lib/modal';\r\nimport QrScanner from 'qr-scanner';\r\nimport jsonp from 'jsonp';\r\n\r\nimport  Typography  from 'antd/lib/typography';\r\nimport Input from 'antd/lib/input';\r\nimport Button from 'antd/lib/button';\r\nimport Table from 'antd/lib/table';\r\nimport Col from 'antd/lib/col';\r\nimport Row from 'antd/lib/row';\r\n// import { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons-react';\r\n//import PlusOutlined from '@ant-design/icons/PlusOutlined';\r\nimport Layout from 'antd/lib/layout';\r\nQrScanner.WORKER_PATH = \"./qr-scanner-worker.min.js\";\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\nclass WebCam_SQScan extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n   \r\n  componentDidMount() {\r\n    let video =this.refs.QR_WebCam;\r\n    \r\n    QrScanner.hasCamera().then(hasCamera => console.log(hasCamera));\r\n    this.qrScanner = new QrScanner(video, this.props.onScanResult);\r\n    \r\n    this.qrScanner.start();\r\n    console.log(this.qrScanner);\r\n  }\r\n  componentWillUnmount() {\r\n    this.qrScanner.destroy();\r\n    this.qrScanner = undefined;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <video ref=\"QR_WebCam\" className={this.props.className} style={this.props.style} muted playsInline/>\r\n    );\r\n  }\r\n}\r\n\r\nfunction getAllUrlParams(url) {\r\n\r\n  // get query string from url (optional) or window\r\n  var queryString = url ? url.split('?')[1] : window.location.search.slice(1);\r\n\r\n  queryString = decodeURI(queryString);\r\n  // we'll store the parameters here\r\n  var obj = {};\r\n\r\n  // if query string exists\r\n  if (queryString) {\r\n\r\n    // stuff after # is not part of query string, so get rid of it\r\n    queryString = queryString.split('#')[0];\r\n\r\n    // split our query string into its component parts\r\n    var arr = queryString.split('&');\r\n\r\n    for (var i = 0; i < arr.length; i++) {\r\n      // separate the keys and the values\r\n      var a = arr[i].split('=');\r\n\r\n      // set parameter name and value (use 'true' if empty)\r\n      var paramName = a[0];\r\n      var paramValue = typeof (a[1]) === 'undefined' ? true : a[1];\r\n\r\n      // (optional) keep case consistent\r\n      //paramName = paramName.toLowerCase();\r\n      //if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();\r\n\r\n      // if the paramName ends with square brackets, e.g. colors[] or colors[2]\r\n      if (paramName.match(/\\[(\\d+)?\\]$/)) {\r\n\r\n        // create key if it doesn't exist\r\n        var key = paramName.replace(/\\[(\\d+)?\\]/, '');\r\n        if (!obj[key]) obj[key] = [];\r\n\r\n        // if it's an indexed array e.g. colors[2]\r\n        if (paramName.match(/\\[\\d+\\]$/)) {\r\n          // get the index value and add the entry at the appropriate position\r\n          var index = /\\[(\\d+)\\]/.exec(paramName)[1];\r\n          obj[key][index] = paramValue;\r\n        } else {\r\n          // otherwise add the value to the end of the array\r\n          obj[key].push(paramValue);\r\n        }\r\n      } else {\r\n        // we're dealing with a string\r\n        if (!obj[paramName]) {\r\n          // if it doesn't exist, create property\r\n          obj[paramName] = paramValue;\r\n        } else if (obj[paramName] && typeof obj[paramName] === 'string'){\r\n          // if property does exist and it's a string, convert it to an array\r\n          obj[paramName] = [obj[paramName]];\r\n          obj[paramName].push(paramValue);\r\n        } else {\r\n          // otherwise add the property\r\n          obj[paramName].push(paramValue);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction isString(val){\r\n  return (typeof val === 'string' || val instanceof String)\r\n}\r\n\r\nfunction pjsonp(url,timeout=5000,timeoutErrMsg=\"TIMEOUT\")\r\n{\r\n  return new Promise((res,rej)=>{\r\n    let timeoutFlag=undefined;\r\n    if(timeout>0)\r\n    {\r\n      timeoutFlag = setTimeout(()=>{\r\n        timeoutFlag=undefined;\r\n        rej(timeoutErrMsg)\r\n      },timeout);\r\n    }\r\n\r\n    jsonp(url,  (err,data)=>{\r\n      clearTimeout(timeoutFlag);\r\n      if(err === null)\r\n          res(data);\r\n      else\r\n          rej(err)\r\n    });\r\n  });\r\n}\r\n\r\nfunction fetchDeffileInfo(name)\r\n{\r\n  let defFileData=undefined;\r\n  \r\n  return new Promise((res,rej)=>{\r\n    let url='http://hyv.decade.tw:8080/query/deffile?name='+name+'&limit=1000'\r\n    \r\n    pjsonp(url,null).then((data)=>{\r\n\r\n      \r\n      let hashArr = data.map(srec=>srec.DefineFile.featureSet_sha1)\r\n      hashArr = [...new Set(hashArr)];\r\n\r\n      defFileData=hashArr.map((hash)=>{\r\n        let name = data.filter((defF)=>defF.DefineFile.featureSet_sha1==hash)\r\n          .map(defF=>defF.DefineFile.name)\r\n        return {hash,name}\r\n      }).map(defFInfo=>{\r\n        defFInfo.name=[...new Set(defFInfo.name)];\r\n        return defFInfo;\r\n      });\r\n      let hashRegx = hashArr.reduce((acc,hash)=>acc===undefined?hash:acc+\"|\"+hash,undefined)\r\n\r\n      let url='http://hyv.decade.tw:8080/query/inspection?';\r\n      url+='tStart=0&tEnd=2581663256894&limit=999999999&';\r\n      url+='subFeatureDefSha1='+hashRegx+'&'\r\n      url+='projection={\"_id\":0,\"InspectionData.subFeatureDefSha1\":1,\"InspectionData.time_ms\":1,\"InspectionData.tag\":1}&'\r\n      url+='agg=[{\"$group\":{\"_id\":\"$InspectionData.subFeatureDefSha1\",'+\r\n      '\"count\": {\"$sum\":1},'+\r\n      '\"time_start\": {\"$min\":\"$InspectionData.time_ms\"},'+\r\n      '\"time_end\": {\"$max\":\"$InspectionData.time_ms\"},'+\r\n      '\"tags\": {\"$addToSet\":\"$InspectionData.tag\"}'+\r\n      '}}]';\r\n      return pjsonp(url,null)\r\n\r\n    }).then((dataSet)=>{\r\n\r\n      let dataSet_Formatted=\r\n      dataSet.map(data=>{\r\n        data._id=data._id[0]\r\n        return data\r\n      }).reduce((acc,data)=>{\r\n        let id=data._id;\r\n        if(acc[id]===undefined)\r\n        {\r\n          acc[id]=data;\r\n          delete acc[id]._id; \r\n        }\r\n        else\r\n        {\r\n          acc[id].count+=data.count;\r\n          acc[id].time_start=[Math.min(acc[id].time_start[0],data.time_start[0])];\r\n          acc[id].time_end=[Math.max(acc[id].time_end[0],data.time_end[0])];\r\n        }\r\n        return acc;\r\n      },{})\r\n\r\n      //final aggregation\r\n      defFileData.forEach((defF)=>{\r\n        let tar = dataSet_Formatted[defF.hash];\r\n        if(tar!==undefined)\r\n        {\r\n          Object.assign(defF, tar)\r\n\r\n\r\n          defF.tags = defF.tags.flat(9)\r\n            .map(tag=>tag.replace(/^\\,+/g, \"\").replace(/\\,{2,}/g, \",\").split(\",\"))\r\n            .flat(9)\r\n            .filter(tag=>tag.length>0)\r\n          defF.tags = [...new Set(defF.tags)];\r\n        }\r\n      })\r\n      res(defFileData)\r\n    }).catch((err)=>{\r\n      rej(err);\r\n    })\r\n  });\r\n}\r\n\r\n//http://hyv.decade.tw:8080/query/inspection?tStart=1583942400000&tEnd=1584639131675&subFeatureDefSha1_regex=.&projection={\"InspectionData.subFeatureDefSha1\":1}&agg=[{\"$group\":{\"_id\":\"$InspectionData.subFeatureDefSha1\",\"sum\":{\"$sum\":1}}}]\r\n\r\nfunction fetchDeffileInfo_in_insp_time_range(start_ms,end_ms)\r\n{\r\n  let dataSet_Formatted;\r\n  return new Promise((res,rej)=>{\r\n    let url=\"http://hyv.decade.tw:8080/query/inspection?tStart=\"+start_ms+\"&tEnd=\"+end_ms+\r\n    '&projection={\"InspectionData.subFeatureDefSha1\":1,\"InspectionData.time_ms\":1,\"InspectionData.tag\":1}'+\r\n    '&agg=[{\"$group\":{\"_id\":\"$InspectionData.subFeatureDefSha1\",'+\r\n      '\"count\":{\"$sum\":1},'+\r\n      '\"time_start\": {\"$min\":\"$InspectionData.time_ms\"},'+\r\n      '\"time_end\": {\"$max\":\"$InspectionData.time_ms\"},'+\r\n      '\"tags\": {\"$addToSet\":\"$InspectionData.tag\"}'+\r\n    '}}]';\r\n\r\n\r\n    pjsonp(url,null).then((dataSet)=>{\r\n\r\n      dataSet_Formatted=\r\n      dataSet.map(data=>{\r\n        data._id=data._id[0]\r\n        return data\r\n      }).reduce((acc,data)=>{\r\n        let id=data._id;\r\n        if(acc[id]===undefined)\r\n        {\r\n          acc[id]=data;\r\n          delete acc[id]._id; \r\n        }\r\n        else\r\n        {\r\n          acc[id].count+=data.count;\r\n          acc[id].time_start=[Math.min(acc[id].time_start[0],data.time_start[0])];\r\n          acc[id].time_end=[Math.max(acc[id].time_end[0],data.time_end[0])];\r\n        }\r\n        return acc;\r\n      },{})\r\n      let hashRegx = Object.keys(dataSet_Formatted).reduce((acc,hash)=>acc===undefined?hash:acc+\"|\"+hash,undefined)\r\n\r\n      console.log(dataSet,dataSet_Formatted,hashRegx);\r\n      //'http://hyv.decade.tw:8080/query/deffile?featureSet_sha1='+hashRegx\r\n      let url='http://hyv.decade.tw:8080/query/deffile?featureSet_sha1='+hashRegx+\r\n      '&projection={\"DefineFile.name\":1,\"DefineFile.featureSet_sha1\":1,\"createdAt\":1}'\r\n      \r\n      return pjsonp(url,null)\r\n\r\n    }).then((defFileData)=>{\r\n\r\n      console.log(defFileData);\r\n      defFileData = Object.values(defFileData.reduce((obj,df)=>{\r\n        let sha1=df.DefineFile.featureSet_sha1;\r\n        let time = Date.parse(df.createdAt);\r\n        df.p_createdAt = time;\r\n        if(obj[sha1]===undefined || obj[sha1].p_createdAt<df.p_createdAt)\r\n        {\r\n          obj[sha1]=df;\r\n        }\r\n        \r\n        return obj;\r\n      },{}))\r\n\r\n      defFileData.forEach((defF)=>{\r\n        defF.hash=defF.DefineFile.featureSet_sha1;\r\n        defF.name=[defF.DefineFile.name];\r\n        let tar = dataSet_Formatted[defF.hash];\r\n        if(tar!==undefined)\r\n        {\r\n          Object.assign(defF, tar)\r\n          defF.tags = defF.tags.flat(9)\r\n            .map(tag=>tag.replace(/^,+|,+$/g, \"\").replace(/\\,{2,}/g, \",\").split(\",\"))\r\n            .flat(9)\r\n            .filter(tag=>tag.length>0)\r\n          defF.tags = [...new Set(defF.tags)];\r\n        }\r\n      })\r\n      console.log(defFileData);\r\n      res(defFileData)\r\n    }).catch((err)=>{\r\n      rej(err);\r\n    })\r\n  });\r\n}\r\n\r\n\r\nlet CusDisp_DB={\r\n  read:(name)=>\r\n  {\r\n    let defFileData=undefined;\r\n    \r\n    return new Promise((res,rej)=>{\r\n      let url='http://hyv.decade.tw:8080/QUERY/customDisplay?name='+name\r\n      url+='&projection={\"name\":1,\"targetDeffiles\":1}'\r\n      \r\n      pjsonp(url,null).then((data)=>{\r\n        res(data);\r\n      }).catch((err)=>{\r\n        rej(err);\r\n      })\r\n    });\r\n  },\r\n  create:(info,id)=>{\r\n    let defFileData=undefined;\r\n    \r\n    return new Promise((res,rej)=>{\r\n      let url='http://hyv.decade.tw:8080/insert/customdisplay?name='+info.name+\r\n        \"&targetDeffiles=\"+JSON.stringify(info.targetDeffiles)\r\n      if(id!==undefined)\r\n      {\r\n        url+=\"&_id=\"+id;\r\n        \r\n      }\r\n      pjsonp(url,null).then((data)=>{\r\n        res(data);\r\n      }).catch((err)=>{\r\n        rej(err);\r\n      })\r\n    });\r\n  },\r\n  delete:(id)=>{\r\n\r\n    return new Promise((res,rej)=>{\r\n      let url='http://hyv.decade.tw:8080/delete/customdisplay?_id='+id;\r\n      pjsonp(url,null).then((data)=>{\r\n        res(data);\r\n      }).catch((err)=>{\r\n        rej(err);\r\n      })\r\n    });\r\n  }\r\n}\r\nCusDisp_DB.update=(info,id)=>{\r\n  return new Promise((res,rej)=>{\r\n    if(id===undefined)\r\n    {\r\n      return rej(\"Error:No id\");\r\n    }\r\n    CusDisp_DB.create(info,id).then((data)=>{\r\n      res(data);\r\n    }).catch((err)=>{\r\n      rej(err);\r\n    })\r\n  });\r\n}\r\n//http://hyv.decade.tw:8080/delete/customDisplay?_id=5e782cddf40281013bedd142\r\n// fetchCustomDisplayInfo(\"Machine\");\r\n//CusDisp_DB.create({name:\"><>\",targetDeffiles:[{hash:\"sdiosdjciojsdoi\"}]},undefined);\r\n//CusDisp_DB.delete(\"5e771c388b25286acf112810\");\r\nfunction getUrlPath()\r\n{\r\n  return window.location.href.substring(window.location.protocol.length).split('?')[0]\r\n}\r\nfunction XQueryInput({ onQueryRes,onQueryRej,placeholder,defaultValue }) {\r\n  const [fetchedRecord, setFetchedRecord] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    console.log(\"1,didUpdate\");\r\n    var cur_ms = new Date().getTime();\r\n    fetchDeffileInfo_in_insp_time_range(cur_ms-2*24*60*60*1000,cur_ms+1000000).\r\n    then((res)=>{\r\n\r\n      setFetchedRecord(res);\r\n      onQueryRes(res);\r\n    }).catch((e)=>{\r\n      setFetchedRecord([]);\r\n      if(onQueryRej!==undefined)\r\n        onQueryRej(e)\r\n    });\r\n\r\n    return () => {\r\n      console.log(\"1,didUpdate ret::\");\r\n    };\r\n  },[]);\r\n\r\n  let searchBox=<Input placeholder={placeholder} defaultValue={defaultValue}\r\n    onPressEnter={(e)=>{\r\n    console.log(e.target.value)\r\n    setFetchedRecord();\r\n    fetchDeffileInfo(e.target.value).\r\n      then((res)=>{\r\n\r\n        setFetchedRecord(res);\r\n        onQueryRes(res);\r\n      }).catch((e)=>{\r\n        setFetchedRecord([]);\r\n        if(onQueryRej!==undefined)\r\n          onQueryRej(e)\r\n      });\r\n  }} ></Input>\r\n  let fetchBtn=fetchedRecord===undefined?null:\r\n  <div>\r\n\r\n  </div>\r\n\r\n\r\n  let displayInfo=null\r\n  if(fetchedRecord!==undefined)\r\n  {\r\n    // displayInfo = fetchedRecord.map(fetchRec=>{\r\n\r\n    //   let text = fetchRec.name+\" \";\r\n    //   if(fetchRec.count!==undefined)\r\n    //   {\r\n    //     text+=\",count:\"+fetchRec.count;\r\n    //     var dateStart = new Date(fetchRec.time_start[0]);\r\n    //     var dateEnd = new Date(fetchRec.time_end[0]);\r\n    //     text+=\",\"+datePrintSimple(dateStart)+\"~\"+datePrintSimple(dateEnd);\r\n    //     text+=\",tags:\"+fetchRec.tags;\r\n    //   }\r\n\r\n    //   return [\r\n    //     <a href={getUrlPath()+\"?v=0&hash=\"+fetchRec.hash}>{text}</a>,\r\n    //     <br/>]})\r\n    const columns = [\r\n      {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        render: fetchRec => <a href={getUrlPath()+\"?v=0&hash=\"+fetchRec.hash} target=\"_blank\">{fetchRec.name}</a>,\r\n      },\r\n      {\r\n        title: 'count',\r\n        dataIndex: 'count',\r\n        key: 'count',\r\n        sorter: (a, b) => a.count - b.count,\r\n      },\r\n      {\r\n        title: 'Date_Start',\r\n        dataIndex: 'Date_Start',\r\n        key: 'Date_Start',\r\n        render: milliSec => <div>{new Date(milliSec)+\"\"}</div>,\r\n        sorter: (a, b) => a.Date_Start - b.Date_Start,\r\n      },\r\n      {\r\n        title: 'Date_End',\r\n        dataIndex: 'Date_End',\r\n        key: 'Date_End',\r\n        render: milliSec => <div>{new Date(milliSec)+\"\"}</div>,\r\n        sorter: (a, b) => a.Date_End - b.Date_End,\r\n      },\r\n      {\r\n        title: 'Tags',\r\n        dataIndex: 'Tags',\r\n        key: 'Tags',\r\n      }]\r\n\r\n      let dataSource = fetchedRecord.filter(fetchRec=>fetchRec.count!==undefined).map(fetchRec=>{\r\n        let retSrc={\r\n          name:fetchRec\r\n        }\r\n        if(fetchRec.count!==undefined)\r\n        {\r\n          retSrc.count=fetchRec.count;\r\n          // var dateStart = new Date(fetchRec.time_start[0]);\r\n          // var dateEnd = new Date(fetchRec.time_end[0]);\r\n\r\n          retSrc.Date_Start=fetchRec.time_start[0];\r\n          retSrc.Date_End=fetchRec.time_end[0];\r\n          retSrc.Tags=fetchRec.tags.join(\",\");\r\n        }\r\n  \r\n        return retSrc\r\n      })\r\n    console.log(dataSource);\r\n    displayInfo=<Table columns={columns} dataSource={dataSource} pagination={false}/>;\r\n  }\r\n  return (\r\n\r\n    <div>\r\n      {searchBox}\r\n      {displayInfo}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SingleDisplayUI({ displayInfo})\r\n{\r\n  const canvasRef = React.useRef(null)\r\n\r\n\r\n  return <div>\r\n    <Title level={2}>{displayInfo.name}</Title>\r\n    Name:{displayInfo.name}\r\n    {displayInfo.targetDeffiles.map((dfs,id)=>\r\n      \"Def[\"+id+\"]:\"+JSON.stringify(displayInfo.targetDeffiles[id])\r\n    )}\r\n    <canvas  key=\"canv\"\r\n      ref={canvasRef}\r\n      onClick={e => {        \r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        // implement draw on ctx here\r\n      }}\r\n    />\r\n  </div>\r\n}\r\n\r\nfunction CustomDisplayUI({ }) {\r\n  const [displayInfo, setDisplayInfo] = useState(undefined);\r\n\r\n  const [collapsed, setCollapsed] = useState(true);\r\n  useEffect(() => {\r\n    setDisplayInfo(undefined);\r\n    CusDisp_DB.read(\".\").then(data=>{\r\n      console.log(displayInfo);\r\n      setDisplayInfo(data.prod);\r\n    }).catch(e=>{\r\n      console.log(e);\r\n    });\r\n    return () => {\r\n      console.log(\"1,didUpdate ret::\");\r\n    };\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"2,count->useEffect>>\");\r\n  },[displayInfo]);\r\n\r\n  let UI=[];\r\n  if(displayInfo!==undefined)\r\n  {\r\n    console.log(displayInfo);\r\n    UI=[];\r\n    UI.push(<div key=\"Reset\" onClick={()=>setDisplayInfo(undefined)}>RESET....</div>)\r\n    UI.push(<Row  key=\"table\"  style={{height:\"50%\"}}>{displayInfo.map(info=>\r\n      <Col key={info._id} span={12}  style={{height:\"100%\"}}>\r\n        <SingleDisplayUI displayInfo={info}/>\r\n\r\n        <Button key=\"sdsdfk\"\r\n                onClick={() => {\r\n                  info.ddd=\"sss\";\r\n                  CusDisp_DB.update({name:\"OKOK\",targetDeffiles:[{hash:\"\"}]},info._id).then(()=>{\r\n\r\n                    CusDisp_DB.read(\".\").then(data=>{\r\n                      console.log(displayInfo);\r\n                      setDisplayInfo(data.prod);\r\n                    }).catch(e=>{\r\n                      console.log(e);\r\n                    });\r\n                  });\r\n                }}\r\n                style={{ width: '60%' }}\r\n        >\r\n          mod\r\n        </Button>\r\n        <Button type=\"dashed\"\r\n                onClick={() => {\r\n                  setDisplayInfo(undefined);\r\n                  CusDisp_DB.delete(info._id).then(()=>{\r\n\r\n                    CusDisp_DB.read(\".\").then(data=>{\r\n                      console.log(displayInfo);\r\n                      setDisplayInfo(data.prod);\r\n                    }).catch(e=>{\r\n                      console.log(e);\r\n                    });\r\n                  });\r\n                }}\r\n                style={{ width: '60%' }}\r\n        >\r\n          Ｘ\r\n        </Button>\r\n      </Col>\r\n    )}</Row>)\r\n\r\n\r\n  }\r\n  UI.push(<Row  key=\"table2\"  style={{height:\"50%\"}}>\r\n    <Col key={\"sdsd\"} span={12}  style={{height:\"100%\"}}>\r\n      \r\n      <Button type=\"dashed\"\r\n              onClick={() => {\r\n                CusDisp_DB.create({name:\"><>\",targetDeffiles:[{hash:\"sdiosdjciojsdoi\"}]},undefined).then(()=>{\r\n                  CusDisp_DB.read(\".\").then(data=>{\r\n                    console.log(displayInfo);\r\n                    setDisplayInfo(data.prod);\r\n                  }).catch(e=>{\r\n                    console.log(e);\r\n                  });\r\n                });\r\n              }}\r\n              style={{ width: '60%' }}\r\n      >\r\n        Add field\r\n      </Button>\r\n\r\n    </Col></Row>)\r\n\r\n\r\n  return (\r\n\r\n    <Layout style={{height:\"100%\"}}>\r\n      <Layout.Header style={{ color: '#FFFFFF' }} >Header</Layout.Header>\r\n      <Layout>\r\n        <Layout.Sider  style={{ color: '#FFFFFF' }} collapsible collapsed={collapsed} \r\n        onCollapse={()=>setCollapsed(!collapsed)}\r\n        onMouseOut={()=>(collapsed)?null:setCollapsed(true)}\r\n        onMouseOver={()=>(collapsed)?setCollapsed(false):null}\r\n        >\r\n          Sider\r\n        </Layout.Sider>\r\n        <Layout>\r\n          <Layout.Content  style={{ padding: '50px 50px' }}>{UI}</Layout.Content>\r\n          <Layout.Footer>Custom UI v0.0.0</Layout.Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout> \r\n  );\r\n}\r\n\r\n\r\nfunction DBDupMan({ }) {\r\n  const [displayInfo, setDisplayInfo] = useState(undefined);\r\n\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n\r\n  function fetchDeffileInfo_in_insp_time_range(start_ms,end_ms)\r\n  {\r\n    let dataSet_Formatted;\r\n    return new Promise((res,rej)=>{\r\n\r\n    let url='http://hyv.decade.tw:8080/query/deffile?name='+\"\"+'&limit=100'+\r\n      '&agg=[{\"$group\":{\"_id\":\"$DefineFile.featureSet_sha1\",'+\r\n        '\"count\":{\"$sum\":1}'+\r\n      '}}]';\r\n  \r\n  \r\n      pjsonp(url,null).then((dataSet)=>{\r\n        console.log(dataSet);\r\n      }).catch((err)=>{\r\n        rej(err);\r\n      })\r\n    });\r\n  }\r\n  \r\n  fetchDeffileInfo_in_insp_time_range();\r\n\r\n\r\n  return \">>\";\r\n}\r\n\r\nclass App extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    console.log(getAllUrlParams());\r\n    this.state={\r\n      DefFileInfo:undefined,\r\n      allowQRScan:false,\r\n      UI:undefined\r\n\r\n      //{v: 0, name: \"BOS-LT13BH3421\", hash: \"9fa42a5e990e4da632070e95daf14ec50de8a112\"}\r\n    }\r\n    this.UI_type={\r\n      customDisplay:\"customDisplay\",\r\n      dbDupMan:\"dbDupMan\",\r\n      analysis:\"analysis\",\r\n      search:\"search\",\r\n    }\r\n  }\r\n  componentDidMount() {\r\n\r\n    let urlParam = getAllUrlParams();\r\n    console.log(urlParam);\r\n    if(urlParam.UI===\"customDisplay\")\r\n    {\r\n      this.setState({UI:this.UI_type.customDisplay});\r\n    }\r\n    if(urlParam.UI===\"dbDupMan\")\r\n    {\r\n      this.setState({UI:this.UI_type.dbDupMan});\r\n    }\r\n    else if(urlParam.v!==undefined && urlParam.hash!==undefined)\r\n    {\r\n\r\n      this.onQRScanResult(JSON.stringify(urlParam));\r\n      this.setState({UI:this.UI_type.analysis});\r\n    }\r\n    else\r\n    {\r\n      this.setState({allowQRScan:true,UI:this.UI_type.search});\r\n    }\r\n  }\r\n  \r\n  onDefFileInfoUpdate(info)\r\n  {\r\n    this.setState({...this.state,DefFileInfo:info});\r\n    console.log(info);\r\n    DB_Query.defFileQuery(info.name,info.hash).\r\n      then((q)=>{\r\n        if(q.length>0)\r\n          this.setState({...this.state,defFile:q[q.length-1].DefineFile});\r\n        console.log(q)\r\n      });\r\n  }\r\n\r\n  onQRScanResult(result){\r\n\r\n    try {\r\n      let res_obj=JSON.parse(result);\r\n      if(isString(res_obj.v))\r\n      {\r\n         res_obj.v = Number(res_obj.v);\r\n      }\r\n      if(res_obj.v===0 && res_obj.hash!==undefined && res_obj.hash.length>5)\r\n      {\r\n        console.log(window.location.protocol);\r\n        if(window.location.protocol === 'https:')\r\n        {\r\n          window.location.href = 'http:' + window.location.href.substring(window.location.protocol.length).split('?')[0]+\r\n            \"?v=\"+res_obj.v+\"&hash=\"+res_obj.hash;\r\n          \r\n          console.log(window.location.href);\r\n          this.setState({...this.state,allowQRScan:false});\r\n        }\r\n        else\r\n        {\r\n          this.onDefFileInfoUpdate(res_obj);\r\n        }\r\n      }\r\n    } catch(e) {\r\n        alert(e); // error in the above string (in this case, yes)!\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let UI;\r\n    switch(this.state.UI)\r\n    {\r\n      case this.UI_type.customDisplay:\r\n        UI=<CustomDisplayUI/>;\r\n        break;\r\n      case this.UI_type.dbDupMan:\r\n        UI=<DBDupMan/>;\r\n        break;\r\n      case this.UI_type.analysis:\r\n        UI=<APP_ANALYSIS_MODE \r\n          DefFileHash={this.state.DefFileInfo.hash} \r\n          DefFileName={this.state.DefFileInfo.name}\r\n          defFile={this.state.defFile}/>;\r\n        break;\r\n      case this.UI_type.search:\r\n        UI=<XQueryInput onQueryRes={(res)=>{console.log(res)}} defaultValue=\"\" placeholder=\"輸入名稱\"/>;\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\"  style={{height:\"100%\"}}>\r\n        {UI}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// require('./server/apollo_server.js');\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}