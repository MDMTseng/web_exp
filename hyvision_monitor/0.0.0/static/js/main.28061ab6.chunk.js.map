{"version":3,"sources":["logo.svg","UTIL/MISC_Util.js","UTIL/DB_Query.js","UTIL/BPG_Protocol.js","AnalysisUI.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GetObjElement","rootObj","keyTrace","traceIdxTo","length","obj","traceIdxTLen","undefined","i","key","db_url","INSPECTION_STATUS","TextEncoder","NA","SUCCESS","FAILURE","CheckableTag","Tag","RangePicker","DatePicker","Title","Typography","Paragraph","Text","logX","datePrintSimple","date","addZero","mm","getMonth","dd","getDate","h","getHours","m","getMinutes","s","getSeconds","getFullYear","join","InspectionRecordGroup_AppendCPK","InspRecGroup","defInspRange","forEach","group","stat","s_stat","defRange","find","s_def","id","cpkInfo","mean","sigma","USL","LSL","target","CPU","CPL","CP","Math","min","CA","CPK","abs","calcCpk","value","Object","assign","inspectionRecGroup_Generate","inspectionRec","groupInterval","measureList","inspectionRecGroup","InspectionRecord","largestInterval","fd","inspGroups","frontGroup","AddNewGroup","new_rec","startTime","time_ms","endTime","push","g","judgeReports","map","x","measures","singleRep","measure","availData","filter","status","reduce","sum","minMax","mM","max","sqrt","InspectionRecordGrouping","Chart","pluginService","register","afterDraw","chart","MEASURERSULTRESION","COLOR","TEXT","ControlChart","props","divID","round","random","charObj","state","chartOpt","type","data","labels","datasets","borderColor","lineTension","pointBackgroundColor","bezierCurve","options","scales","xAxes","display","distribution","ticks","callback","index","values","toString","source","autoSkip","time","displayFormat","displayFormats","hour","minUnit","yAxes","scaleLabel","elements","line","fill","point","radius","animation","duration","maintainAspectRatio","responsive","title","text","annotation","annotations","legend","tooltips","enabled","pan","mode","zoom","default_annotationTargets","color","nextProps","nextState","this","PropsUpdate","_inspectionRecGroup","_targetMeasure","_xAxisRange","value_target","sumG","recG","concat","acc_chart_data","rep","idx","measureObj","jrep","measureValue","pointColor","val","Date","y","targetValue","bestEffert","repG","this_id_stat","st","arrLen","alpha","hueOffset","sat","light","hue","console","log","doMultipleChart","targetMeasure","targetMeasure_cache","doChartDataUpdate","N_LSL","N_USL","N_value_target","update","datInfo","xAxisRange","arr","colorPalette","chart_data","genSingleRepPoints","groupColor","chart_group_data","genGroupRepPoints","dat","original_y","dataPointNormalizer","dataSet","label","name","backgroundColor","annotationTargets","anotationTargets","annoT","annotationTar","scaleID","borderWidth","borderDash","position","content","onMouseover","e","document","getElementById","innerHTML","callbacks","tooltipItem","datasetIndex","afterLabel","dataOnTip","groupSize","str_arr","moment","format","str","keys","toFixed","titleFontSize","titleFontColor","bodyFontColor","bodyFontSize","displayColors","ctx","getContext","className","style","height","React","Component","Date_addDay","addDays","setDate","InspRecStream","reset","newFeedCallBack","newStream","fullStream","liveFeedMode","rec","liveFeedInterval","passiveQueryRange","liveQueryRange","timeoutHDL","clearTimeout","defFile","resetStreamInfo","JSON","parse","stringify","sort","a","b","lastMsInRec","recAfterLast","srec","concatArr","enable","liveQueryInspRec","timeRange","maxResults","_d","getTime","subFeatureDefSha1","date_start","date_end","limit","TYPE","url","Promise","res","rej","jsonp","err","DB_Query","featureSet_sha1","then","queryResult","InspectionData","newStreamFeed","setTimeout","APP_ANALYSIS_MODE","ec_canvas","defFileSearchName","dateRange","displayRange","inspectionRec_TagFiltered","dataInSync","controlChartOverlap","recStream","setState","setLiveFeedMode","stateUpdate","setDefFile","dateRangeReady","isReady","dr","defFileReady","DefFileHash","DefFileName","String","featureSet","features","feature","HEADER","graphCtrlUI","range","defaultValue","step","tipFormatter","onChange","checked","ev","liveFeedMode_ctrl","hourStep","minuteStep","allowClear","t","mo","day_base","startOf","graphUI","width","icon","disabled","onClick","latestTime","queryInspRec","result","catch","ReportName","YYYYMMDD","csv_arr","reportName","inspRecGroup","ci","pushDataRow","measureReports","trace","RowName","ele","field","additionalColumn","s_group","s_rep","tag","replace","convertInspInfo2CSV","fileType","fileName","blob","Blob","Uint8Array","createElement","download","href","URL","createObjectURL","dataset","downloadurl","body","appendChild","click","removeChild","revokeObjectURL","downloadString","fullStream2Tag","onTagStateChange","tagState","filterTagsBoolean","selectedTrueTags","item","array","tArr","split","some","includes","top","prevState","dclone","featureInOrder","__decorator","list_id_order","f","MyTag","handleChange2","tagName","handleChange","RelatedUsageInfo","handleTagChange","onoff","tags2","tags","checkInspectionRec","uniSet2","Set","e2","i2","a2","add","Array","from","marginRight","tagIndex","QrScanner","WORKER_PATH","getAllUrlParams","queryString","window","location","search","slice","decodeURI","paramName","paramValue","match","exec","pjsonp","timeout","timeoutErrMsg","timeoutFlag","XQueryInput","onQueryRes","onQueryRej","placeholder","useState","fetchedRecord","setFetchedRecord","searchBox","onPressEnter","defFileData","hashArr","DefineFile","hash","defF","defFInfo","acc","dataSet_Formatted","_id","count","time_start","time_end","tar","fetchDeffileInfo","displayInfo","columns","dataIndex","render","fetchRec","substring","protocol","sorter","milliSec","Date_Start","Date_End","dataSource","retSrc","Tags","pagination","SingleDisplayUI","canvasRef","useRef","level","ref","current","CostomDisplayUI","setDisplayInfo","collapsed","setCollapsed","useEffect","prod","UI","info","span","Header","Sider","collapsible","onCollapse","onMouseOut","onMouseOver","Content","padding","Footer","App","DefFileInfo","allowQRScan","UI_type","customDisplay","analysis","urlParam","v","onQRScanResult","projection","q","res_obj","Number","onDefFileInfoUpdate","alert","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28061ab6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","\r\n\r\nexport function Num2Str_padding(pad,num)\r\n{\r\n  var str=\"0000000000000000\"+(num);\r\n  return str.substr(-pad);\r\n}\r\n\r\nexport function round(num,round_nor=1)\r\n{\r\n  let tmp = (1/round_nor);\r\n  let round_nor_inv = Math.round(tmp);\r\n  if(round_nor_inv===0)\r\n  {\r\n    round_nor_inv=tmp;\r\n  }\r\n\r\n  return Math.round(num*round_nor_inv)/round_nor_inv;\r\n}\r\n\r\n\r\nexport function xstate_GetCurrentMainState(state)\r\n{\r\n  if(typeof state.value === \"string\")\r\n  {\r\n    return {state:state.value, substate:null};\r\n  }\r\n  let complexState = state.value;\r\n  let state_Str = Object.keys(complexState)[0];\r\n  return {state:state_Str, substate:complexState[state_Str]};\r\n\r\n}\r\n\r\nexport function xstate_GetMainState(state)\r\n{\r\n  if(typeof state.value === \"string\")\r\n  {\r\n    return state.value;\r\n  }\r\n  let complexState = state.value;\r\n  return Object.keys(complexState)[0];\r\n}\r\n\r\nexport function xstate_GetSubState(state)\r\n{\r\n  if(typeof state.value === \"string\")\r\n  {\r\n    return undefined;\r\n  }\r\n  let complexState = state.value;\r\n  let state_Str = Object.keys(complexState)[0];\r\n  return complexState[state_Str];\r\n}\r\n\r\n\r\nexport function GetObjElement(rootObj,keyTrace,traceIdxTo=keyTrace.length-1)\r\n{\r\n  let obj = rootObj;\r\n  let traceIdxTLen = traceIdxTo+1;\r\n  if( rootObj === undefined)return;\r\n  for (let i=0;i<traceIdxTLen;i++) {\r\n    let key = keyTrace[i];\r\n    //console.log(obj,key,obj[key]);\r\n    obj = obj[key];\r\n\r\n    if( obj === undefined)return;\r\n  }\r\n  return obj;\r\n}\r\n\r\n\r\n\r\nexport function DictConv(key,dict,dictTheme)\r\n{\r\n  let translation = (dictTheme===undefined)?undefined:GetObjElement(dict,[dictTheme, key]);\r\n\r\n  if(translation===undefined)\r\n  {\r\n    translation = GetObjElement(dict,[\"fallback\", key]);\r\n  }\r\n\r\n  return translation;\r\n}\r\n\r\n\r\n\r\nexport class websocket_autoReconnect{\r\n  constructor(url,timeout=5000) {\r\n      this.url=undefined;\r\n      this.wsclose=false;\r\n      this.reconnectionCounter=0;\r\n      this.reconnectGap_ms=1000;\r\n      this.connectionTimeout_ms=timeout;\r\n      this.connectionTimer=null;\r\n      this.readyState=undefined;\r\n      this._connect(url);\r\n\r\n  }\r\n  onopen(ev){}\r\n  onmessage(ev){}\r\n  onerror(ev){}\r\n  onclose(ev){}\r\n\r\n  onreconnection(reconnectionCounter){}\r\n  onconnectiontimeout(){}\r\n\r\n  setWebsocketCallbackUndefined(ws)\r\n  {\r\n    ws.onopen=\r\n    ws.onmessage=\r\n    ws.onerror=\r\n    ws.onclose=undefined;\r\n  }\r\n  _connect(url) {\r\n    if(this.wsclose)return;\r\n    \r\n    console.log(\"_connect\");\r\n    this.url=url;\r\n    if(this.websocket!==undefined)\r\n    {\r\n        this.reconnectionCounter++;\r\n        let doconnection = this.onreconnection(this.reconnectionCounter);\r\n        if(doconnection!==undefined && doconnection!==true)\r\n        {\r\n          this.websocket=undefined;\r\n          return;\r\n        }\r\n    }\r\n\r\n    if(this.connectionTimer!==undefined)\r\n      clearTimeout(this.connectionTimer);\r\n    this.connectionTimer=undefined;\r\n\r\n    this.websocket = new WebSocket(url);\r\n    this.OPEN=this.websocket.OPEN;\r\n    this.CONNECTING=this.websocket.CONNECTING;\r\n    this.CLOSED=this.websocket.CLOSED;\r\n    this.CLOSING=this.websocket.CLOSING;\r\n    this.connectionTimer = setTimeout(()=>{\r\n        this.close();\r\n        this.onconnectiontimeout();\r\n    },this.connectionTimeout_ms);\r\n    // this.state.WS_DB_Insert.binaryType = \"arraybuffer\";\r\n\r\n    this.websocket.onopen = (ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      clearTimeout(this.connectionTimer);\r\n      this.connectionTimer=undefined;\r\n      return this.onopen(ev);\r\n    };\r\n    this.websocket.onmessage =(ev)=> this.onmessage(ev);\r\n    this.websocket.onerror =(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      //setTimeout(()=>this._connect(url),10);\r\n      return this.onerror(ev);\r\n    }\r\n    this.websocket.onclose =(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      setTimeout(()=>this._connect(url),this.reconnectGap_ms);\r\n      return this.onclose(ev);\r\n    }\r\n  }\r\n  \r\n  reconnect() {\r\n    console.log(    this.wsclose,this.websocket);\r\n    this.wsclose=false;\r\n    if(this.websocket!==undefined)\r\n    {\r\n      if(this.websocket.readyState!==this.websocket.OPEN)\r\n      {\r\n        this.setWebsocketCallbackUndefined(this.websocket);\r\n        this.websocket=undefined;\r\n        this._connect(this.url);\r\n      }\r\n      else\r\n        this.websocket.close();//this should trigger _connect affter close/error event\r\n    }\r\n    else\r\n    {\r\n      this._connect(this.url);\r\n    }\r\n  }\r\n  close() {\r\n    this.wsclose=true;\r\n    \r\n    if(this.connectionTimer!==undefined)\r\n      clearTimeout(this.connectionTimer);\r\n    this.connectionTimer=undefined;\r\n    if(this.websocket!==undefined)\r\n    {\r\n        this.websocket.close();\r\n\r\n    }\r\n  }\r\n\r\n  send(data){\r\n    return this.websocket.send(data);\r\n  }\r\n}\r\n\r\nexport class websocket_reqTrack{\r\n  constructor(websocket) {\r\n    let onopen = websocket.onopen;\r\n    let onmessage = websocket.onmessage;\r\n    let onerror = websocket.onerror;\r\n    let onclose = websocket.onclose;\r\n\r\n    this.trackWindow={};\r\n\r\n    websocket.onopen=(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      this.onopen(ev);\r\n    };\r\n    websocket.onclose=(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      this.onclose(ev);\r\n    };\r\n    websocket.onmessage=(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      let p = JSON.parse(ev.data);\r\n      let type=p.type;\r\n      if(type===\"ACK\" || type===\"NAK\")\r\n      {\r\n        let req_id=p.req_id;\r\n        if(req_id!==undefined)\r\n        {\r\n          let tobj = this.trackWindow[req_id];\r\n          if(tobj!==undefined)\r\n          {\r\n            delete this.trackWindow[req_id];\r\n            if(type===\"ACK\")\r\n            {\r\n              tobj.resolve(p);\r\n            }\r\n            else\r\n            {\r\n              tobj.reject(p);\r\n            }\r\n          }\r\n          else\r\n          {\r\n            req_id=undefined;\r\n          }\r\n        }\r\n        \r\n        if(req_id===undefined){\r\n          \r\n          this.onTrackError({\r\n            type:\"ACK_TRACK_ERR\",\r\n            data:p\r\n          });\r\n        }\r\n      }\r\n      this.onmessage(ev,p);\r\n    };\r\n    websocket.onerror=(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      this.onerror(ev);\r\n    };\r\n    this.websocket=websocket;\r\n  }\r\n  \r\n  onTrackError(ev){}\r\n\r\n  onopen(ev){}\r\n  onmessage(ev){}\r\n  onerror(ev){}\r\n  onclose(ev){}\r\n\r\n\r\n  \r\n  close() {\r\n    return this.websocket.close();\r\n  }\r\n\r\n  send_obj(data,replacer){\r\n\r\n    let req_id = data.req_id;\r\n\r\n    while(req_id===undefined||\r\n      Object.keys(this.trackWindow).reduce((match,id)=>match||id === req_id,false))\r\n      //Check existance\r\n    {\r\n      //if req_id is undefined / exists in the lookup table\r\n      req_id = Math.floor(Math.random()*16777215).toString(16);\r\n    }\r\n    data.req_id = req_id;\r\n\r\n\r\n    this.websocket.send(JSON.stringify(data,replacer));\r\n  \r\n    let trackObj={\r\n      time:Date.now(),\r\n      resolve:undefined,\r\n      reject:undefined,\r\n      data:data,\r\n      rsp:undefined\r\n    };\r\n    this.trackWindow[req_id]=trackObj;\r\n    return new Promise((resolve, reject)=>{\r\n      trackObj.resolve=resolve;\r\n      trackObj.reject=reject;\r\n    });\r\n  }\r\n}","import jsonp from 'jsonp';\r\n\r\n\r\nlet db_url = \"http://hyv.decade.tw:8080/\";\r\nfunction defFileQuery(name,featureSet_sha1,projection)\r\n{\r\n    \r\n    let url = db_url+\"query/deffile?\";\r\n    url+=\"limit=1000\";\r\n    \r\n    if(name!==undefined)\r\n        url+=\"&name=\"+name;\r\n\r\n    if(featureSet_sha1!==undefined)\r\n        url+=\"&featureSet_sha1=\"+featureSet_sha1;\r\n    \r\n    if(projection!==undefined)\r\n        url+=\"&projection=\"+JSON.stringify(projection);\r\n    else\r\n        url+=\"&projection={}\";\r\n    //url+=\"&projection={}\"\r\n    return new Promise((res,rej)=>{\r\n\r\n        jsonp(url,  (err,data)=>{\r\n            if(err === null)\r\n                res(data);\r\n            else\r\n                rej(err)\r\n            console.log(err,data);\r\n        });\r\n    });\r\n}\r\n\r\n\r\nfunction inspectionQuery(subFeatureDefSha1,date_start,date_end,limit=100)\r\n{\t\r\n    let TYPE=\"query/inspection\";\r\n    let url = db_url+TYPE+\"?\";\r\n\r\n    url+=\"tStart=\"+date_start.toString()+\"&tEnd=\"+date_end.toString()+\"&\";\r\n    url+=\"limit=\"+limit+\"&page=1&\"\r\n    url+=\"subFeatureDefSha1=\"+subFeatureDefSha1+\"&\"\r\n    if(true)\r\n    {\r\n        url+=\"projection=\"+JSON.stringify(\r\n            {\"_id\":0,\"InspectionData.time_ms\":1,\r\n            \"InspectionData.judgeReports.id\":1,\r\n            \"InspectionData.judgeReports.value\":1,\r\n            \"InspectionData.judgeReports.status\":1,\r\n            \r\n            \"createdAt\":1,\r\n            \"updatedAt\":1,\r\n            \"InspectionData.tag\":1\r\n            });\r\n    }\r\n    else{\r\n        \r\n        url+=\"projection=\"+JSON.stringify(\r\n            {\"_id\":0,\"InspectionData.time_ms\":1,\r\n            \"InspectionData.judgeReports\":1}\r\n            );\r\n    }\r\n    url+=\"\";\r\n    \r\n\r\n    \r\n    return new Promise((res,rej)=>{\r\n\r\n        jsonp(url,  (err,data)=>{\r\n            \r\n            if(err === null)\r\n                res(data);\r\n            else\r\n                rej(err)\r\n            console.log(err,data);\r\n            /*console.log(err,data);\r\n            text=JSON.stringify(\r\n                data.\r\n                reduce((arr,data)=>\r\n                {\r\n                    data.InspectionData.forEach(ele =>arr.push(ele));\r\n                    return arr;\r\n                },[]).\r\n                map(data=>data.judgeReports)\r\n            );*/\r\n        });\r\n    });\r\n\r\n}\r\n\r\n\r\nexport {defFileQuery,inspectionQuery};","\r\nconst BPG_header_L = 9;\r\nlet raw2header=(ws_evt, offset = 0)=>{\r\n  if (( ws_evt.data instanceof ArrayBuffer) && ws_evt.data.byteLength>=BPG_header_L) {\r\n    // var aDataArray = new Float64Array(evt.data);\r\n    // var aDataArray = new Uint8Array(evt.data);\r\n    var headerArray = new Uint8ClampedArray(\r\n      ws_evt.data,offset,BPG_header_L);\r\n    let ret_obj={};\r\n\r\n\r\n    ret_obj.type = String.fromCharCode(headerArray[0],headerArray[1]);\r\n    ret_obj.prop = headerArray[2];\r\n    ret_obj.pgID = (headerArray[3]<<8)+headerArray[4];\r\n    //console.log(ret_obj.pgID);\r\n\r\n    ret_obj.length =\r\n      headerArray[5]<<24 | headerArray[6]<<16 |\r\n      headerArray[7]<<8  | headerArray[8];\r\n    return ret_obj;\r\n  }\r\n  return null;\r\n};\r\nlet raw2obj_rawdata=(ws_evt, offset = 0)=>{\r\n  let ret_obj = raw2header(ws_evt, offset);\r\n  if(ret_obj==null)return null;\r\n\r\n  ret_obj.rawdata = new Uint8ClampedArray(ws_evt.data,\r\n    offset+BPG_header_L,ret_obj.length\r\n  );\r\n\r\n  return ret_obj;\r\n};\r\nlet raw2obj=(ws_evt, offset = 0)=>{\r\n  let ret_obj = raw2header(ws_evt, offset);\r\n  if(ret_obj==null)return null;\r\n\r\n  ret_obj.rawdata = new Uint8ClampedArray(ws_evt.data,\r\n    offset+BPG_header_L,ret_obj.length\r\n  );\r\n  let  enc = new TextDecoder(\"utf-8\");\r\n  let str = enc.decode(ret_obj.rawdata);\r\n  ret_obj.data = JSON.parse(str);\r\n  return ret_obj;\r\n};\r\nlet raw2Obj_IM=(ws_evt, offset = 0)=>{\r\n  let ret_obj = raw2header(ws_evt, offset);\r\n  if(ret_obj==null)return null;\r\n\r\n  let headerArray = new Uint8ClampedArray(ws_evt.data,\r\n    offset+BPG_header_L,6);\r\n  ret_obj.camera_id=headerArray[0];\r\n  ret_obj.session_id=headerArray[1];\r\n  ret_obj.width=(headerArray[2]<<8)|headerArray[3];\r\n  ret_obj.height=(headerArray[4]<<8)|headerArray[5];\r\n  let RGBA_pix_Num = 4*ret_obj.width*ret_obj.height;\r\n  \r\n\r\n  if(true||RGBA_pix_Num == (ret_obj.length-6))\r\n  {\r\n    ret_obj.image=new Uint8ClampedArray(ws_evt.data,\r\n      offset+BPG_header_L+6,4*ret_obj.width*ret_obj.height);\r\n  }\r\n  else\r\n  {\r\n    ret_obj.image=null;\r\n  }\r\n\r\n\r\n  return ret_obj;\r\n};\r\n\r\nvar enc = new TextEncoder();\r\nlet objbarr2raw=(type,prop,pgID,obj,barr=null)=>{\r\n  \r\n  let str = (obj==null)?\"\":JSON.stringify(obj);\r\n\r\n  let encStr= enc.encode(str);\r\n  let objstr_L = encStr.length;\r\n  \r\n  let barr_L = (barr instanceof Uint8Array)?barr.length:0;\r\n  let bbuf = new Uint8Array(BPG_header_L+objstr_L+1+barr_L);\r\n\r\n  bbuf[0] = type.charCodeAt(0);\r\n  bbuf[1] = type.charCodeAt(1);\r\n  bbuf[2] = prop;\r\n  bbuf[3] = pgID>>1;\r\n  bbuf[4] = pgID&255;\r\n\r\n  let data_length =bbuf.length - BPG_header_L;//Add NULL in the end of the string\r\n  bbuf[5] = data_length>>24;\r\n  bbuf[6] = data_length>>16;\r\n  bbuf[7] = data_length>>8;\r\n  bbuf[8] = data_length;\r\n  if(objstr_L!=0)\r\n  {\r\n    bbuf.set(encStr, BPG_header_L);\r\n  }\r\n  bbuf[BPG_header_L+objstr_L]=0;//The end of string session\r\n  if(barr_L!=0)\r\n  {\r\n    bbuf.set(barr, BPG_header_L+objstr_L+1);\r\n  }\r\n  return bbuf;\r\n};\r\n\r\n\r\n\r\nexport const INSPECTION_STATUS = {\r\n  NA:-128,\r\n  SUCCESS:0,\r\n  FAILURE:-1,\r\n};\r\n\r\n\r\n\r\n\r\nexport const DEF_EXTENSION = \"hydef\";\r\n\r\nexport default { raw2header, raw2obj_rawdata, raw2obj,raw2Obj_IM,objbarr2raw,INSPECTION_STATUS }\r\n\r\n//let binaryX = BPG_Protocol.obj2raw(\"TC\",{a:1,b:{c:2}});\r\n//console.log(BPG_Protocol.raw2obj({data:binaryX.buffer}));\r\n","'use strict'\r\n   \r\n\r\nimport React from 'react';\r\n\r\nimport {round as roundX,GetObjElement} from './UTIL/MISC_Util';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport dclone from 'clone';\r\nimport moment from 'moment';\r\nimport Table from 'antd/lib/table';\r\nimport Button from 'antd/lib/button';\r\n\r\nimport * as logX from 'loglevel';\r\nimport 'chartjs-plugin-zoom'\r\n\r\nimport * as DB_Query from './UTIL/DB_Query';\r\n\r\nimport Input from 'antd/lib/input';\r\nimport Slider from 'antd/lib/slider';\r\nimport TimePicker from 'antd/lib/time-picker';\r\nimport DatePicker from 'antd/lib/date-picker';\r\nimport Checkbox from 'antd/lib/checkbox';\r\n\r\nimport  Typography  from 'antd/lib/typography';\r\nimport ReactResizeDetector from 'react-resize-detector';\r\n\r\nimport Chart from 'chart.js';\r\nimport 'chartjs-plugin-annotation';\r\nimport {INSPECTION_STATUS} from './UTIL/BPG_Protocol';\r\nimport Tag  from 'antd/lib/tag';\r\nconst { CheckableTag } = Tag;\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nlet log = logX.getLogger(\"AnalysisUI\");\r\n\r\n\r\n\r\nChart.pluginService.register({\r\n  afterDraw: function(chart) {\r\n  }\r\n});\r\n\r\n\r\n\r\nfunction calcCpk(mean,sigma,USL,LSL,target)\r\n{\r\n  \r\n  let CPU = (USL-mean)/(3*sigma);\r\n  let CPL = (mean-LSL)/(3*sigma);\r\n  let CP = Math.min(CPU,CPL);\r\n  let CA = (mean-target)/((USL-LSL)/2);\r\n  let CPK = CP*(1-Math.abs(CA));\r\n  return {mean,sigma,CPU,CPL,CP,CA,CPK}\r\n}\r\nfunction copyStringToClipboard (str) {\r\n  // Create new element\r\n  var el = document.createElement('textarea');\r\n  // Set value (string to be copied)\r\n  el.value = str;\r\n  // Set non-editable to avoid focus and move outside of view\r\n  el.setAttribute('readonly', '');\r\n  el.style = {position: 'absolute', left: '-9999px'};\r\n  document.body.appendChild(el);\r\n  // Select text inside element\r\n  el.select();\r\n  // Copy text to clipboard\r\n  document.execCommand('copy');\r\n  // Remove temporary element\r\n  document.body.removeChild(el);\r\n}\r\n\r\nfunction downloadString(text, fileType, fileName) {\r\n  var blob = new Blob([new Uint8Array([0xef, 0xbb, 0xbf]),text], { type: fileType });\r\n// downloadString(\"a,b,c\\n1,2,3\", \"text/csv\", \"myCSV.csv\")\r\n  var a = document.createElement('a');\r\n  a.download = fileName;\r\n  a.href = URL.createObjectURL(blob);\r\n  a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\r\n  a.style.display = \"none\";\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\r\n}\r\n\r\nfunction isString (value) {\r\n  return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\n\r\n\r\nfunction datePrintSimple(date) {\r\n  function addZero(i) {\r\n    return (i < 10)?\"0\" + i:i;\r\n  }\r\n  var mm = addZero(date.getMonth() + 1); // getMonth() is zero-based\r\n  var dd = addZero(date.getDate());\r\n  var h = addZero(date.getHours());\r\n  var m = addZero(date.getMinutes());\r\n  var s = addZero(date.getSeconds());\r\n\r\n  return [date.getFullYear(),mm,dd].join('/')+\" \"+h+\":\"+m+\":\"+s;\r\n};\r\nfunction convertInspInfo2CSV(reportName,measureList,inspRecGroup)\r\n{\r\n  let converterV=\"0.0.1 Alpha\"\r\n  let ci=[];\r\n  \r\n  ci.push('\"'+reportName+'\"');\r\n  ci.push(\",\\\"\"+converterV+'\"');\r\n  ci.push(\",\\n\");\r\n  console.log(measureList,inspRecGroup);\r\n  function pushDataRow(arr,measureReports,trace,RowName=trace[trace.length-1])\r\n  {\r\n    arr.push('\"'+RowName+'\"');\r\n    measureReports.forEach((rep)=>{\r\n      let ele = GetObjElement(rep,trace);\r\n      if(ele===undefined)ele='';\r\n      arr.push(\",\\\"\"+ele+'\"');\r\n    });\r\n    let additional\r\n\r\n\r\n    arr.push(\"\\n\");\r\n  }\r\n  [\"name\",\"subtype\"]\r\n    .forEach(field=>pushDataRow(ci,measureList,[field]));\r\n\r\n   \r\n\r\n  [\"USL\",\"LSL\",\"value\",\"UCL\",\"LCL\"]\r\n    .forEach(field=>pushDataRow(ci,measureList,[field]));\r\n\r\n  ci.push(\",\\n\");\r\n\r\n  let additionalColumn=[\"tag\"]\r\n  inspRecGroup.forEach(s_group=>{\r\n    s_group.group\r\n      .forEach(data=>{\r\n        let rep=data.judgeReports;\r\n        ci.push(\"'\"+datePrintSimple(new Date(data.time_ms)));\r\n        //The \"'\" in the head of time will let Excel left alingn time string, and have better lookup exprience\r\n        measureList.forEach(m=>\r\n          {\r\n            let s_rep = rep.find(s_rep=>s_rep.id==m.id);\r\n            if(s_rep.status!==INSPECTION_STATUS.NA)\r\n              ci.push(\",\"+s_rep.value);\r\n            else\r\n              ci.push(\",\");\r\n          })\r\n        additionalColumn.forEach(name=>{\r\n          ci.push(\",\");\r\n          switch(name)\r\n          {\r\n            case \"tag\":\r\n              let tag=data.tag;\r\n              if(tag===undefined)tag=\"\";\r\n              else\r\n              {\r\n                tag=tag.replace(/^\\,+/g, \"\").replace(/\\,{2,}/g, \",\")\r\n              }\r\n              ci.push('\"'+tag+'\"');\r\n              break;\r\n          }\r\n          \r\n        })\r\n        ci.push(\"\\n\");\r\n        \r\n      });\r\n  })\r\n  /*\r\n  measureReports.forEach((rep)=>{\r\n    ci.push(\",\");\r\n  });ci.push(\"\\n\");\r\n\r\n  let dateL = measureReports[0].valArr.length;\r\n  for(let i=0;i<dateL;i++)\r\n  {\r\n    pushDataRow(ci,measureReports,[\"valArr\",i],insp[i].time_ms);\r\n  }*/\r\n\r\n\r\n  return ci;\r\n}\r\n\r\nfunction YYYYMMDD(date)\r\n{\r\n  var mm = date.getMonth() + 1; // getMonth() is zero-based\r\n  var dd = date.getDate();\r\n\r\n  return [date.getFullYear(),\r\n          (mm>9 ? '' : '0') + mm,\r\n          (dd>9 ? '' : '0') + dd\r\n         ].join('');\r\n}\r\n\r\nfunction InspectionRecordGrouping(InspectionRecord,largestInterval=2*60*1000)\r\n{\r\n  let fd = InspectionRecord;\r\n  let inspGroups=[];\r\n  let frontGroup=undefined;\r\n  function AddNewGroup(new_rec)\r\n  {\r\n    if(new_rec===undefined)return;\r\n    frontGroup={\r\n      group:[new_rec],\r\n      startTime:new_rec.time_ms,\r\n      endTime:new_rec.time_ms,\r\n    }\r\n    inspGroups.push(frontGroup);\r\n  }\r\n  AddNewGroup(fd[0]);\r\n  for(let i=1;i<fd.length;i++)\r\n  {\r\n    if(fd[i].time_ms-frontGroup.endTime<largestInterval)\r\n    {\r\n      frontGroup.group.push(fd[i]);\r\n      frontGroup.endTime=fd[i].time_ms;\r\n    }\r\n    else\r\n    {\r\n      AddNewGroup(fd[i]);\r\n    }\r\n  }\r\n\r\n  inspGroups.forEach(frontGroup=>{\r\n    let g= frontGroup.group;\r\n    if(g.length==0)return;\r\n\r\n    let stat = g[0].judgeReports.map(x=>({id:x.id}));\r\n    stat=stat.map(s_stat=>{\r\n\r\n      let measures=g.map(singleRep=>singleRep.judgeReports.find(measure=>measure.id==s_stat.id));\r\n      let availData= measures.filter((measure)=>measure.status !==INSPECTION_STATUS.NA);\r\n      let mean = availData.reduce((sum,measure)=>sum+measure.value,0)/availData.length;\r\n      \r\n      let minMax = measures.reduce((mM,measure)=>{\r\n        if(measure.status ===INSPECTION_STATUS.NA)\r\n        {\r\n          return mM;\r\n        }\r\n\r\n\r\n        if(mM.max===undefined || mM.max===null || measure.value>mM.max)\r\n          mM.max = measure.value;\r\n        if(mM.min===undefined || mM.min===null || measure.value<mM.min)\r\n          mM.min = measure.value;\r\n        \r\n        return mM;\r\n\r\n      },{\r\n        min:undefined,\r\n        max:undefined\r\n      });\r\n      let sigma = Math.sqrt(availData.reduce((sum,measure)=>sum+(mean-+measure.value)*(mean-+measure.value),0)/availData.length);\r\n\r\n      return {\r\n        id:s_stat.id,\r\n        mean,sigma,\r\n        min:minMax.min,\r\n        max:minMax.max\r\n      }\r\n    })\r\n\r\n\r\n    frontGroup.stat=stat;\r\n\r\n\r\n  })\r\n\r\n\r\n  return inspGroups;\r\n}\r\n\r\nfunction InspectionRecordGroup_AppendCPK(InspRecGroup,defInspRange)\r\n{\r\n  InspRecGroup.forEach(group=>{\r\n    group.stat.forEach(s_stat=>{\r\n      let defRange = defInspRange.find(s_def=>s_def.id==s_stat.id);\r\n      if(defRange===undefined)return;\r\n      let cpkInfo = calcCpk(s_stat.mean,s_stat.sigma,defRange.USL,defRange.LSL,defRange.value);\r\n      Object.assign(s_stat, cpkInfo);\r\n    })\r\n  })\r\n}\r\n\r\n\r\nfunction inspectionRecGroup_Generate(inspectionRec,groupInterval,measureList)\r\n{\r\n    let inspectionRecGroup = InspectionRecordGrouping(inspectionRec,groupInterval);\r\n    InspectionRecordGroup_AppendCPK(inspectionRecGroup,measureList);\r\n    return inspectionRecGroup;\r\n}\r\n\r\nconst MEASURERSULTRESION=\r\n{\r\n  NA:\"NA\",\r\n  UOK:\"UOK\",\r\n  LOK:\"LOK\",\r\n  \r\n  UCNG:\"UCNG\",\r\n  LCNG:\"LCNG\",\r\n\r\n  USNG:\"USNG\",\r\n  LSNG:\"LSNG\",\r\n};\r\n\r\n\r\nexport const OK_NG_BOX_COLOR_TEXT = {\r\n  [MEASURERSULTRESION.NA]:{COLOR:\"#aaa\",TEXT:MEASURERSULTRESION.NA},\r\n  [MEASURERSULTRESION.UOK]:{COLOR:\"#87d068\",TEXT:MEASURERSULTRESION.UOK},\r\n  [MEASURERSULTRESION.LOK]:{COLOR:\"#87d068\",TEXT:MEASURERSULTRESION.LOK},\r\n  [MEASURERSULTRESION.UCNG]:{COLOR:\"#d0d068\",TEXT:MEASURERSULTRESION.UCNG},\r\n  [MEASURERSULTRESION.LCNG]:{COLOR:\"#d0d068\",TEXT:MEASURERSULTRESION.LCNG},\r\n  [MEASURERSULTRESION.USNG]:{COLOR:\"#f50\",TEXT:MEASURERSULTRESION.USNG},\r\n  [MEASURERSULTRESION.LSNG]:{COLOR:\"#f50\",TEXT:MEASURERSULTRESION.LSNG},\r\n};\r\nfunction newDate(time_ms) {\r\n  return moment(time_ms).toDate();\r\n}\r\n\r\n\r\n\r\n\r\nclass ControlChart extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.divID=\"ControlChart_ID_\" + Math.round(Math.random() * 10000);\r\n      this.charObj = undefined;\r\n      this.state={\r\n          chartOpt:{\r\n              type: 'line',\r\n              data:{labels:[],datasets:[{            \r\n                  \r\n                  borderColor:\"rgba(100, 255, 100,0)\",\r\n                  lineTension: 0,data:[],\r\n                  pointBackgroundColor:[]},\r\n                {            \r\n                  type: \"scatter\",\r\n                  borderColor:\"rgba(100, 255, 100)\",\r\n                  lineTension: 0,data:[],\r\n                  pointBackgroundColor:[]}\r\n                \r\n                ]},\r\n              bezierCurve : false,\r\n              options: {\r\n                \r\n                  scales: {\r\n                      xAxes: [\r\n                        {\r\n                          display: true,\r\n                          type: 'time',\r\n                          distribution: \"linear\",\r\n                          ticks: {\r\n                            callback: function(value, index, values) {\r\n                              return value.toString();\r\n                            },\r\n                            source: 'labels',\r\n                            autoSkip: true\r\n                          },\r\n                          time:{\r\n                            displayFormat:true,\r\n                            displayFormats:{\r\n                              hour: \"MMM D, h:mm:ss\"\r\n                            },\r\n                            minUnit:\"hour\"\r\n                          }\r\n                        }] ,\r\n                      yAxes: [{\r\n                        display: true,\r\n                        scaleLabel: {\r\n                          display: true,\r\n                        }\r\n                      }]  \r\n                  },\r\n                  elements: {\r\n                      line: {fill: false},\r\n                      point: { radius: 6 } \r\n                  },\r\n                  bezierCurve : false,\r\n                  animation: {\r\n                      duration: 0\r\n                  },\r\n                  maintainAspectRatio: false,\r\n                  responsive: true,\r\n                  title: {\r\n                      display: true,\r\n                      text: ''\r\n                  },\r\n                  annotation: {\r\n                      annotations: []\r\n                  },\r\n                  legend: {\r\n                      display: true\r\n                  },\r\n                  tooltips: {\r\n                      enabled: true\r\n                  }\r\n              }\r\n          },\r\n          \r\n\r\n      };\r\n\r\n      this.state.chartOpt.options.pan={\r\n          enabled: true,\r\n          mode: 'y' // is panning about the y axis neccessary for bar charts?\r\n        }\r\n      this.state.chartOpt.options.zoom={\r\n          enabled: true,\r\n          mode: 'y',\r\n      }\r\n\r\n\r\n\r\n      this.default_annotationTargets=[\r\n          {type:\"USL\",color:\"rgba(200, 0, 0,0.2)\"},\r\n          {type:\"LSL\",color:\"rgba(200, 0, 0,0.2)\"},\r\n          {type:\"UCL\",color:\"rgba(100, 100, 0,0.2)\"},\r\n          {type:\"LCL\",color:\"rgba(100, 100, 0,0.2)\"},\r\n          {type:\"value\",color:\"rgba(0, 0, 0,0.2)\"},\r\n      ];\r\n\r\n      \r\n  } \r\n  \r\n  componentWillMount(nextProps, nextState){\r\n  }\r\n  componentWillUpdate(nextProps, nextState){\r\n    this.PropsUpdate(nextProps);\r\n  }\r\n\r\n  genSingleRepPoints(_inspectionRecGroup,_targetMeasure,_xAxisRange,color)\r\n  {\r\n    let value_target=_targetMeasure[\"value\"];\r\n    return _inspectionRecGroup\r\n        .reduce((sumG,recG)=>sumG.concat(recG.group),[])//make [{group:[a,b]},{group:[c,d]}] => [a,b,c,d...]\r\n        .reduce((acc_chart_data,rep,idx)=>{\r\n          //acc_data.labels.push(rep.time_ms);\r\n          if(_xAxisRange!==undefined)\r\n          {\r\n            if(_xAxisRange[0]>rep.time_ms || \r\n              _xAxisRange[1]<rep.time_ms)return acc_chart_data;\r\n          }\r\n\r\n          let measureObj = rep.judgeReports.find((jrep)=>jrep.id===_targetMeasure.id);\r\n            \r\n\r\n          let measureValue=measureObj.value;\r\n          let pointColor=color;\r\n\r\n          if(pointColor===undefined)\r\n          {\r\n            switch(measureObj.status)\r\n              {\r\n              case INSPECTION_STATUS.SUCCESS:\r\n                pointColor=\"rgba(0,255,200,0.2)\";\r\n              break;\r\n              case INSPECTION_STATUS.FAILURE:\r\n                pointColor=\"rgba(255,0,200,0.2)\";\r\n              break;\r\n              case INSPECTION_STATUS.NA:\r\n                pointColor=\"#000000\";\r\n                measureValue=value_target;\r\n              break;\r\n              }\r\n          }\r\n          else\r\n          {\r\n            if(measureObj.status === INSPECTION_STATUS.NA)\r\n            {\r\n              pointColor=\"#000000\";\r\n              measureValue=value_target;\r\n            }\r\n          }\r\n\r\n            let val={\r\n            x:new Date(rep.time_ms).toString(),\r\n            y:measureValue,\r\n            };\r\n            \r\n\r\n          acc_chart_data.pointBackgroundColor.push(pointColor);\r\n          //TODO:for now there is only one data set in one chart\r\n          acc_chart_data.data.push(val);\r\n          return acc_chart_data;\r\n      }, { \r\n        borderColor:\"rgba(100, 255, 100,0)\",\r\n        lineTension: 0,data:[],\r\n        pointBackgroundColor:[]});\r\n  }\r\n\r\n  dataPointNormalizer(value,USL,targetValue,LSL,bestEffert=true)\r\n  {\r\n    if(USL==LSL)return 1/0.0;\r\n    if(bestEffert)\r\n    {\r\n      if(targetValue<=LSL)\r\n      {\r\n        LSL=targetValue-(USL-targetValue);\r\n      }\r\n      else if(targetValue>=USL)\r\n      {\r\n        USL = targetValue+(targetValue-LSL);\r\n      }\r\n      if(USL<=targetValue || LSL >=targetValue)return 1/0.0;\r\n    }\r\n\r\n    let mValue;\r\n    //console.log(value,USL,targetValue,LSL);\r\n    if(value>targetValue)\r\n    {\r\n      mValue=(value-targetValue)/(USL-targetValue);\r\n    }\r\n    else\r\n    {\r\n      mValue=(value-targetValue)/(targetValue-LSL);\r\n    }\r\n    return mValue;\r\n  }\r\n\r\n  \r\n  genGroupRepPoints(_inspectionRecGroup,_targetMeasure,_xAxisRange,color)\r\n  {\r\n    return _inspectionRecGroup.reduce((acc_chart_data,repG)=>{\r\n      let this_id_stat = repG.stat.\r\n        find((st)=>st.id===_targetMeasure.id);\r\n      \r\n      let value =this_id_stat.mean;\r\n      let time = repG.group.reduce((sum,rep)=>sum+rep.time_ms,0)/repG.group.length;\r\n      if(_xAxisRange!==undefined)\r\n      {\r\n        if(_xAxisRange[0]>time || \r\n          _xAxisRange[1]<time)return acc_chart_data;\r\n      }\r\n      let pointColor=(color===undefined)?\"rgba(0,255,0,1)\":color;\r\n        let val={\r\n          x:new Date(time).toString(),\r\n        y:value,\r\n          data:repG,\r\n        stat:this_id_stat\r\n        };\r\n\r\n      \r\n      acc_chart_data.pointBackgroundColor.push(pointColor);\r\n      //TODO:for now there is only one data set in one chart\r\n      acc_chart_data.data.push(val);\r\n      return acc_chart_data;\r\n    }, { \r\n      type: \"scatter\",\r\n      borderColor:\"rgba(100, 255, 100,1)\",\r\n      lineTension: 0,data:[],\r\n      pointBackgroundColor:[],} );\r\n  }\r\n\r\n\r\n  colorPalette(idx,arrLen,alpha=1,hueOffset=0,sat=\"100%\",light=\"50%\"){\r\n    let hue=360*idx/arrLen+hueOffset;\r\n    return \"hsla(\"+hue+\", \"+sat+\", \"+light+\",\"+alpha+\")\";\r\n  }\r\n  PropsUpdate(nextProps) {\r\n    console.log(\">>>>\");\r\n    let doMultipleChart=nextProps.targetMeasure.length!=1;\r\n    if(this.targetMeasure_cache != nextProps.targetMeasure ||\r\n      this.inspectionRecGroup != nextProps.inspectionRecGroup)\r\n    {\r\n      this.doChartDataUpdate(nextProps,doMultipleChart);\r\n    }\r\n    this.targetMeasure_cache = nextProps.targetMeasure;\r\n    this.inspectionRecGroup = nextProps.inspectionRecGroup;\r\n\r\n    let N_LSL=-100;\r\n    let N_USL=100;\r\n    let N_value_target=0;\r\n    if(doMultipleChart)\r\n    {\r\n      N_LSL=-100;\r\n      N_USL=100;\r\n      N_value_target=0;\r\n    }\r\n    else\r\n    {\r\n      let _targetMeasure = nextProps.targetMeasure[0];\r\n      N_LSL=_targetMeasure[\"LSL\"];\r\n      N_USL=_targetMeasure[\"USL\"];\r\n      N_value_target=_targetMeasure[\"value\"];\r\n    }\r\n\r\n    if(N_LSL!=0 || N_USL!=0 || N_value_target!=0)\r\n    {\r\n      this.state.chartOpt.options.scales.yAxes[0].ticks={\r\n        min:1.2*(N_LSL-N_value_target)+N_value_target,\r\n        max:1.2*(N_USL-N_value_target)+N_value_target,\r\n      };\r\n    }\r\n    else\r\n    {\r\n\r\n    }\r\n\r\n    this.charObj.update();\r\n      \r\n    //console.log(this.state.chartOpt.options.scales);\r\n\r\n  }\r\n      \r\n  doChartDataUpdate(nextProps,doMultipleChart){\r\n      \r\n      //Make sure the data object is the same, don't change it/ you gonna set the data object to chart again\r\n      this.state.chartOpt.data.labels=[];\r\n      this.state.chartOpt.data.datasets.forEach((datInfo)=>{\r\n          datInfo.data=[];\r\n          datInfo.pointBackgroundColor=[];\r\n        });\r\n\r\n        \r\n      let length = nextProps.inspectionRecGroup.length;\r\n      if(length===0)return;\r\n\r\n\r\n      let _inspectionRecGroup = nextProps.inspectionRecGroup;\r\n      let _xAxisRange = nextProps.xAxisRange;\r\n\r\n\r\n        \r\n      let N_LSL=-100;\r\n      let N_USL=100;\r\n      let N_value_target=0;\r\n      this.state.chartOpt.data.datasets=[];\r\n      if(doMultipleChart)\r\n      {\r\n        N_LSL=-100;\r\n        N_USL=100;\r\n        N_value_target=0;\r\n      }\r\n      else\r\n      {\r\n        let _targetMeasure = nextProps.targetMeasure[0];\r\n        N_LSL=_targetMeasure[\"LSL\"];\r\n        N_USL=_targetMeasure[\"USL\"];\r\n        N_value_target=_targetMeasure[\"value\"];\r\n      }\r\n      //this.state.chartOpt.options.legend.display=(nextProps.targetMeasure.length>1);\r\n      nextProps.targetMeasure.forEach((_targetMeasure,idx,arr)=>{\r\n        \r\n        let pointColor=arr.length>1?this.colorPalette(idx,arr.length,0.4,100):undefined;\r\n        let chart_data = this.genSingleRepPoints(_inspectionRecGroup,_targetMeasure,_xAxisRange,pointColor);\r\n        let groupColor=this.colorPalette(idx,arr.length,1,100);\r\n        let chart_group_data = this.genGroupRepPoints(_inspectionRecGroup,_targetMeasure,_xAxisRange,groupColor);\r\n\r\n        if(doMultipleChart)\r\n        {\r\n          let LSL=_targetMeasure[\"LSL\"];\r\n          let USL=_targetMeasure[\"USL\"];\r\n          let value_target=_targetMeasure[\"value\"];\r\n    \r\n          chart_data.data.forEach(dat=>{\r\n            dat.original_y=dat.y\r\n            dat.y=\r\n              (N_USL)*this.dataPointNormalizer(dat.y,USL,value_target,LSL)});\r\n  \r\n          chart_group_data.data.forEach(dat=>{\r\n            dat.original_y=dat.y\r\n            dat.y=\r\n              (N_USL)*this.dataPointNormalizer(dat.y,USL,value_target,LSL)});\r\n        }\r\n        else\r\n        {\r\n          chart_data.data.forEach(dat=>{dat.original_y=dat.y});\r\n          chart_group_data.data.forEach(dat=>{dat.original_y=dat.y});\r\n        }\r\n        //console.log(chart_data.data);\r\n        let dataSet = this.state.chartOpt.data.datasets;\r\n        dataSet.push(chart_data);\r\n        dataSet.push(chart_group_data);\r\n        \r\n        dataSet[dataSet.length-2].label=\"\";\r\n        dataSet[dataSet.length-1].label=_targetMeasure.name;\r\n        \r\n        //dataSet[dataSet.length-2].borderColor=(pointColor);\r\n        dataSet[dataSet.length-2].backgroundColor=(pointColor);\r\n\r\n        dataSet[dataSet.length-1].borderColor=(groupColor);\r\n        dataSet[dataSet.length-1].backgroundColor=(groupColor);\r\n        //dataSet[dataSet.length-1].pointRadius=10;\r\n\r\n      })\r\n      this.state.chartOpt.data.labels = \r\n      _inspectionRecGroup.map(g=>datePrintSimple(new Date((g.startTime+g.endTime)/2)));\r\n\r\n\r\n      let annotationTargets=this.props.anotationTargets;\r\n      if(annotationTargets===undefined)\r\n      {\r\n          annotationTargets = this.default_annotationTargets\r\n      }\r\n\r\n      let annoT={\r\n        USL:N_USL,\r\n        LSL:N_LSL,\r\n        value:N_value_target,\r\n      };//_targetMeasure;\r\n\r\n      this.state.chartOpt.options.annotation.annotations = \r\n          annotationTargets.map((annotationTar) => {\r\n          \r\n              let val = annoT[annotationTar.type];\r\n              return ({\r\n                  type: 'line',\r\n                  mode: 'horizontal',\r\n                  scaleID: 'y-axis-0',\r\n                  value: val,\r\n                  borderColor: annotationTar.color,\r\n                  borderWidth: 4,\r\n                  borderDash: [12, 12],\r\n                  label: {\r\n                      position: \"right\",\r\n                      enabled: true,\r\n                      content: \"\"//annotationTar.type+\":\"+val\r\n                  },\r\n                  onMouseover: function (e) {\r\n                    document.getElementById(\"info\").innerHTML = 'whatever';\r\n                  },\r\n              });\r\n          });\r\n      \r\n      this.state.chartOpt.options.tooltips={\r\n        callbacks: {\r\n          title: function(tooltipItem, data) {\r\n            // let datasetIndex = tooltipItem[0].datasetIndex;\r\n            // let index = tooltipItem[0].index;\r\n\r\n            // return data.datasets[datasetIndex].data[index].original_y\r\n            return \"\"\r\n          },\r\n          label: function(tooltipItem, data) {\r\n\r\n            let datasetIndex = tooltipItem.datasetIndex;\r\n            if(datasetIndex===undefined)return \"\"\r\n            let index = tooltipItem.index;\r\n\r\n            return data.datasets[datasetIndex].data[index].original_y\r\n          },\r\n          afterLabel: function(tooltipItem, data) {\r\n            let datasetIndex = tooltipItem.datasetIndex;\r\n            let index = tooltipItem.index;\r\n            let dataOnTip=data.datasets[datasetIndex].data[index];\r\n            let stat = dataOnTip.stat;\r\n            if(stat==undefined)return dataOnTip.x;\r\n\r\n            let groupSize = dataOnTip.data.group.length;\r\n            if(groupSize==0)return dataOnTip.x;\r\n            let str_arr=[\r\n              moment(dataOnTip.data.group[0].time_ms).format(\"YYYY/MM/DD , h:mm:ss a\"),\r\n              moment(dataOnTip.data.group[groupSize-1].time_ms).format(\"YYYY/MM/DD , h:mm:ss a\")\r\n            ];\r\n\r\n\r\n            let str = Object.keys(stat).map(key=>key+\":\"+\r\n              ((stat[key]!=null)?stat[key].toFixed(4):\"NULL\")\r\n            );\r\n            str_arr = str_arr.concat(str);\r\n            if(dataOnTip.data.group!==undefined)\r\n              str_arr.push(\"count:\"+dataOnTip.data.group.length);\r\n            return str_arr;\r\n\r\n\r\n          }\r\n        },\r\n        backgroundColor: '#FFF',\r\n        titleFontSize: 16,\r\n        titleFontColor: '#0066ff',\r\n        bodyFontColor: '#000',\r\n        bodyFontSize: 14,\r\n        displayColors: true\r\n      }\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n      var ctx = document.getElementById(this.divID).getContext(\"2d\");\r\n\r\n      this.charObj = new Chart(ctx, this.state.chartOpt);\r\n      this.PropsUpdate(this.props);\r\n  }\r\n\r\n  render() {\r\n    return <div className={this.props.className} style={this.props.style}> \r\n        <canvas id={this.divID}  style={{height: \"100%\"}} className={this.props.className}/>\r\n    </div>\r\n  }\r\n\r\n}\r\n\r\nfunction Date_addDay(date,addDays)\r\n{\r\n  if( date===undefined)date=new Date();\r\n\r\n  return date.setDate(date.getDate() + addDays);\r\n}\r\n\r\nclass InspRecStream\r\n{\r\n  constructor(){\r\n    this.reset();\r\n    this.newFeedCallBack=(newStream,fullStream)=>console.log(\"newFeedCallBack=>\",newStream,fullStream);\r\n    this.liveFeedMode=false;\r\n  }\r\n  \r\n  resetStreamInfo()\r\n  {\r\n    this.rec=[];\r\n    this.liveFeedInterval=10000;\r\n    this.passiveQueryRange=[];\r\n    this.liveQueryRange=[];\r\n    if(this.timeoutHDL!==undefined)\r\n    {\r\n      clearTimeout(this.timeoutHDL);\r\n    }\r\n    this.timeoutHDL=undefined;\r\n  }\r\n  reset()\r\n  {\r\n    this.defFile=undefined;\r\n    this.resetStreamInfo();\r\n  }\r\n\r\n  setDefFile(defFile)\r\n  {\r\n    this.resetStreamInfo();\r\n    this.defFile=JSON.parse(JSON.stringify(defFile));\r\n    console.log(\"setDefFile=\",defFile);\r\n  }\r\n\r\n  newStreamFeed(inspectionRec)\r\n  {\r\n    inspectionRec.sort(function(a, b) {\r\n      return a.time_ms - b.time_ms;\r\n    })\r\n\r\n    if(this.rec.length>0)\r\n    {\r\n      let lastMsInRec = this.rec[this.rec.length-1].time_ms;\r\n      let recAfterLast = inspectionRec.filter((srec)=>srec.time_ms>lastMsInRec);\r\n      let concatArr = this.rec.concat(recAfterLast);\r\n      console.log( this.rec.length,inspectionRec.length,concatArr.length);\r\n      \r\n      this.rec = concatArr;\r\n\r\n    }\r\n    else\r\n    {\r\n      this.rec = inspectionRec;\r\n    }\r\n    this.newFeedCallBack(inspectionRec,this.rec);\r\n  }\r\n  setLiveFeedMode(enable){\r\n    console.log(enable);\r\n    if(this.rec.length<0)\r\n    {\r\n      enable=false;\r\n    }\r\n\r\n    console.log(this.rec);\r\n    if(enable)\r\n    {\r\n      \r\n      if(this.timeoutHDL==undefined)\r\n      {\r\n        this.liveQueryInspRec();\r\n      }\r\n    }\r\n    else\r\n    {\r\n      if(this.timeoutHDL!==undefined)\r\n      {\r\n        clearTimeout(this.timeoutHDL);\r\n        this.timeoutHDL=undefined;\r\n      }\r\n    }\r\n    return this.liveFeedMode=enable;\r\n  }\r\n\r\n  liveQueryInspRec(timeRange,maxResults)\r\n  {\r\n    if(timeRange==undefined)\r\n    {\r\n      if(this.rec.length>0)\r\n      {\r\n        let lastMsInRec = this.rec[this.rec.length-1].time_ms;\r\n        timeRange=[moment(lastMsInRec)._d.getTime(), moment(Date_addDay(new Date(),1))._d.getTime()];\r\n        console.log(moment(lastMsInRec));\r\n      }\r\n      else\r\n      {\r\n        console.log(\"No existed rec to do live query\");\r\n        \r\n        this.timeoutHDL =undefined;\r\n        return undefined;\r\n      }\r\n    }\r\n    if(maxResults==undefined)\r\n    {\r\n      maxResults=10;\r\n    }\r\n    console.log(\"timeRange=\"+timeRange);\r\n    return DB_Query.inspectionQuery(this.defFile.featureSet_sha1,timeRange[0],timeRange[1],maxResults)\r\n    .then((queryResult)=>{\r\n      let inspectionRec = queryResult.map(res=>res.InspectionData[0]);\r\n      this.newStreamFeed(inspectionRec);\r\n      if(this.liveFeedMode)\r\n      {\r\n        this.timeoutHDL = \r\n          setTimeout(()=>this.liveQueryInspRec(),this.liveFeedInterval);\r\n      }\r\n      else\r\n      {\r\n        this.timeoutHDL =undefined;\r\n      }\r\n      return inspectionRec;\r\n    })\r\n  }\r\n  queryInspRec(timeRange=[moment(Date_addDay(new Date(),-7)), moment(Date_addDay(new Date(),1))])\r\n  {\r\n    if(this.defFile===undefined)return false;\r\n    this.passiveQueryRange = timeRange;\r\n\r\n    //this.liveFeedMode =(moment().isBefore(timeRange[1]));\r\n    if(!this.liveFeedMode)\r\n    {\r\n      this.resetStreamInfo();\r\n    }\r\n    return this.liveQueryInspRec(timeRange,10000000);\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nclass APP_ANALYSIS_MODE extends React.Component{\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.ec_canvas = null;\r\n    this.state={\r\n      defFileSearchName:\"\",\r\n      dateRange:[moment(Date_addDay(new Date(),-1)), moment(Date_addDay(new Date(),1))],\r\n      displayRange:[moment(0), moment(Date_addDay(new Date(),1))],\r\n      inspectionRec:[],\r\n        inspectionRec_TagFiltered:[],\r\n      inspectionRecGroup:[],\r\n      groupInterval:2*60*1000,//10 mins\r\n      liveFeedMode:false,\r\n      dataInSync:false,\r\n      controlChartOverlap:false\r\n    };\r\n    this.recStream=new InspRecStream();\r\n    //this.state.inspectionRec=dbInspectionQuery;\r\n    //this.state.defFile=defFile;\r\n\r\n//let IRG=InspectionRecordGrouping(dbInspectionQuery);\r\n//console.log(IRG,defFile);\r\n  }\r\n  \r\n\r\n  stateUpdate(obj) {\r\n    return this.setState({...this.state,...obj});\r\n  }\r\n  liveFeedMode_ctrl(enable=!this.state.liveFeedMode) {\r\n    //console.log(enable);\r\n    enable = this.recStream.setLiveFeedMode(enable);\r\n    return this.stateUpdate({liveFeedMode:enable});\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if(nextProps.defFile!==this.props.defFile)\r\n    {\r\n      this.recStream.setDefFile(nextProps.defFile);\r\n    }\r\n    return true;\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState)\r\n  {\r\n    if(nextProps.defFile===undefined)return null;\r\n    let defFile = dclone(nextProps.defFile);\r\n    let features=defFile.featureSet[0].features;\r\n    let __decorator=defFile.featureSet[0].__decorator;\r\n    let featureInOrder=__decorator.list_id_order.map(id=>features.find(f=>f.id==id));\r\n    defFile.featureSet[0].features=featureInOrder;\r\n    // console.log(features,__decorator.list_id_order,featureInOrder);\r\n    return {...prevState,defFile};\r\n  }\r\n  render() {\r\n    if(this.state.defFile===undefined)return null;\r\n    let menu_height=\"HXA\";//auto\r\n    let MenuSet=[];\r\n    //if()\r\n    /*MenuSet=this.state.dateRange.reduce((menu,date,idx)=>{\r\n      menu.push(<BASE_COM.IconButton\r\n        dict={EC_zh_TW}\r\n        key={\"<\"+idx}\r\n        addClass=\"layout black vbox\"\r\n        text={date._d.getTime()} />);\r\n      return menu;\r\n    },MenuSet);*/\r\n    let menuStyle={\r\n      top:\"0px\",\r\n      width:\"100px\"\r\n    }\r\n\r\n    let dateRangeReady = \r\n      (this.state.dateRange.length===2) &&\r\n      (this.state.dateRange.reduce(\r\n        (isReady,date)=> \r\n          ( isReady) && \r\n          ( date._d !==undefined) && \r\n          ( date._d.getTime !==undefined)\r\n      ,true));\r\n\r\n    let dateRange=this.state.dateRange.map(dr=>dr._d);\r\n    let DefFileHash = this.props.DefFileHash;\r\n    let DefFileName = this.props.DefFileName;\r\n    let defFileReady = \r\n      isString(this.props.DefFileHash)&&\r\n      this.props.DefFileHash.length>5;\r\n\r\n    const dateFormat = 'YYYY/MM/DD';\r\n    console.log( this.state.defFile);\r\n    let measureList = this.state.defFile.featureSet[0].features.filter(feature=>feature.type===\"measure\");\r\n    \r\n    console.log(this.state.defFile);\r\n    document.title = this.state.defFile.name; \r\n    let HEADER=<Typography>\r\n      <Title>{this.state.defFile.name}</Title>\r\n    </Typography>;\r\n    \r\n    let graphCtrlUI=null;\r\n\r\n    if(this.state.inspectionRec.length>0)\r\n    {    \r\n      graphCtrlUI = [\r\n        <Slider range \r\n          min={this.state.inspectionRec[0].time_ms-1000}\r\n          max={this.state.inspectionRec[this.state.inspectionRec.length-1].time_ms+1000}\r\n          defaultValue={\r\n              [this.state.inspectionRec[0].time_ms-1000, \r\n              this.state.inspectionRec[this.state.inspectionRec.length-1].time_ms+1000]} \r\n          step={1000*60*5}\r\n          tipFormatter={(time)=>new Date(time).toString()}\r\n          onChange={(data)=>this.stateUpdate({displayRange:data})}\r\n        />,\r\n        <Checkbox checked={this.state.liveFeedMode} onChange={(ev)=>this.liveFeedMode_ctrl(ev.target.checked)}>LIVE</Checkbox>,\r\n        \"  抽檢間隔\",\r\n        <TimePicker defaultValue={moment('0:'+(this.state.groupInterval/60000), 'HH:mm')} format={'HH:mm'} hourStep={3} minuteStep={1} allowClear={false} \r\n          onChange={(t)=>\r\n          {\r\n            if(t===null)return;\r\n            console.log(t);\r\n            let mo=t._d.getTime();\r\n            let day_base=moment(t._d).startOf('date')._d.getTime();\r\n            console.log(mo-day_base)\r\n            let groupInterval = mo-day_base;\r\n            console.log(\"TimePicker\",this.state.inspectionRec_TagFiltered);\r\n            let inspectionRecGroup =\r\n              inspectionRecGroup_Generate(this.state.inspectionRec_TagFiltered,groupInterval,measureList);\r\n            this.stateUpdate({inspectionRecGroup,groupInterval});\r\n        }}/>,\r\n        <Checkbox checked={this.state.controlChartOverlap} onChange={(ev)=>this.setState({controlChartOverlap:ev.target.checked})}>重疊顯示</Checkbox>,\r\n      ]\r\n\r\n    }\r\n\r\n    \r\n    let graphUI=null;\r\n    if(this.state.controlChartOverlap)\r\n    {\r\n      graphUI =\r\n      <div  style={{width:\"95%\",height:\"100%\"}}> \r\n        <ControlChart inspectionRecGroup={this.state.inspectionRecGroup} \r\n          style={{height:\"100%\"}}\r\n          key={\"_\"}\r\n          targetMeasure={measureList} \r\n          xAxisRange={this.state.displayRange}/>\r\n      </div>\r\n    }\r\n    else\r\n    {\r\n      graphUI =\r\n      <div  style={{width:\"95%\"}}> \r\n        {measureList.map(m=>\r\n        <ControlChart inspectionRecGroup={this.state.inspectionRecGroup} \r\n          style={{height:\"400px\"}}\r\n          key={m.name+\"_\"}\r\n          targetMeasure={[m]} \r\n          xAxisRange={this.state.displayRange}/>)}\r\n      </div>\r\n    }\r\n\r\n    \r\n    return(\r\n    <div className=\"HXF\">\r\n      \r\n      <div className=\"overlayCon s overlayCon width12 HXF\">\r\n        \r\n        {HEADER}\r\n        <div className=\"s height12\">\r\n\r\n          <RangePicker key=\"RP\"\r\n            defaultValue={this.state.dateRange} \r\n            onChange={(date)=>this.stateUpdate({dateRange:date})}/>\r\n\r\n          <Button type=\"primary\" icon=\"search\" disabled={ (!dateRangeReady || !defFileReady) || (this.state.dataInSync)} onClick={\r\n            ()=>{\r\n              this.recStream.newFeedCallBack=\r\n                (newStream,fullStream)=>{\r\n                  if(newStream.length>0)\r\n                  {\r\n                    let latestTime=newStream[newStream.length-1].time_ms;\r\n                    let inspectionRecGroup =\r\n                      inspectionRecGroup_Generate(fullStream,this.state.groupInterval,measureList);\r\n                    this.stateUpdate({\r\n                      inspectionRec:fullStream,\r\n                      inspectionRecGroup:inspectionRecGroup,\r\n                        inspectionRec_TagFiltered:fullStream,\r\n                      displayRange:[this.state.displayRange[0],moment(latestTime+1000)]\r\n                    });\r\n\r\n                    //console.log(\"fullStream=\",fullStream);\r\n                  }\r\n                }\r\n              this.stateUpdate({dataInSync:true});\r\n              this.recStream.queryInspRec(dateRange).then(result=>{\r\n                this.stateUpdate({dataInSync:false});\r\n              }).catch(err=>{\r\n                this.stateUpdate({dataInSync:false});\r\n              });\r\n            }} />\r\n            \r\n          <Button type=\"primary\" icon=\"download\" disabled={!dateRangeReady || !defFileReady || this.state.inspectionRec.length===0} \r\n          onClick={\r\n            ()=>{\r\n              let ReportName=this.state.defFile.name+\"_\"+YYYYMMDD(new Date());\r\n              let csv_arr= convertInspInfo2CSV(ReportName,measureList,this.state.inspectionRecGroup);\r\n              let str = csv_arr.join('');\r\n              //copyStringToClipboard(str);\r\n              downloadString(csv_arr.join(''), \"text/csv\", ReportName+\".csv\");\r\n            }} />\r\n            <hr style={{width:\"80%\"}}/>\r\n            <RelatedUsageInfo fullStream2Tag={this.state.inspectionRec}\r\n              onTagStateChange={(tagState)=>{\r\n\r\n                  let selectedTrueTags = Object.keys(tagState).filter(key=>tagState[key]);\r\n\r\n                  var filterTagsBoolean;\r\n\r\n                  filterTagsBoolean = selectedTrueTags.length==0?this.state.inspectionRec:\r\n                    this.state.inspectionRec.filter(function(item, index, array){\r\n                        let tArr=item.tag.split(\",\");\r\n                        return selectedTrueTags.some((item)=>tArr.includes(item));\r\n                        //return selectedTrueTags.every((item)=>tArr.includes(item));\r\n                    });\r\n\r\n\r\n                  let inspectionRecGroup =\r\n                      inspectionRecGroup_Generate(filterTagsBoolean,this.state.groupInterval,measureList);\r\n                  //console.log(filterTagsBoolean,inspectionRecGroup);\r\n                  this.stateUpdate({\r\n                      inspectionRecGroup:inspectionRecGroup,\r\n                      inspectionRec_TagFiltered:filterTagsBoolean\r\n                  });\r\n\r\n\r\n              }}/>\r\n            <hr style={{width:\"80%\"}}/>\r\n        </div>\r\n\r\n        {graphCtrlUI}\r\n        {graphUI}\r\n        <div key=\"k1\" className={\"s overlay scroll MenuAnim \" + menu_height} style={menuStyle}>\r\n          {MenuSet}\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n    );\r\n  }\r\n}\r\nfunction updateChart(fullStream2Tag,tagName,checked){\r\n    console.log(\"updateChart=\",tagName,checked);\r\n    // this.inspectionRecGroup_Generate(fullStream2Tag,this.state.groupInterval,measureList);\r\n\r\n}\r\nclass MyTag extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checked: true\r\n\r\n        };\r\n        console.log(\"New\");\r\n        // this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log(\"shouldComponentUpdate\",nextProps,nextState);\r\n        if(nextProps.tagName===this.props.tagName)\r\n        {\r\n            updateChart(nextProps.fullStream2Tag,nextProps.tagName,nextState.checked);\r\n        }\r\n        return true;\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        //console.log(nextProps);\r\n        // if(this.props===nextProps)return;\r\n        //this.setState({...this.state,...nextProps});\r\n        //console.log(\"componentWillReceiveProps\",nextProps);\r\n    }\r\n    handleChange2 = checked => {\r\n        this.setState({ checked });\r\n        console.log(\"handleChange=\",this.props.tagName,checked);\r\n        //updateChart(this.props.key,checked);\r\n        this.props.handleChange(checked);\r\n    };\r\n\r\n    appendTagtitle(props) {\r\n        return <h1>{props.name}</h1>;\r\n    }\r\n\r\n    render() {\r\n        console.log(\"handleChange=\",this.props.tagName,this.state.checked);\r\n        return (\r\n            <CheckableTag {...this.props} checked={this.state.checked} onChange={this.handleChange2} />\r\n        );\r\n    }\r\n}\r\nclass RelatedUsageInfo extends React.Component{\r\n//http://hyv.decade.tw:8080/query/deffile?name=BOS-LT13BH3421&\r\n// http://localhost:3000/hyvision_monitor/0.0.0/?v=0&hash=9fa42a5e990e4da632070e95daf14ec50de8a112&name=BOS-LT13BH3421\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            tags:{\r\n                //\"name\":false\r\n            }\r\n            // DefFileInfo:[],\r\n        };\r\n\r\n        this.checkInspectionRec=undefined;\r\n        // this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(this.checkInspectionRec===nextProps.fullStream2Tag)\r\n        {\r\n            return;\r\n        }\r\n        this.checkInspectionRec=nextProps.fullStream2Tag;\r\n        console.log(\"props.fullStream2Tag\",nextProps.fullStream2Tag);\r\n        const uniSet2 = new Set();\r\n        // uniSet2.add(\"judgeReport Tag\");\r\n        if(nextProps.fullStream2Tag.length>0){\r\n            nextProps.fullStream2Tag.forEach(function(e,i,a){\r\n                //console.log(\"e.tag=\",e.tag);\r\n                let tagSplit=e.tag.split(\",\");\r\n                //console.log(\"e.tag.split=\",e.tagSplit);\r\n                tagSplit.forEach(function(e2,i2,a2){\r\n                    //console.log(\"forEach2\",e2);\r\n                    if(e2.length!=0)\r\n                        uniSet2.add(e2);\r\n                });\r\n            });\r\n            let tags2={};\r\n            Array.from(uniSet2).forEach(function(key){\r\n                tags2[key]=true;\r\n            });\r\n\r\n            this.setState( {tags:tags2});\r\n\r\n            this.props.onTagStateChange(tags2);\r\n        }\r\n    }\r\n    handleTagChange(){\r\n        console.log(\"handleTagChange\");\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, prevState)\r\n    {\r\n        console.log(\"props.fullStream2Tag\",props.fullStream2Tag);\r\n        const uniSet2 = new Set();\r\n        // uniSet2.add(\"judgeReport Tag\");\r\n        if(props.fullStream2Tag.length>0){\r\n            props.fullStream2Tag.forEach(function(e,i,a){\r\n                //console.log(\"e.tag=\",e.tag);\r\n                let tagSplit=e.tag.split(\",\");\r\n                //console.log(\"e.tag.split=\",e.tagSplit);\r\n                tagSplit.forEach(function(e2,i2,a2){\r\n                    //console.log(\"forEach2\",e2);\r\n                    if(e2.length!=0)\r\n                        uniSet2.add(e2);\r\n                });\r\n            });\r\n            let tags2={...prevState.tags};\r\n            Array.from(uniSet2).forEach(function(key){\r\n              if(tags2[key]===undefined)\r\n                tags2[key]=true;\r\n            });\r\n\r\n            return {tags:tags2};\r\n\r\n        }\r\n        return null;\r\n    }\r\n\r\n    handleTagChange = (key,onoff) =>\r\n    {\r\n        let tags2={...this.state.tags};\r\n        tags2[key]=onoff;\r\n        this.props.onTagStateChange(tags2);\r\n        this.setState( {tags:tags2});\r\n    }\r\n\r\n    render() {\r\n        console.log(\"this.state.tags\",this.state.tags);\r\n\r\n        return (\r\n            <div>\r\n                <h6 style={{ marginRight: 8, display: 'inline' }}>Uni Categories:</h6>\r\n                {Object.keys(this.state.tags).map((key, index, array)=>{\r\n\r\n                    //this.state.tags[key]\r\n                    console.log(\"Array.from(uniSet2).map=\",index+\"=\"+key);\r\n                    return (\r\n                        <MyTag tagIndex={index} tagName={key} key={key} handleChange={\r\n                            (onoff)=>this.handleTagChange(key,onoff)}>\r\n                            {key}\r\n                        </MyTag>\r\n                    );\r\n                })\r\n                }\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n// function getDef(q_info) {\r\n//     let result\r\n//     console.log(\"q_info\",q_info);\r\n//     DB_Query.defFileQuery(q_info.name,q_info.hash).\r\n//     then((q)=>{\r\n//         if(q.length>0){\r\n//\r\n//             result=q;\r\n//         }else{\r\n//             console.log(\"[X]No result.\");\r\n//         }\r\n//\r\n//     });\r\n//     return result;\r\n// }\r\nexport default APP_ANALYSIS_MODE;","import React , { useState,useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport APP_ANALYSIS_MODE from \"./AnalysisUI\";\nimport * as DB_Query from './UTIL/DB_Query';\nimport  Modal  from 'antd/lib/modal';\nimport QrScanner from 'qr-scanner';\nimport jsonp from 'jsonp';\n\nimport  Typography  from 'antd/lib/typography';\nimport Input from 'antd/lib/input';\nimport Table from 'antd/lib/table';\nimport Col from 'antd/lib/col';\nimport Row from 'antd/lib/row';\nimport Layout from 'antd/lib/layout';\nQrScanner.WORKER_PATH = \"./qr-scanner-worker.min.js\";\n\nconst { Title, Paragraph, Text } = Typography;\nclass WebCam_SQScan extends React.Component{\n\n  constructor(props) {\n    super(props);\n\n  }\n   \n  componentDidMount() {\n    let video =this.refs.QR_WebCam;\n    \n    QrScanner.hasCamera().then(hasCamera => console.log(hasCamera));\n    this.qrScanner = new QrScanner(video, this.props.onScanResult);\n    \n    this.qrScanner.start();\n    console.log(this.qrScanner);\n  }\n  componentWillUnmount() {\n    this.qrScanner.destroy();\n    this.qrScanner = undefined;\n  }\n\n  render() {\n    return (\n      <video ref=\"QR_WebCam\" className={this.props.className} style={this.props.style} muted playsInline/>\n    );\n  }\n}\n\nfunction getAllUrlParams(url) {\n\n  // get query string from url (optional) or window\n  var queryString = url ? url.split('?')[1] : window.location.search.slice(1);\n\n  queryString = decodeURI(queryString);\n  // we'll store the parameters here\n  var obj = {};\n\n  // if query string exists\n  if (queryString) {\n\n    // stuff after # is not part of query string, so get rid of it\n    queryString = queryString.split('#')[0];\n\n    // split our query string into its component parts\n    var arr = queryString.split('&');\n\n    for (var i = 0; i < arr.length; i++) {\n      // separate the keys and the values\n      var a = arr[i].split('=');\n\n      // set parameter name and value (use 'true' if empty)\n      var paramName = a[0];\n      var paramValue = typeof (a[1]) === 'undefined' ? true : a[1];\n\n      // (optional) keep case consistent\n      //paramName = paramName.toLowerCase();\n      //if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();\n\n      // if the paramName ends with square brackets, e.g. colors[] or colors[2]\n      if (paramName.match(/\\[(\\d+)?\\]$/)) {\n\n        // create key if it doesn't exist\n        var key = paramName.replace(/\\[(\\d+)?\\]/, '');\n        if (!obj[key]) obj[key] = [];\n\n        // if it's an indexed array e.g. colors[2]\n        if (paramName.match(/\\[\\d+\\]$/)) {\n          // get the index value and add the entry at the appropriate position\n          var index = /\\[(\\d+)\\]/.exec(paramName)[1];\n          obj[key][index] = paramValue;\n        } else {\n          // otherwise add the value to the end of the array\n          obj[key].push(paramValue);\n        }\n      } else {\n        // we're dealing with a string\n        if (!obj[paramName]) {\n          // if it doesn't exist, create property\n          obj[paramName] = paramValue;\n        } else if (obj[paramName] && typeof obj[paramName] === 'string'){\n          // if property does exist and it's a string, convert it to an array\n          obj[paramName] = [obj[paramName]];\n          obj[paramName].push(paramValue);\n        } else {\n          // otherwise add the property\n          obj[paramName].push(paramValue);\n        }\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction isString(val){\n  return (typeof val === 'string' || val instanceof String)\n}\n\nfunction pjsonp(url,timeout=5000,timeoutErrMsg=\"TIMEOUT\")\n{\n  return new Promise((res,rej)=>{\n    let timeoutFlag=undefined;\n    if(timeout>0)\n    {\n      timeoutFlag = setTimeout(()=>{\n        timeoutFlag=undefined;\n        rej(timeoutErrMsg)\n      },timeout);\n    }\n\n    jsonp(url,  (err,data)=>{\n      clearTimeout(timeoutFlag);\n      if(err === null)\n          res(data);\n      else\n          rej(err)\n    });\n  });\n}\n\nfunction fetchDeffileInfo(name)\n{\n  let defFileData=undefined;\n  \n  return new Promise((res,rej)=>{\n    let url='http://hyv.decade.tw:8080/query/deffile?name='+name+'&limit=1000'\n    \n    pjsonp(url,null).then((data)=>{\n\n      \n      let url='http://hyv.decade.tw:8080/query/inspection?';\n      let hashArr = data.map(srec=>srec.DefineFile.featureSet_sha1)\n      hashArr = [...new Set(hashArr)];\n\n      defFileData=hashArr.map((hash)=>{\n        let name = data.filter((defF)=>defF.DefineFile.featureSet_sha1==hash)\n          .map(defF=>defF.DefineFile.name)\n        return {hash,name}\n      }).map(defFInfo=>{\n        defFInfo.name=[...new Set(defFInfo.name)];\n        return defFInfo;\n      });\n      let hashRegx = hashArr.reduce((acc,hash)=>acc===undefined?hash:acc+\"|\"+hash,undefined)\n      \n      url+='tStart=0&tEnd=2581663256894&limit=999999999&';\n      url+='subFeatureDefSha1='+hashRegx+'&'\n      url+='projection={\"_id\":0,\"InspectionData.subFeatureDefSha1\":1,\"InspectionData.time_ms\":1,\"InspectionData.tag\":1}&'\n      url+='agg=[{\"$group\":{\"_id\":\"$InspectionData.subFeatureDefSha1\",'+\n      '\"count\": {\"$sum\":1},'+\n      '\"time_start\": {\"$min\":\"$InspectionData.time_ms\"},'+\n      '\"time_end\": {\"$max\":\"$InspectionData.time_ms\"},'+\n      '\"tags\": {\"$addToSet\":\"$InspectionData.tag\"}'+\n      '}}]';\n\n      return pjsonp(url,null)\n\n    }).then((dataSet)=>{\n\n      let dataSet_Formatted=\n      dataSet.map(data=>{\n        data._id=data._id[0]\n        return data\n      }).reduce((acc,data)=>{\n        let id=data._id;\n        if(acc[id]===undefined)\n        {\n          acc[id]=data;\n          delete acc[id]._id; \n        }\n        else\n        {\n          acc[id].count+=data.count;\n          acc[id].time_start=[Math.min(acc[id].time_start[0],data.time_start[0])];\n          acc[id].time_end=[Math.max(acc[id].time_end[0],data.time_end[0])];\n        }\n        return acc;\n      },{})\n\n      //final aggregation\n      defFileData.forEach((defF)=>{\n        let tar = dataSet_Formatted[defF.hash];\n        if(tar!==undefined)\n        {\n          Object.assign(defF, tar)\n        }\n      })\n      res(defFileData)\n    }).catch((err)=>{\n      rej(err);\n    })\n  });\n}\n\n\n\nfunction fetchCostomDisplayInfo(name)\n{\n  let defFileData=undefined;\n  \n  return new Promise((res,rej)=>{\n    let url='http://hyv.decade.tw:8080/QUERY/customDisplay?name='+name\n    \n    pjsonp(url,null).then((data)=>{\n      res(data);\n    }).catch((err)=>{\n      rej(err);\n    })\n  });\n}\n\nfunction insertCostomDisplayInfo(id,info)\n{\n  let defFileData=undefined;\n  \n  return new Promise((res,rej)=>{\n    let url='http://hyv.decade.tw:8080/insert/customdisplay?name='+info.name+\n      \"&targetDeffiles=\"+JSON.stringify(info.targetDeffiles)\n    if(id!==undefined)\n    {\n      url+=\"&_id=\"+id;\n      \n    }\n    pjsonp(url,null).then((data)=>{\n      console.log(data);\n    }).catch((err)=>{\n      rej(err);\n    })\n  });\n}\n// fetchCostomDisplayInfo(\"Machine\");\n// insertCostomDisplayInfo(\"5e66719724f4fc4638dd3603\",{name:\"><>\",targetDeffiles:[{hash:\"sdiosdjciojsdoi\"}]});\nfunction getUrlPath()\n{\n  return window.location.href.substring(window.location.protocol.length).split('?')[0]\n}\nfunction XQueryInput({ onQueryRes,onQueryRej,placeholder,defaultValue }) {\n  const [fetchedRecord, setFetchedRecord] = useState([]);\n  let searchBox=<Input placeholder={placeholder} defaultValue={defaultValue}\n    onPressEnter={(e)=>{\n    console.log(e.target.value)\n    setFetchedRecord();\n    fetchDeffileInfo(e.target.value).\n      then((res)=>{\n\n        setFetchedRecord(res);\n        onQueryRes(res);\n      }).catch((e)=>{\n        setFetchedRecord([]);\n        if(onQueryRej!==undefined)\n          onQueryRej(e)\n      });\n  }} ></Input>\n  let fetchBtn=fetchedRecord===undefined?null:\n  <div>\n\n  </div>\n\n\n  let displayInfo=null\n  if(fetchedRecord!==undefined)\n  {\n    // displayInfo = fetchedRecord.map(fetchRec=>{\n\n    //   let text = fetchRec.name+\" \";\n    //   if(fetchRec.count!==undefined)\n    //   {\n    //     text+=\",count:\"+fetchRec.count;\n    //     var dateStart = new Date(fetchRec.time_start[0]);\n    //     var dateEnd = new Date(fetchRec.time_end[0]);\n    //     text+=\",\"+datePrintSimple(dateStart)+\"~\"+datePrintSimple(dateEnd);\n    //     text+=\",tags:\"+fetchRec.tags;\n    //   }\n\n    //   return [\n    //     <a href={getUrlPath()+\"?v=0&hash=\"+fetchRec.hash}>{text}</a>,\n    //     <br/>]})\n    const columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        render: fetchRec => <a href={getUrlPath()+\"?v=0&hash=\"+fetchRec.hash} target=\"_blank\">{fetchRec.name}</a>,\n      },\n      {\n        title: 'count',\n        dataIndex: 'count',\n        key: 'count',\n        sorter: (a, b) => a.count - b.count,\n      },\n      {\n        title: 'Date_Start',\n        dataIndex: 'Date_Start',\n        key: 'Date_Start',\n        render: milliSec => <div>{new Date(milliSec)+\"\"}</div>,\n        sorter: (a, b) => a.Date_Start - b.Date_Start,\n      },\n      {\n        title: 'Date_End',\n        dataIndex: 'Date_End',\n        key: 'Date_End',\n        render: milliSec => <div>{new Date(milliSec)+\"\"}</div>,\n        sorter: (a, b) => a.Date_End - b.Date_End,\n      },\n      {\n        title: 'Tags',\n        dataIndex: 'Tags',\n        key: 'Tags',\n      }]\n\n      let dataSource = fetchedRecord.filter(fetchRec=>fetchRec.count!==undefined).map(fetchRec=>{\n        let retSrc={\n          name:fetchRec\n        }\n        if(fetchRec.count!==undefined)\n        {\n          retSrc.count=fetchRec.count;\n          // var dateStart = new Date(fetchRec.time_start[0]);\n          // var dateEnd = new Date(fetchRec.time_end[0]);\n\n          retSrc.Date_Start=fetchRec.time_start[0];\n          retSrc.Date_End=fetchRec.time_end[0];\n          retSrc.Tags=fetchRec.tags;\n        }\n  \n        return retSrc\n      })\n    console.log(dataSource);\n    displayInfo=<Table columns={columns} dataSource={dataSource} pagination={false}/>;\n  }\n  return (\n\n    <div>\n      {searchBox}\n      {displayInfo}\n    </div>\n  );\n}\n\nfunction SingleDisplayUI({ displayInfo})\n{\n  const canvasRef = React.useRef(null)\n\n\n  return <div>\n    <Title level={2}>{displayInfo.name}</Title>\n    {JSON.stringify(displayInfo)}\n\n    <canvas  key=\"canv\"\n      ref={canvasRef}\n      onClick={e => {        \n        const canvas = canvasRef.current\n        const ctx = canvas.getContext('2d')\n        // implement draw on ctx here\n      }}\n    />\n  </div>\n}\n\nfunction CostomDisplayUI({ }) {\n  const [displayInfo, setDisplayInfo] = useState(undefined);\n\n  const [collapsed, setCollapsed] = useState(true);\n  useEffect(() => {\n    setDisplayInfo(undefined);\n    fetchCostomDisplayInfo(\"Machine\").then(data=>{\n      console.log(displayInfo);\n      setDisplayInfo(data.prod);\n    }).catch(e=>{\n      console.log(e);\n    });\n    return () => {\n      console.log(\"1,didUpdate ret::\");\n    };\n  },[]);\n\n  useEffect(() => {\n    console.log(\"2,count->useEffect>>\");\n  },[displayInfo]);\n\n  let UI=null;\n  if(displayInfo!==undefined)\n  {\n    console.log(displayInfo);\n    UI=[];\n    UI.push(<div key=\"Reset\" onClick={()=>setDisplayInfo(undefined)}>RESET....</div>)\n    UI.push(<Row  key=\"table\"  style={{height:\"50%\"}}>{displayInfo.map(info=>\n      <Col key={info.name} span={12}  style={{height:\"100%\"}}>\n        <SingleDisplayUI displayInfo={info}/>\n      </Col>\n    )}</Row>)\n\n\n  }\n\n\n  return (\n\n    <Layout style={{height:\"100%\"}}>\n      <Layout.Header style={{ color: '#FFFFFF' }} >Header</Layout.Header>\n      <Layout>\n        <Layout.Sider  style={{ color: '#FFFFFF' }} collapsible collapsed={collapsed} \n        onCollapse={()=>setCollapsed(!collapsed)}\n        onMouseOut={()=>(collapsed)?null:setCollapsed(true)}\n        onMouseOver={()=>(collapsed)?setCollapsed(false):null}\n        >\n          Sider\n        </Layout.Sider>\n        <Layout>\n          <Layout.Content  style={{ padding: '50px 50px' }}>{UI}</Layout.Content>\n          <Layout.Footer>Costom UI v0.0.0</Layout.Footer>\n        </Layout>\n      </Layout>\n    </Layout> \n  );\n}\n\n\nclass App extends React.Component{\n\n  constructor(props) {\n    super(props);\n\n\n    console.log(getAllUrlParams());\n    this.state={\n      DefFileInfo:undefined,\n      allowQRScan:false,\n      UI:undefined\n\n      //{v: 0, name: \"BOS-LT13BH3421\", hash: \"9fa42a5e990e4da632070e95daf14ec50de8a112\"}\n    }\n    this.UI_type={\n      customDisplay:\"customDisplay\",\n      analysis:\"analysis\",\n      search:\"search\",\n    }\n  }\n  componentDidMount() {\n\n    let urlParam = getAllUrlParams();\n    console.log(urlParam);\n    if(urlParam.UI===\"customDisplay\")\n    {\n      this.setState({UI:this.UI_type.customDisplay});\n    }\n    else if(urlParam.v!==undefined && urlParam.hash!==undefined)\n    {\n\n      this.onQRScanResult(JSON.stringify(urlParam));\n      this.setState({UI:this.UI_type.analysis});\n    }\n    else\n    {\n      this.setState({allowQRScan:true,UI:this.UI_type.search});\n    }\n  }\n  \n  onDefFileInfoUpdate(info)\n  {\n    this.setState({...this.state,DefFileInfo:info});\n    console.log(info);\n    DB_Query.defFileQuery(info.name,info.hash).\n      then((q)=>{\n        if(q.length>0)\n          this.setState({...this.state,defFile:q[0].DefineFile});\n        console.log(q)\n      });\n  }\n\n  onQRScanResult(result){\n\n    try {\n      let res_obj=JSON.parse(result);\n      if(isString(res_obj.v))\n      {\n         res_obj.v = Number(res_obj.v);\n      }\n      if(res_obj.v===0 && res_obj.hash!==undefined && res_obj.hash.length>5)\n      {\n        console.log(window.location.protocol);\n        if(window.location.protocol === 'https:')\n        {\n          window.location.href = 'http:' + window.location.href.substring(window.location.protocol.length).split('?')[0]+\n            \"?v=\"+res_obj.v+\"&hash=\"+res_obj.hash;\n          \n          console.log(window.location.href);\n          this.setState({...this.state,allowQRScan:false});\n        }\n        else\n        {\n          this.onDefFileInfoUpdate(res_obj);\n        }\n      }\n    } catch(e) {\n        alert(e); // error in the above string (in this case, yes)!\n    }\n  }\n\n  render() {\n    let UI;\n    switch(this.state.UI)\n    {\n      case this.UI_type.customDisplay:\n        UI=<CostomDisplayUI/>;\n        break;\n      case this.UI_type.analysis:\n        UI=<APP_ANALYSIS_MODE \n          DefFileHash={this.state.DefFileInfo.hash} \n          DefFileName={this.state.DefFileInfo.name}\n          defFile={this.state.defFile}/>;\n        break;\n      case this.UI_type.search:\n        UI=<XQueryInput onQueryRes={(res)=>{console.log(res)}} defaultValue=\"\" placeholder=\"輸入名稱\"/>;\n        break;\n    }\n\n    return (\n      <div className=\"App\"  style={{height:\"100%\"}}>\n        {UI}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// require('./server/apollo_server.js');\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}