{"version":3,"sources":["logo.svg","UTIL/MISC_Util.js","UTIL/DB_Query.js","UTIL/BPG_Protocol.js","AnalysisUI.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GetObjElement","rootObj","keyTrace","traceIdxTo","length","obj","traceIdxTLen","undefined","i","key","db_url","INSPECTION_STATUS","TextEncoder","NA","SUCCESS","FAILURE","CheckableTag","Tag","RangePicker","DatePicker","Title","Typography","Paragraph","Text","logX","InspectionRecordGroup_AppendCPK","InspRecGroup","defInspRange","forEach","group","stat","s_stat","defRange","find","s_def","id","cpkInfo","mean","sigma","USL","LSL","target","CPU","CPL","CP","Math","min","CA","CPK","abs","calcCpk","value","Object","assign","inspectionRecGroup_Generate","inspectionRec","groupInterval","measureList","inspectionRecGroup","InspectionRecord","largestInterval","fd","inspGroups","frontGroup","AddNewGroup","new_rec","startTime","time_ms","endTime","push","g","judgeReports","map","x","measures","singleRep","measure","availData","filter","status","reduce","sum","minMax","mM","max","sqrt","InspectionRecordGrouping","Chart","pluginService","register","afterDraw","chart","MEASURERSULTRESION","COLOR","TEXT","ControlChart","props","divID","round","random","charObj","state","chartOpt","type","data","labels","datasets","borderColor","lineTension","pointBackgroundColor","bezierCurve","options","scales","xAxes","display","distribution","ticks","callback","index","values","toString","source","autoSkip","time","displayFormat","displayFormats","hour","minUnit","yAxes","scaleLabel","elements","line","fill","point","radius","animation","duration","maintainAspectRatio","responsive","title","text","annotation","annotations","legend","tooltips","enabled","pan","mode","default_annotationTargets","color","nextProps","nextState","this","PropsUpdate","targetMeasure","value_target","datInfo","name","sumG","recG","concat","acc_data","rep","idx","xAxisRange","measureObj","jrep","measureValue","pointColor","val","Date","y","repG","this_id_stat","st","annotationTargets","anotationTargets","annotationTar","scaleID","borderWidth","borderDash","label","position","content","onMouseover","e","document","getElementById","innerHTML","callbacks","tooltipItem","datasetIndex","dataOnTip","groupSize","str_arr","moment","format","str","keys","toFixed","afterLabel","backgroundColor","titleFontSize","titleFontColor","bodyFontColor","bodyFontSize","displayColors","update","ctx","getContext","className","style","height","React","Component","Date_addDay","date","addDays","setDate","getDate","InspRecStream","reset","newFeedCallBack","newStream","fullStream","console","log","liveFeedMode","rec","liveFeedInterval","passiveQueryRange","liveQueryRange","timeoutHDL","clearTimeout","defFile","resetStreamInfo","JSON","parse","stringify","sort","a","b","lastMsInRec","recAfterLast","srec","concatArr","enable","liveQueryInspRec","timeRange","maxResults","_d","getTime","subFeatureDefSha1","date_start","date_end","limit","TYPE","url","Promise","res","rej","jsonp","err","DB_Query","featureSet_sha1","then","queryResult","InspectionData","newStreamFeed","setTimeout","catch","APP_ANALYSIS_MODE","ec_canvas","defFileSearchName","dateRange","displayRange","inspectionRec_TagFiltered","recStream","setDefFile","setState","setLiveFeedMode","stateUpdate","dateRangeReady","isReady","dr","DefFileName","DefFileHash","defFileReady","String","featureSet","features","feature","HEADER","graphCtrlUI","range","defaultValue","step","tipFormatter","onChange","checked","ev","liveFeedMode_ctrl","minuteStep","allowClear","t","mo","day_base","startOf","graphUI","width","m","icon","disabled","onClick","latestTime","queryInspRec","csv_arr","inspRecGroup","ci","pushDataRow","arr","measureReports","trace","RowName","ele","field","s_group","s_rep","convertInspInfo2CSV","join","fileType","fileName","blob","Blob","Uint8Array","createElement","download","href","URL","createObjectURL","dataset","downloadurl","body","appendChild","click","removeChild","revokeObjectURL","downloadString","mm","getMonth","dd","getFullYear","YYYYMMDD","fullStream2Tag","onTagStateChange","tagState","selectedTrueTags","filterTagsBoolean","item","array","tArr","tag","split","some","includes","top","MyTag","handleChange2","tagName","handleChange","RelatedUsageInfo","handleTagChange","onoff","tags2","tags","checkInspectionRec","uniSet2","Set","e2","i2","a2","add","Array","from","marginRight","tagIndex","QrScanner","WORKER_PATH","getAllUrlParams","queryString","window","location","search","slice","decodeURI","paramName","paramValue","toLowerCase","match","replace","exec","pjsonp","timeout","timeoutErrMsg","timeoutFlag","XQueryInput","onQueryRes","onQueryRej","placeholder","useState","fetchedRecord","setFetchedRecord","searchBox","onPressEnter","defFileData","hashArr","DefineFile","hash","defF","defFInfo","acc","dataSet","dataSet_Formatted","_id","count","time_start","time_end","tar","fetchDeffileInfo","displayInfo","columns","dataIndex","render","fetchRec","substring","protocol","sorter","milliSec","Date_Start","Date_End","dataSource","retSrc","Tags","pagination","App","DefFileInfo","allowQRScan","urlParam","v","onQRScanResult","info","projection","q","result","res_obj","Number","onDefFileInfoUpdate","alert","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1659c79d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","\r\n\r\nexport function Num2Str_padding(pad,num)\r\n{\r\n  var str=\"0000000000000000\"+(num);\r\n  return str.substr(-pad);\r\n}\r\n\r\nexport function round(num,round_nor=1)\r\n{\r\n  let tmp = (1/round_nor);\r\n  let round_nor_inv = Math.round(tmp);\r\n  if(round_nor_inv===0)\r\n  {\r\n    round_nor_inv=tmp;\r\n  }\r\n\r\n  return Math.round(num*round_nor_inv)/round_nor_inv;\r\n}\r\n\r\n\r\nexport function xstate_GetCurrentMainState(state)\r\n{\r\n  if(typeof state.value === \"string\")\r\n  {\r\n    return {state:state.value, substate:null};\r\n  }\r\n  let complexState = state.value;\r\n  let state_Str = Object.keys(complexState)[0];\r\n  return {state:state_Str, substate:complexState[state_Str]};\r\n\r\n}\r\n\r\nexport function xstate_GetMainState(state)\r\n{\r\n  if(typeof state.value === \"string\")\r\n  {\r\n    return state.value;\r\n  }\r\n  let complexState = state.value;\r\n  return Object.keys(complexState)[0];\r\n}\r\n\r\nexport function xstate_GetSubState(state)\r\n{\r\n  if(typeof state.value === \"string\")\r\n  {\r\n    return undefined;\r\n  }\r\n  let complexState = state.value;\r\n  let state_Str = Object.keys(complexState)[0];\r\n  return complexState[state_Str];\r\n}\r\n\r\n\r\nexport function GetObjElement(rootObj,keyTrace,traceIdxTo=keyTrace.length-1)\r\n{\r\n  let obj = rootObj;\r\n  let traceIdxTLen = traceIdxTo+1;\r\n  if( rootObj === undefined)return;\r\n  for (let i=0;i<traceIdxTLen;i++) {\r\n    let key = keyTrace[i];\r\n    //console.log(obj,key,obj[key]);\r\n    obj = obj[key];\r\n\r\n    if( obj === undefined)return;\r\n  }\r\n  return obj;\r\n}\r\n\r\n\r\n\r\nexport function DictConv(key,dict,dictTheme)\r\n{\r\n  let translation = (dictTheme===undefined)?undefined:GetObjElement(dict,[dictTheme, key]);\r\n\r\n  if(translation===undefined)\r\n  {\r\n    translation = GetObjElement(dict,[\"fallback\", key]);\r\n  }\r\n\r\n  return translation;\r\n}\r\n\r\n\r\n\r\nexport class websocket_autoReconnect{\r\n  constructor(url,timeout=5000) {\r\n      this.url=undefined;\r\n      this.wsclose=false;\r\n      this.reconnectionCounter=0;\r\n      this.reconnectGap_ms=1000;\r\n      this.connectionTimeout_ms=timeout;\r\n      this.connectionTimer=null;\r\n      this.readyState=undefined;\r\n      this._connect(url);\r\n\r\n  }\r\n  onopen(ev){}\r\n  onmessage(ev){}\r\n  onerror(ev){}\r\n  onclose(ev){}\r\n\r\n  onreconnection(reconnectionCounter){}\r\n  onconnectiontimeout(){}\r\n\r\n  setWebsocketCallbackUndefined(ws)\r\n  {\r\n    ws.onopen=\r\n    ws.onmessage=\r\n    ws.onerror=\r\n    ws.onclose=undefined;\r\n  }\r\n  _connect(url) {\r\n    if(this.wsclose)return;\r\n    \r\n    console.log(\"_connect\");\r\n    this.url=url;\r\n    if(this.websocket!==undefined)\r\n    {\r\n        this.reconnectionCounter++;\r\n        let doconnection = this.onreconnection(this.reconnectionCounter);\r\n        if(doconnection!==undefined && doconnection!==true)\r\n        {\r\n          this.websocket=undefined;\r\n          return;\r\n        }\r\n    }\r\n\r\n    if(this.connectionTimer!==undefined)\r\n      clearTimeout(this.connectionTimer);\r\n    this.connectionTimer=undefined;\r\n\r\n    this.websocket = new WebSocket(url);\r\n    this.OPEN=this.websocket.OPEN;\r\n    this.CONNECTING=this.websocket.CONNECTING;\r\n    this.CLOSED=this.websocket.CLOSED;\r\n    this.CLOSING=this.websocket.CLOSING;\r\n    this.connectionTimer = setTimeout(()=>{\r\n        this.close();\r\n        this.onconnectiontimeout();\r\n    },this.connectionTimeout_ms);\r\n    // this.state.WS_DB_Insert.binaryType = \"arraybuffer\";\r\n\r\n    this.websocket.onopen = (ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      clearTimeout(this.connectionTimer);\r\n      this.connectionTimer=undefined;\r\n      return this.onopen(ev);\r\n    };\r\n    this.websocket.onmessage =(ev)=> this.onmessage(ev);\r\n    this.websocket.onerror =(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      //setTimeout(()=>this._connect(url),10);\r\n      return this.onerror(ev);\r\n    }\r\n    this.websocket.onclose =(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      setTimeout(()=>this._connect(url),this.reconnectGap_ms);\r\n      return this.onclose(ev);\r\n    }\r\n  }\r\n  \r\n  reconnect() {\r\n    console.log(    this.wsclose,this.websocket);\r\n    this.wsclose=false;\r\n    if(this.websocket!==undefined)\r\n    {\r\n      if(this.websocket.readyState!==this.websocket.OPEN)\r\n      {\r\n        this.setWebsocketCallbackUndefined(this.websocket);\r\n        this.websocket=undefined;\r\n        this._connect(this.url);\r\n      }\r\n      else\r\n        this.websocket.close();//this should trigger _connect affter close/error event\r\n    }\r\n    else\r\n    {\r\n      this._connect(this.url);\r\n    }\r\n  }\r\n  close() {\r\n    this.wsclose=true;\r\n    \r\n    if(this.connectionTimer!==undefined)\r\n      clearTimeout(this.connectionTimer);\r\n    this.connectionTimer=undefined;\r\n    if(this.websocket!==undefined)\r\n    {\r\n        this.websocket.close();\r\n\r\n    }\r\n  }\r\n\r\n  send(data){\r\n    return this.websocket.send(data);\r\n  }\r\n}\r\n\r\nexport class websocket_reqTrack{\r\n  constructor(websocket) {\r\n    let onopen = websocket.onopen;\r\n    let onmessage = websocket.onmessage;\r\n    let onerror = websocket.onerror;\r\n    let onclose = websocket.onclose;\r\n\r\n    this.trackWindow={};\r\n\r\n    websocket.onopen=(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      this.onopen(ev);\r\n    };\r\n    websocket.onclose=(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      this.onclose(ev);\r\n    };\r\n    websocket.onmessage=(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      let p = JSON.parse(ev.data);\r\n      let type=p.type;\r\n      if(type===\"ACK\" || type===\"NAK\")\r\n      {\r\n        let req_id=p.req_id;\r\n        if(req_id!==undefined)\r\n        {\r\n          let tobj = this.trackWindow[req_id];\r\n          if(tobj!==undefined)\r\n          {\r\n            delete this.trackWindow[req_id];\r\n            if(type===\"ACK\")\r\n            {\r\n              tobj.resolve(p);\r\n            }\r\n            else\r\n            {\r\n              tobj.reject(p);\r\n            }\r\n          }\r\n          else\r\n          {\r\n            req_id=undefined;\r\n          }\r\n        }\r\n        \r\n        if(req_id===undefined){\r\n          \r\n          this.onTrackError({\r\n            type:\"ACK_TRACK_ERR\",\r\n            data:p\r\n          });\r\n        }\r\n      }\r\n      this.onmessage(ev,p);\r\n    };\r\n    websocket.onerror=(ev)=>{\r\n      this.readyState=this.websocket.readyState;\r\n      this.onerror(ev);\r\n    };\r\n    this.websocket=websocket;\r\n  }\r\n  \r\n  onTrackError(ev){}\r\n\r\n  onopen(ev){}\r\n  onmessage(ev){}\r\n  onerror(ev){}\r\n  onclose(ev){}\r\n\r\n\r\n  \r\n  close() {\r\n    return this.websocket.close();\r\n  }\r\n\r\n  send_obj(data,replacer){\r\n\r\n    let req_id = data.req_id;\r\n\r\n    while(req_id===undefined||\r\n      Object.keys(this.trackWindow).reduce((match,id)=>match||id === req_id,false))\r\n      //Check existance\r\n    {\r\n      //if req_id is undefined / exists in the lookup table\r\n      req_id = Math.floor(Math.random()*16777215).toString(16);\r\n    }\r\n    data.req_id = req_id;\r\n\r\n\r\n    this.websocket.send(JSON.stringify(data,replacer));\r\n  \r\n    let trackObj={\r\n      time:Date.now(),\r\n      resolve:undefined,\r\n      reject:undefined,\r\n      data:data,\r\n      rsp:undefined\r\n    };\r\n    this.trackWindow[req_id]=trackObj;\r\n    return new Promise((resolve, reject)=>{\r\n      trackObj.resolve=resolve;\r\n      trackObj.reject=reject;\r\n    });\r\n  }\r\n}","import jsonp from 'jsonp';\r\n\r\n\r\nlet db_url = \"http://hyv.decade.tw:8080/\";\r\nfunction defFileQuery(name,featureSet_sha1,projection)\r\n{\r\n    \r\n    let url = db_url+\"query/deffile?\";\r\n    url+=\"limit=1000\";\r\n    \r\n    if(name!==undefined)\r\n        url+=\"&name=\"+name;\r\n\r\n    if(featureSet_sha1!==undefined)\r\n        url+=\"&featureSet_sha1=\"+featureSet_sha1;\r\n    \r\n    if(projection!==undefined)\r\n        url+=\"&projection=\"+JSON.stringify(projection);\r\n    else\r\n        url+=\"&projection={}\";\r\n    //url+=\"&projection={}\"\r\n    return new Promise((res,rej)=>{\r\n\r\n        jsonp(url,  (err,data)=>{\r\n            if(err === null)\r\n                res(data);\r\n            else\r\n                rej(err)\r\n            console.log(err,data);\r\n        });\r\n    });\r\n}\r\n\r\n\r\nfunction inspectionQuery(subFeatureDefSha1,date_start,date_end,limit=100)\r\n{\t\r\n    let TYPE=\"query/inspection\";\r\n    let url = db_url+TYPE+\"?\";\r\n\r\n    url+=\"tStart=\"+date_start.toString()+\"&tEnd=\"+date_end.toString()+\"&\";\r\n    url+=\"limit=\"+limit+\"&page=1&\"\r\n    url+=\"subFeatureDefSha1=\"+subFeatureDefSha1+\"&\"\r\n    if(true)\r\n    {\r\n        url+=\"projection=\"+JSON.stringify(\r\n            {\"_id\":0,\"InspectionData.time_ms\":1,\r\n            \"InspectionData.judgeReports.id\":1,\r\n            \"InspectionData.judgeReports.value\":1,\r\n            \"InspectionData.judgeReports.status\":1,\r\n            \r\n            \"createdAt\":1,\r\n            \"updatedAt\":1,\r\n            \"InspectionData.tag\":1\r\n            });\r\n    }\r\n    else{\r\n        \r\n        url+=\"projection=\"+JSON.stringify(\r\n            {\"_id\":0,\"InspectionData.time_ms\":1,\r\n            \"InspectionData.judgeReports\":1}\r\n            );\r\n    }\r\n    url+=\"\";\r\n    \r\n\r\n    \r\n    return new Promise((res,rej)=>{\r\n\r\n        jsonp(url,  (err,data)=>{\r\n            \r\n            if(err === null)\r\n                res(data);\r\n            else\r\n                rej(err)\r\n            console.log(err,data);\r\n            /*console.log(err,data);\r\n            text=JSON.stringify(\r\n                data.\r\n                reduce((arr,data)=>\r\n                {\r\n                    data.InspectionData.forEach(ele =>arr.push(ele));\r\n                    return arr;\r\n                },[]).\r\n                map(data=>data.judgeReports)\r\n            );*/\r\n        });\r\n    });\r\n\r\n}\r\n\r\n\r\nexport {defFileQuery,inspectionQuery};","\r\nconst BPG_header_L = 9;\r\nlet raw2header=(ws_evt, offset = 0)=>{\r\n  if (( ws_evt.data instanceof ArrayBuffer) && ws_evt.data.byteLength>=BPG_header_L) {\r\n    // var aDataArray = new Float64Array(evt.data);\r\n    // var aDataArray = new Uint8Array(evt.data);\r\n    var headerArray = new Uint8ClampedArray(\r\n      ws_evt.data,offset,BPG_header_L);\r\n    let ret_obj={};\r\n\r\n\r\n    ret_obj.type = String.fromCharCode(headerArray[0],headerArray[1]);\r\n    ret_obj.prop = headerArray[2];\r\n    ret_obj.pgID = (headerArray[3]<<8)+headerArray[4];\r\n    //console.log(ret_obj.pgID);\r\n\r\n    ret_obj.length =\r\n      headerArray[5]<<24 | headerArray[6]<<16 |\r\n      headerArray[7]<<8  | headerArray[8];\r\n    return ret_obj;\r\n  }\r\n  return null;\r\n};\r\nlet raw2obj_rawdata=(ws_evt, offset = 0)=>{\r\n  let ret_obj = raw2header(ws_evt, offset);\r\n  if(ret_obj==null)return null;\r\n\r\n  ret_obj.rawdata = new Uint8ClampedArray(ws_evt.data,\r\n    offset+BPG_header_L,ret_obj.length\r\n  );\r\n\r\n  return ret_obj;\r\n};\r\nlet raw2obj=(ws_evt, offset = 0)=>{\r\n  let ret_obj = raw2header(ws_evt, offset);\r\n  if(ret_obj==null)return null;\r\n\r\n  ret_obj.rawdata = new Uint8ClampedArray(ws_evt.data,\r\n    offset+BPG_header_L,ret_obj.length\r\n  );\r\n  let  enc = new TextDecoder(\"utf-8\");\r\n  let str = enc.decode(ret_obj.rawdata);\r\n  ret_obj.data = JSON.parse(str);\r\n  return ret_obj;\r\n};\r\nlet raw2Obj_IM=(ws_evt, offset = 0)=>{\r\n  let ret_obj = raw2header(ws_evt, offset);\r\n  if(ret_obj==null)return null;\r\n\r\n  let headerArray = new Uint8ClampedArray(ws_evt.data,\r\n    offset+BPG_header_L,6);\r\n  ret_obj.camera_id=headerArray[0];\r\n  ret_obj.session_id=headerArray[1];\r\n  ret_obj.width=(headerArray[2]<<8)|headerArray[3];\r\n  ret_obj.height=(headerArray[4]<<8)|headerArray[5];\r\n  let RGBA_pix_Num = 4*ret_obj.width*ret_obj.height;\r\n  \r\n\r\n  if(true||RGBA_pix_Num == (ret_obj.length-6))\r\n  {\r\n    ret_obj.image=new Uint8ClampedArray(ws_evt.data,\r\n      offset+BPG_header_L+6,4*ret_obj.width*ret_obj.height);\r\n  }\r\n  else\r\n  {\r\n    ret_obj.image=null;\r\n  }\r\n\r\n\r\n  return ret_obj;\r\n};\r\n\r\nvar enc = new TextEncoder();\r\nlet objbarr2raw=(type,prop,pgID,obj,barr=null)=>{\r\n  \r\n  let str = (obj==null)?\"\":JSON.stringify(obj);\r\n\r\n  let encStr= enc.encode(str);\r\n  let objstr_L = encStr.length;\r\n  \r\n  let barr_L = (barr instanceof Uint8Array)?barr.length:0;\r\n  let bbuf = new Uint8Array(BPG_header_L+objstr_L+1+barr_L);\r\n\r\n  bbuf[0] = type.charCodeAt(0);\r\n  bbuf[1] = type.charCodeAt(1);\r\n  bbuf[2] = prop;\r\n  bbuf[3] = pgID>>1;\r\n  bbuf[4] = pgID&255;\r\n\r\n  let data_length =bbuf.length - BPG_header_L;//Add NULL in the end of the string\r\n  bbuf[5] = data_length>>24;\r\n  bbuf[6] = data_length>>16;\r\n  bbuf[7] = data_length>>8;\r\n  bbuf[8] = data_length;\r\n  if(objstr_L!=0)\r\n  {\r\n    bbuf.set(encStr, BPG_header_L);\r\n  }\r\n  bbuf[BPG_header_L+objstr_L]=0;//The end of string session\r\n  if(barr_L!=0)\r\n  {\r\n    bbuf.set(barr, BPG_header_L+objstr_L+1);\r\n  }\r\n  return bbuf;\r\n};\r\n\r\n\r\n\r\nexport const INSPECTION_STATUS = {\r\n  NA:-128,\r\n  SUCCESS:0,\r\n  FAILURE:-1,\r\n};\r\n\r\n\r\n\r\n\r\nexport const DEF_EXTENSION = \"hydef\";\r\n\r\nexport default { raw2header, raw2obj_rawdata, raw2obj,raw2Obj_IM,objbarr2raw,INSPECTION_STATUS }\r\n\r\n//let binaryX = BPG_Protocol.obj2raw(\"TC\",{a:1,b:{c:2}});\r\n//console.log(BPG_Protocol.raw2obj({data:binaryX.buffer}));\r\n","'use strict'\r\n   \r\n\r\nimport React from 'react';\r\n\r\nimport {round as roundX,GetObjElement} from './UTIL/MISC_Util';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport moment from 'moment';\r\nimport Table from 'antd/lib/table';\r\nimport Button from 'antd/lib/button';\r\n\r\nimport * as logX from 'loglevel';\r\nimport 'chartjs-plugin-zoom'\r\n\r\nimport * as DB_Query from './UTIL/DB_Query';\r\n\r\nimport Input from 'antd/lib/input';\r\nimport Slider from 'antd/lib/slider';\r\nimport TimePicker from 'antd/lib/time-picker';\r\nimport DatePicker from 'antd/lib/date-picker';\r\nimport Checkbox from 'antd/lib/checkbox';\r\n\r\nimport  Typography  from 'antd/lib/typography';\r\nimport ReactResizeDetector from 'react-resize-detector';\r\n\r\nimport Chart from 'chart.js';\r\nimport 'chartjs-plugin-annotation';\r\nimport {INSPECTION_STATUS} from './UTIL/BPG_Protocol';\r\nimport Tag  from 'antd/lib/tag';\r\nconst { CheckableTag } = Tag;\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nlet log = logX.getLogger(\"AnalysisUI\");\r\n\r\n\r\n\r\nChart.pluginService.register({\r\n  afterDraw: function(chart) {\r\n  }\r\n});\r\n\r\n\r\n\r\nfunction calcCpk(mean,sigma,USL,LSL,target)\r\n{\r\n  \r\n  let CPU = (USL-mean)/(3*sigma);\r\n  let CPL = (mean-LSL)/(3*sigma);\r\n  let CP = Math.min(CPU,CPL);\r\n  let CA = (mean-target)/((USL-LSL)/2);\r\n  let CPK = CP*(1-Math.abs(CA));\r\n  return {mean,sigma,CPU,CPL,CP,CA,CPK}\r\n}\r\nfunction copyStringToClipboard (str) {\r\n  // Create new element\r\n  var el = document.createElement('textarea');\r\n  // Set value (string to be copied)\r\n  el.value = str;\r\n  // Set non-editable to avoid focus and move outside of view\r\n  el.setAttribute('readonly', '');\r\n  el.style = {position: 'absolute', left: '-9999px'};\r\n  document.body.appendChild(el);\r\n  // Select text inside element\r\n  el.select();\r\n  // Copy text to clipboard\r\n  document.execCommand('copy');\r\n  // Remove temporary element\r\n  document.body.removeChild(el);\r\n}\r\n\r\nfunction downloadString(text, fileType, fileName) {\r\n  var blob = new Blob([new Uint8Array([0xef, 0xbb, 0xbf]),text], { type: fileType });\r\n// downloadString(\"a,b,c\\n1,2,3\", \"text/csv\", \"myCSV.csv\")\r\n  var a = document.createElement('a');\r\n  a.download = fileName;\r\n  a.href = URL.createObjectURL(blob);\r\n  a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\r\n  a.style.display = \"none\";\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\r\n}\r\n\r\nfunction isString (value) {\r\n  return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\n\r\nfunction convertInspInfo2CSV(measureList,inspRecGroup)\r\n{\r\n  let ci=[];\r\n  console.log(measureList,inspRecGroup);\r\n  function pushDataRow(arr,measureReports,trace,RowName=trace[trace.length-1])\r\n  {\r\n    arr.push(RowName);\r\n    measureReports.forEach((rep)=>{\r\n      let ele = GetObjElement(rep,trace);\r\n      if(ele===undefined)ele='';\r\n      arr.push(\",\"+ele);\r\n    });\r\n    arr.push(\"\\n\");\r\n  }\r\n  [\"name\",\"subtype\"]\r\n    .forEach(field=>pushDataRow(ci,measureList,[field]));\r\n\r\n  [\"USL\",\"UCL\",\"value\",\"LCL\",\"LSL\"]\r\n    .forEach(field=>pushDataRow(ci,measureList,[field]));\r\n\r\n  ci.push(\",\\n\");\r\n\r\n  inspRecGroup.forEach(s_group=>{\r\n    s_group.group\r\n      .forEach(data=>{\r\n        let rep=data.judgeReports;\r\n        ci.push(data.time_ms);\r\n        measureList.forEach(m=>\r\n          {\r\n            let s_rep = rep.find(s_rep=>s_rep.id==m.id);\r\n            if(s_rep.status!==INSPECTION_STATUS.NA)\r\n              ci.push(\",\"+s_rep.value);\r\n            else\r\n              ci.push(\",\");\r\n          })\r\n        ci.push(\"\\n\");\r\n        \r\n      });\r\n  })\r\n  /*\r\n  measureReports.forEach((rep)=>{\r\n    ci.push(\",\");\r\n  });ci.push(\"\\n\");\r\n\r\n  let dateL = measureReports[0].valArr.length;\r\n  for(let i=0;i<dateL;i++)\r\n  {\r\n    pushDataRow(ci,measureReports,[\"valArr\",i],insp[i].time_ms);\r\n  }*/\r\n\r\n\r\n  return ci;\r\n}\r\n\r\nfunction YYYYMMDD(date)\r\n{\r\n  var mm = date.getMonth() + 1; // getMonth() is zero-based\r\n  var dd = date.getDate();\r\n\r\n  return [date.getFullYear(),\r\n          (mm>9 ? '' : '0') + mm,\r\n          (dd>9 ? '' : '0') + dd\r\n         ].join('');\r\n}\r\n\r\nfunction InspectionRecordGrouping(InspectionRecord,largestInterval=2*60*1000)\r\n{\r\n  let fd = InspectionRecord;\r\n  let inspGroups=[];\r\n  let frontGroup=undefined;\r\n  function AddNewGroup(new_rec)\r\n  {\r\n    frontGroup={\r\n      group:[new_rec],\r\n      startTime:new_rec.time_ms,\r\n      endTime:new_rec.time_ms,\r\n    }\r\n    inspGroups.push(frontGroup);\r\n  }\r\n  AddNewGroup(fd[0]);\r\n  for(let i=1;i<fd.length;i++)\r\n  {\r\n    if(fd[i].time_ms-frontGroup.endTime<largestInterval)\r\n    {\r\n      frontGroup.group.push(fd[i]);\r\n      frontGroup.endTime=fd[i].time_ms;\r\n    }\r\n    else\r\n    {\r\n      AddNewGroup(fd[i]);\r\n    }\r\n  }\r\n\r\n  inspGroups.forEach(frontGroup=>{\r\n    let g= frontGroup.group;\r\n    if(g.length==0)return;\r\n\r\n    let stat = g[0].judgeReports.map(x=>({id:x.id}));\r\n    stat=stat.map(s_stat=>{\r\n\r\n      let measures=g.map(singleRep=>singleRep.judgeReports.find(measure=>measure.id==s_stat.id));\r\n      let availData= measures.filter((measure)=>measure.status !==INSPECTION_STATUS.NA);\r\n      let mean = availData.reduce((sum,measure)=>sum+measure.value,0)/availData.length;\r\n      \r\n      let minMax = measures.reduce((mM,measure)=>{\r\n        if(measure.status ===INSPECTION_STATUS.NA)\r\n        {\r\n          return mM;\r\n        }\r\n\r\n\r\n        if(mM.max===undefined || mM.max===null || measure.value>mM.max)\r\n          mM.max = measure.value;\r\n        if(mM.min===undefined || mM.min===null || measure.value<mM.min)\r\n          mM.min = measure.value;\r\n        \r\n        return mM;\r\n\r\n      },{\r\n        min:undefined,\r\n        max:undefined\r\n      });\r\n      let sigma = Math.sqrt(availData.reduce((sum,measure)=>sum+(mean-+measure.value)*(mean-+measure.value),0)/availData.length);\r\n\r\n      return {\r\n        id:s_stat.id,\r\n        mean,sigma,\r\n        min:minMax.min,\r\n        max:minMax.max\r\n      }\r\n    })\r\n\r\n\r\n    frontGroup.stat=stat;\r\n\r\n\r\n  })\r\n\r\n\r\n  return inspGroups;\r\n}\r\n\r\nfunction InspectionRecordGroup_AppendCPK(InspRecGroup,defInspRange)\r\n{\r\n  InspRecGroup.forEach(group=>{\r\n    group.stat.forEach(s_stat=>{\r\n      let defRange = defInspRange.find(s_def=>s_def.id==s_stat.id);\r\n      if(defRange===undefined)return;\r\n      let cpkInfo = calcCpk(s_stat.mean,s_stat.sigma,defRange.USL,defRange.LSL,defRange.value);\r\n      Object.assign(s_stat, cpkInfo);\r\n    })\r\n  })\r\n}\r\n\r\n\r\nfunction inspectionRecGroup_Generate(inspectionRec,groupInterval,measureList)\r\n{\r\n    let inspectionRecGroup = InspectionRecordGrouping(inspectionRec,groupInterval);\r\n    InspectionRecordGroup_AppendCPK(inspectionRecGroup,measureList);\r\n    return inspectionRecGroup;\r\n}\r\n\r\nconst MEASURERSULTRESION=\r\n{\r\n  NA:\"NA\",\r\n  UOK:\"UOK\",\r\n  LOK:\"LOK\",\r\n  \r\n  UCNG:\"UCNG\",\r\n  LCNG:\"LCNG\",\r\n\r\n  USNG:\"USNG\",\r\n  LSNG:\"LSNG\",\r\n};\r\n\r\n\r\nexport const OK_NG_BOX_COLOR_TEXT = {\r\n  [MEASURERSULTRESION.NA]:{COLOR:\"#aaa\",TEXT:MEASURERSULTRESION.NA},\r\n  [MEASURERSULTRESION.UOK]:{COLOR:\"#87d068\",TEXT:MEASURERSULTRESION.UOK},\r\n  [MEASURERSULTRESION.LOK]:{COLOR:\"#87d068\",TEXT:MEASURERSULTRESION.LOK},\r\n  [MEASURERSULTRESION.UCNG]:{COLOR:\"#d0d068\",TEXT:MEASURERSULTRESION.UCNG},\r\n  [MEASURERSULTRESION.LCNG]:{COLOR:\"#d0d068\",TEXT:MEASURERSULTRESION.LCNG},\r\n  [MEASURERSULTRESION.USNG]:{COLOR:\"#f50\",TEXT:MEASURERSULTRESION.USNG},\r\n  [MEASURERSULTRESION.LSNG]:{COLOR:\"#f50\",TEXT:MEASURERSULTRESION.LSNG},\r\n};\r\nfunction newDate(time_ms) {\r\n  return moment(time_ms).toDate();\r\n}\r\n\r\n\r\n\r\n\r\nclass ControlChart extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.divID=\"ControlChart_ID_\" + Math.round(Math.random() * 10000);\r\n      this.charObj = undefined;\r\n      this.state={\r\n          chartOpt:{\r\n              type: 'line',\r\n              data:{labels:[],datasets:[{            \r\n                  \r\n                  borderColor:\"rgba(100, 255, 100,0)\",\r\n                  lineTension: 0,data:[],\r\n                  pointBackgroundColor:[]},\r\n                {            \r\n                  type: \"scatter\",\r\n                  borderColor:\"rgba(100, 255, 100)\",\r\n                  lineTension: 0,data:[],\r\n                  pointBackgroundColor:[]}\r\n                \r\n                ]},\r\n              bezierCurve : false,\r\n              options: {\r\n\r\n                  scales: {\r\n                      xAxes: [\r\n                        {\r\n                          display: true,\r\n                          type: 'time',\r\n                          distribution: \"linear\",\r\n                          ticks: {\r\n                            callback: function(value, index, values) {\r\n                              return value.toString();\r\n                            },\r\n                            source: 'labels',\r\n                            autoSkip: true\r\n                          },\r\n                          time:{\r\n                            displayFormat:true,\r\n                            displayFormats:{\r\n                              hour: \"MMM D, h:mm:ss\"\r\n                            },\r\n                            minUnit:\"hour\"\r\n                          }\r\n                        }] ,\r\n                      yAxes: [{\r\n                        display: true,\r\n                        scaleLabel: {\r\n                          display: true,\r\n                        }\r\n                      }]  \r\n                  },\r\n                  elements: {\r\n                      line: {fill: false},\r\n                      point: { radius: 6 } \r\n                  },\r\n                  bezierCurve : false,\r\n                  animation: {\r\n                      duration: 0\r\n                  },\r\n                  maintainAspectRatio: false,\r\n                  responsive: true,\r\n                  title: {\r\n                      display: true,\r\n                      text: ''\r\n                  },\r\n                  annotation: {\r\n                      annotations: []\r\n                  },\r\n                  legend: {\r\n                      display: false\r\n                  },\r\n                  tooltips: {\r\n                      enabled: true\r\n                  }\r\n              }\r\n          },\r\n          \r\n\r\n      };\r\n\r\n      this.state.chartOpt.options.pan={\r\n          enabled: true,\r\n          mode: 'y' // is panning about the y axis neccessary for bar charts?\r\n        }\r\n\r\n\r\n\r\n\r\n      this.default_annotationTargets=[\r\n          {type:\"USL\",color:\"rgba(200, 0, 0,0.2)\"},\r\n          {type:\"LSL\",color:\"rgba(200, 0, 0,0.2)\"},\r\n          {type:\"UCL\",color:\"rgba(100, 100, 0,0.2)\"},\r\n          {type:\"LCL\",color:\"rgba(100, 100, 0,0.2)\"},\r\n          {type:\"value\",color:\"rgba(0, 0, 0,0.2)\"},\r\n      ];\r\n  } \r\n  \r\n  componentWillMount(nextProps, nextState){\r\n  }\r\n  componentWillUpdate(nextProps, nextState){\r\n    this.PropsUpdate(nextProps);\r\n  }\r\n  PropsUpdate(nextProps) {\r\n      \r\n\r\n      let LSL=nextProps.targetMeasure[\"LSL\"];\r\n      let USL=nextProps.targetMeasure[\"USL\"];\r\n      let value_target=nextProps.targetMeasure[\"value\"];\r\n      //Make sure the data object is the same, don't change it/ you gonna set the data object to chart again\r\n      this.state.chartOpt.data.labels=[];\r\n      this.state.chartOpt.data.datasets.forEach((datInfo)=>{\r\n          datInfo.data=[];\r\n          datInfo.pointBackgroundColor=[];\r\n      });\r\n      let length = nextProps.inspectionRecGroup.length;\r\n      if(length===0)return;\r\n      //let newTime = nextProps.reportArray[length-1].time_ms;\r\n      this.state.chartOpt.options.title.text=nextProps.targetMeasure.name;\r\n\r\n      nextProps.inspectionRecGroup\r\n        .reduce((sumG,recG)=>sumG.concat(recG.group),[])//make [{group:[a,b]},{group:[c,d]}] => [a,b,c,d...]\r\n        .reduce((acc_data,rep,idx)=>{\r\n          //acc_data.labels.push(rep.time_ms);\r\n          if(nextProps.xAxisRange!==undefined)\r\n          {\r\n            if(nextProps.xAxisRange[0]>rep.time_ms || \r\n              nextProps.xAxisRange[1]<rep.time_ms)return acc_data;\r\n          }\r\n\r\n          let measureObj = rep.judgeReports.find((jrep)=>jrep.id===nextProps.targetMeasure.id);\r\n\r\n\r\n          let measureValue=measureObj.value;\r\n          let pointColor=undefined;\r\n          switch(measureObj.status)\r\n          {\r\n            case INSPECTION_STATUS.SUCCESS:\r\n              pointColor=\"rgba(0,255,200,0.2)\";\r\n            break;\r\n            case INSPECTION_STATUS.FAILURE:\r\n              pointColor=\"rgba(255,0,200,0.2)\";\r\n            break;\r\n            case INSPECTION_STATUS.NA:\r\n              pointColor=\"#000000\";\r\n              measureValue=value_target;\r\n            break;\r\n          }\r\n          \r\n          let val={\r\n            x:new Date(rep.time_ms).toString(),\r\n            y:measureValue,\r\n          };\r\n\r\n\r\n          acc_data.datasets[0].pointBackgroundColor.push(pointColor);\r\n          //TODO:for now there is only one data set in one chart\r\n          acc_data.datasets[0].data.push(val);\r\n          return acc_data;\r\n      }, this.state.chartOpt.data );\r\n\r\n      let measureInfo=nextProps.targetMeasure;\r\n\r\n      nextProps.inspectionRecGroup.reduce((acc_data,repG,idx)=>{\r\n        let this_id_stat = repG.stat.\r\n          find((st)=>st.id===nextProps.targetMeasure.id);\r\n        \r\n        let value =this_id_stat.mean;\r\n        let time = repG.group.reduce((sum,rep)=>sum+rep.time_ms,0)/repG.group.length;\r\n        if(nextProps.xAxisRange!==undefined)\r\n        {\r\n          if(nextProps.xAxisRange[0]>time || \r\n            nextProps.xAxisRange[1]<time)return acc_data;\r\n        }\r\n        acc_data.labels.push(new Date(time));\r\n        let pointColor=\"rgba(0,255,0,1)\";\r\n        let val={\r\n          x:new Date(time).toString(),\r\n          y:value,\r\n          data:repG,\r\n          stat:this_id_stat\r\n        };\r\n\r\n\r\n        acc_data.datasets[1].pointBackgroundColor.push(pointColor);\r\n        //TODO:for now there is only one data set in one chart\r\n        acc_data.datasets[1].data.push(val);\r\n        return acc_data;\r\n    }, this.state.chartOpt.data );\r\n\r\n\r\n      let annotationTargets=this.props.anotationTargets;\r\n      if(annotationTargets===undefined)\r\n      {\r\n          annotationTargets = this.default_annotationTargets\r\n      }\r\n\r\n      this.state.chartOpt.options.annotation.annotations = \r\n          annotationTargets.map((annotationTar) => {\r\n          \r\n              let val = nextProps.targetMeasure[annotationTar.type];\r\n              return ({\r\n                  type: 'line',\r\n                  mode: 'horizontal',\r\n                  scaleID: 'y-axis-0',\r\n                  value: val,\r\n                  borderColor: annotationTar.color,\r\n                  borderWidth: 4,\r\n                  borderDash: [12, 12],\r\n                  label: {\r\n                      position: \"right\",\r\n                      enabled: true,\r\n                      content: annotationTar.type+\":\"+val\r\n                  },\r\n                  onMouseover: function (e) {\r\n                    document.getElementById(\"info\").innerHTML = 'whatever';\r\n                  },\r\n              });\r\n          });\r\n      \r\n          this.state.chartOpt.options.tooltips={\r\n            callbacks: {\r\n              title: function(tooltipItem, data) {\r\n                let datasetIndex = tooltipItem[0].datasetIndex;\r\n                let index = tooltipItem[0].index;\r\n                \r\n                return data.datasets[datasetIndex].data[index].y\r\n                return data['labels'][tooltipItem[0]['index']];\r\n              },\r\n              label: function(tooltipItem, data) {\r\n\r\n                let datasetIndex = tooltipItem.datasetIndex;\r\n                let index = tooltipItem.index;\r\n                let dataOnTip=data.datasets[datasetIndex].data[index];\r\n                let stat = dataOnTip.stat;\r\n                if(stat==undefined)return dataOnTip.x;\r\n\r\n                let groupSize = dataOnTip.data.group.length;\r\n                if(groupSize==0)return dataOnTip.x;\r\n                let str_arr=[\r\n                  moment(dataOnTip.data.group[0].time_ms).format(\"YYYY/MM/DD , h:mm:ss a\"),\r\n                  moment(dataOnTip.data.group[groupSize-1].time_ms).format(\"YYYY/MM/DD , h:mm:ss a\")\r\n                ];\r\n\r\n\r\n                let str = Object.keys(stat).map(key=>key+\":\"+\r\n                  ((stat[key]!=null)?stat[key].toFixed(4):\"NULL\")\r\n                );\r\n                str_arr = str_arr.concat(str);\r\n                if(dataOnTip.data.group!==undefined)\r\n                  str_arr.push(\"count:\"+dataOnTip.data.group.length);\r\n                return str_arr;\r\n\r\n\r\n              },\r\n              afterLabel: function(tooltipItem, data) {\r\n                return \"\";\r\n\r\n              }\r\n            },\r\n            backgroundColor: '#FFF',\r\n            titleFontSize: 16,\r\n            titleFontColor: '#0066ff',\r\n            bodyFontColor: '#000',\r\n            bodyFontSize: 14,\r\n            displayColors: false\r\n          }\r\n\r\n\r\n      if(LSL!=0 || USL!=0 || value_target!=0)\r\n      {\r\n        this.state.chartOpt.options.scales.yAxes[0].ticks={\r\n          min:1.2*(LSL-value_target)+value_target,\r\n          max:1.2*(USL-value_target)+value_target,\r\n        };\r\n      }\r\n      else\r\n      {\r\n\r\n      }\r\n\r\n\r\n      if(this.charObj!==undefined)    \r\n        this.charObj.update();\r\n      //console.log(this.state.chartOpt.options.scales);\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n      var ctx = document.getElementById(this.divID).getContext(\"2d\");\r\n\r\n      this.charObj = new Chart(ctx, this.state.chartOpt);\r\n      this.PropsUpdate(this.props);\r\n  }\r\n\r\n  render() {\r\n    return <div className={this.props.className} style={this.props.style}> \r\n        <canvas id={this.divID}  style={{height: \"100%\"}} className={this.props.className}/>\r\n    </div>\r\n  }\r\n\r\n}\r\n\r\nfunction Date_addDay(date,addDays)\r\n{\r\n  if( date===undefined)date=new Date();\r\n\r\n  return date.setDate(date.getDate() + addDays);\r\n}\r\n\r\nclass InspRecStream\r\n{\r\n  constructor(){\r\n    this.reset();\r\n    this.newFeedCallBack=(newStream,fullStream)=>console.log(\"newFeedCallBack=>\",newStream,fullStream);\r\n    this.liveFeedMode=false;\r\n  }\r\n  \r\n  resetStreamInfo()\r\n  {\r\n    this.rec=[];\r\n    this.liveFeedInterval=10000;\r\n    this.passiveQueryRange=[];\r\n    this.liveQueryRange=[];\r\n    if(this.timeoutHDL!==undefined)\r\n    {\r\n      clearTimeout(this.timeoutHDL);\r\n    }\r\n    this.timeoutHDL=undefined;\r\n  }\r\n  reset()\r\n  {\r\n    this.defFile=undefined;\r\n    this.resetStreamInfo();\r\n  }\r\n\r\n  setDefFile(defFile)\r\n  {\r\n    this.resetStreamInfo();\r\n    this.defFile=JSON.parse(JSON.stringify(defFile));\r\n    console.log(\"setDefFile=\",defFile);\r\n  }\r\n\r\n  newStreamFeed(inspectionRec)\r\n  {\r\n    inspectionRec.sort(function(a, b) {\r\n      return a.time_ms - b.time_ms;\r\n    })\r\n\r\n    if(this.rec.length>0)\r\n    {\r\n      let lastMsInRec = this.rec[this.rec.length-1].time_ms;\r\n      let recAfterLast = inspectionRec.filter((srec)=>srec.time_ms>lastMsInRec);\r\n      let concatArr = this.rec.concat(recAfterLast);\r\n      console.log( this.rec.length,inspectionRec.length,concatArr.length);\r\n      \r\n      this.rec = concatArr;\r\n\r\n    }\r\n    else\r\n    {\r\n      this.rec = inspectionRec;\r\n    }\r\n    this.newFeedCallBack(inspectionRec,this.rec);\r\n  }\r\n  setLiveFeedMode(enable){\r\n    console.log(enable);\r\n    if(this.rec.length<0)\r\n    {\r\n      enable=false;\r\n    }\r\n\r\n    console.log(this.rec);\r\n    if(enable)\r\n    {\r\n      \r\n      if(this.timeoutHDL==undefined)\r\n      {\r\n        this.liveQueryInspRec();\r\n      }\r\n    }\r\n    else\r\n    {\r\n      if(this.timeoutHDL!==undefined)\r\n      {\r\n        clearTimeout(this.timeoutHDL);\r\n        this.timeoutHDL=undefined;\r\n      }\r\n    }\r\n    return this.liveFeedMode=enable;\r\n  }\r\n\r\n  liveQueryInspRec(timeRange,maxResults)\r\n  {\r\n    if(timeRange==undefined)\r\n    {\r\n      if(this.rec.length>0)\r\n      {\r\n        let lastMsInRec = this.rec[this.rec.length-1].time_ms;\r\n        timeRange=[moment(lastMsInRec)._d.getTime(), moment(Date_addDay(new Date(),1))._d.getTime()];\r\n        console.log(moment(lastMsInRec));\r\n      }\r\n      else\r\n      {\r\n        console.log(\"No existed rec to do live query\");\r\n        \r\n        this.timeoutHDL =undefined;\r\n        return false;\r\n      }\r\n    }\r\n    if(maxResults==undefined)\r\n    {\r\n      maxResults=10;\r\n    }\r\n    console.log(\"timeRange=\"+timeRange);\r\n    DB_Query.inspectionQuery(this.defFile.featureSet_sha1,timeRange[0],timeRange[1],maxResults)\r\n    .then((queryResult)=>{\r\n      let inspectionRec = queryResult.map(res=>res.InspectionData[0]);\r\n      this.newStreamFeed(inspectionRec);\r\n      if(this.liveFeedMode)\r\n      {\r\n        this.timeoutHDL = \r\n          setTimeout(()=>this.liveQueryInspRec(),this.liveFeedInterval);\r\n      }\r\n      else\r\n      {\r\n        this.timeoutHDL =undefined;\r\n      }\r\n      \r\n    })\r\n    .catch((e)=>{\r\n      console.log(e);\r\n    });\r\n    return true;\r\n  }\r\n  queryInspRec(timeRange=[moment(Date_addDay(new Date(),-7)), moment(Date_addDay(new Date(),1))])\r\n  {\r\n    if(this.defFile===undefined)return false;\r\n    this.passiveQueryRange = timeRange;\r\n\r\n    //this.liveFeedMode =(moment().isBefore(timeRange[1]));\r\n    if(!this.liveFeedMode)\r\n    {\r\n      this.resetStreamInfo();\r\n    }\r\n    return this.liveQueryInspRec(timeRange,10000000);\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nclass APP_ANALYSIS_MODE extends React.Component{\r\n\r\n\r\n  componentDidMount()\r\n  {\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.ec_canvas = null;\r\n    this.state={\r\n      defFileSearchName:\"\",\r\n      dateRange:[moment(Date_addDay(new Date(),-7*3)), moment(Date_addDay(new Date(),1))],\r\n      displayRange:[moment(0), moment(Date_addDay(new Date(),1))],\r\n      inspectionRec:[],\r\n        inspectionRec_TagFiltered:[],\r\n      inspectionRecGroup:[],\r\n      groupInterval:10*60*1000,//10 mins\r\n      liveFeedMode:false\r\n    };\r\n    this.recStream=new InspRecStream();\r\n    //this.state.inspectionRec=dbInspectionQuery;\r\n    //this.props.defFile=defFile;\r\n\r\n//let IRG=InspectionRecordGrouping(dbInspectionQuery);\r\n//console.log(IRG,defFile);\r\n  }\r\n  \r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if(nextProps.defFile!==this.props.defFile)\r\n    {\r\n      this.recStream.setDefFile(nextProps.defFile);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  stateUpdate(obj) {\r\n    return this.setState({...this.state,...obj});\r\n  }\r\n  liveFeedMode_ctrl(enable=!this.state.liveFeedMode) {\r\n    //console.log(enable);\r\n    enable = this.recStream.setLiveFeedMode(enable);\r\n    return this.stateUpdate({liveFeedMode:enable});\r\n  }\r\n\r\n\r\n  render() {\r\n    if(this.props.defFile===undefined)return null;\r\n    let menu_height=\"HXA\";//auto\r\n    let MenuSet=[];\r\n    //if()\r\n    /*MenuSet=this.state.dateRange.reduce((menu,date,idx)=>{\r\n      menu.push(<BASE_COM.IconButton\r\n        dict={EC_zh_TW}\r\n        key={\"<\"+idx}\r\n        addClass=\"layout black vbox\"\r\n        text={date._d.getTime()} />);\r\n      return menu;\r\n    },MenuSet);*/\r\n    let menuStyle={\r\n      top:\"0px\",\r\n      width:\"100px\"\r\n    }\r\n\r\n    let dateRangeReady = \r\n      (this.state.dateRange.length===2) &&\r\n      (this.state.dateRange.reduce(\r\n        (isReady,date)=> \r\n          ( isReady) && \r\n          ( date._d !==undefined) && \r\n          ( date._d.getTime !==undefined)\r\n      ,true));\r\n\r\n    let dateRange=this.state.dateRange.map(dr=>dr._d);\r\n    let DefFileHash = this.props.DefFileHash;\r\n    let DefFileName = this.props.DefFileName;\r\n    let defFileReady = \r\n      isString(this.props.DefFileHash)&&\r\n      this.props.DefFileHash.length>5;\r\n\r\n    const dateFormat = 'YYYY/MM/DD';\r\n    console.log( this.props.defFile);\r\n    let measureList = this.props.defFile.featureSet[0].features.filter(feature=>feature.type===\"measure\");\r\n    \r\n    \r\n    console.log(this.props.defFile);\r\n    document.title = this.props.defFile.name; \r\n    let HEADER=<Typography>\r\n      <Title>{this.props.defFile.name}</Title>\r\n    </Typography>;\r\n    \r\n    let graphCtrlUI=null;\r\n\r\n    if(this.state.inspectionRec.length>0)\r\n    {    \r\n      graphCtrlUI = [\r\n        <Slider range \r\n          min={this.state.inspectionRec[0].time_ms-1000}\r\n          max={this.state.inspectionRec[this.state.inspectionRec.length-1].time_ms+1000}\r\n          defaultValue={\r\n              [this.state.inspectionRec[0].time_ms-1000, \r\n              this.state.inspectionRec[this.state.inspectionRec.length-1].time_ms+1000]} \r\n          step={1000*60*5}\r\n          tipFormatter={(time)=>new Date(time).toString()}\r\n          onChange={(data)=>this.stateUpdate({displayRange:data})}\r\n        />,\r\n        <Checkbox checked={this.state.liveFeedMode} onChange={(ev)=>this.liveFeedMode_ctrl(ev.target.checked)}>LIVE</Checkbox>,\r\n        <TimePicker defaultValue={moment('0:30', 'HH:mm')} format={'HH:mm'} minuteStep={5} allowClear={false} \r\n          onChange={(t)=>\r\n          {\r\n            if(t===null)return;\r\n            console.log(t);\r\n            let mo=t._d.getTime();\r\n            let day_base=moment(t._d).startOf('date')._d.getTime();\r\n            console.log(mo-day_base)\r\n            let groupInterval = mo-day_base;\r\n            console.log(\"TimePicker\",this.state.inspectionRec_TagFiltered);\r\n            let inspectionRecGroup =\r\n              inspectionRecGroup_Generate(this.state.inspectionRec_TagFiltered,groupInterval,measureList);\r\n            this.stateUpdate({inspectionRecGroup,groupInterval});\r\n        }}/>\r\n      ]\r\n\r\n    }\r\n\r\n    \r\n    let graphUI=null;\r\n    graphUI =\r\n    <div  style={{width:\"95%\"}}> \r\n      {measureList.map(m=>\r\n      <ControlChart inspectionRecGroup={this.state.inspectionRecGroup} \r\n        style={{height:\"400px\"}}\r\n        key={m.name+\"_\"}\r\n        targetMeasure={m} \r\n        xAxisRange={this.state.displayRange}/>)}\r\n    </div>\r\n    \r\n    \r\n    return(\r\n    <div className=\"HXF\">\r\n      \r\n      <div className=\"overlayCon s overlayCon width12 HXF\">\r\n        \r\n        {HEADER}\r\n        <div className=\"s height12\">\r\n\r\n          <RangePicker key=\"RP\"\r\n            defaultValue={this.state.dateRange} \r\n            onChange={(date)=>this.stateUpdate({dateRange:date})}/>\r\n\r\n          <Button type=\"primary\" icon=\"search\" disabled={!dateRangeReady || !defFileReady} onClick={\r\n            ()=>{\r\n              this.recStream.newFeedCallBack=\r\n                (newStream,fullStream)=>{\r\n                  if(newStream.length>0)\r\n                  {\r\n                    let latestTime=newStream[newStream.length-1].time_ms;\r\n                    let inspectionRecGroup =\r\n                      inspectionRecGroup_Generate(fullStream,this.state.groupInterval,measureList);\r\n                    this.stateUpdate({\r\n                      inspectionRec:fullStream,\r\n                      inspectionRecGroup:inspectionRecGroup,\r\n                        inspectionRec_TagFiltered:fullStream,\r\n                      displayRange:[this.state.displayRange[0],moment(latestTime+1000)]\r\n                    });\r\n\r\n                    //console.log(\"fullStream=\",fullStream);\r\n                  }\r\n                }\r\n              this.recStream.queryInspRec(dateRange);\r\n            }} />\r\n            \r\n          <Button type=\"primary\" icon=\"download\" disabled={!dateRangeReady || !defFileReady || this.state.inspectionRec.length===0} \r\n          onClick={\r\n            ()=>{\r\n              let csv_arr= convertInspInfo2CSV(measureList,this.state.inspectionRecGroup);\r\n              let str = csv_arr.join('');\r\n              //copyStringToClipboard(str);\r\n              downloadString(csv_arr.join(''), \"text/csv\", DefFileName+\"_\"+YYYYMMDD(new Date())+\".csv\");\r\n            }} />\r\n            <hr style={{width:\"80%\"}}/>\r\n            <RelatedUsageInfo fullStream2Tag={this.state.inspectionRec}\r\n              onTagStateChange={(tagState)=>{\r\n\r\n                  let selectedTrueTags = Object.keys(tagState).filter(key=>tagState[key]);\r\n\r\n                  var filterTagsBoolean = this.state.inspectionRec.filter(function(item, index, array){\r\n                      let tArr=item.tag.split(\",\");\r\n                      return selectedTrueTags.some((item)=>tArr.includes(item));\r\n                      //return selectedTrueTags.every((item)=>tArr.includes(item));\r\n                  });\r\n\r\n\r\n                  let inspectionRecGroup =\r\n                      inspectionRecGroup_Generate(filterTagsBoolean,this.state.groupInterval,measureList);\r\n                  //console.log(filterTagsBoolean,inspectionRecGroup);\r\n                  this.stateUpdate({\r\n                      inspectionRecGroup:inspectionRecGroup,\r\n                      inspectionRec_TagFiltered:filterTagsBoolean\r\n                  });\r\n\r\n\r\n              }}/>\r\n            <hr style={{width:\"80%\"}}/>\r\n        </div>\r\n\r\n        {graphCtrlUI}\r\n        {graphUI}\r\n        <div key=\"k1\" className={\"s overlay scroll MenuAnim \" + menu_height} style={menuStyle}>\r\n          {MenuSet}\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n    );\r\n  }\r\n}\r\nfunction updateChart(fullStream2Tag,tagName,checked){\r\n    console.log(\"updateChart=\",tagName,checked);\r\n    // this.inspectionRecGroup_Generate(fullStream2Tag,this.state.groupInterval,measureList);\r\n\r\n}\r\nclass MyTag extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checked: true\r\n\r\n        };\r\n        console.log(\"New\");\r\n        // this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log(\"shouldComponentUpdate\",nextProps,nextState);\r\n        if(nextProps.tagName===this.props.tagName)\r\n        {\r\n            updateChart(nextProps.fullStream2Tag,nextProps.tagName,nextState.checked);\r\n        }\r\n        return true;\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        //console.log(nextProps);\r\n        // if(this.props===nextProps)return;\r\n        //this.setState({...this.state,...nextProps});\r\n        //console.log(\"componentWillReceiveProps\",nextProps);\r\n    }\r\n    handleChange2 = checked => {\r\n        this.setState({ checked });\r\n        console.log(\"handleChange=\",this.props.tagName,checked);\r\n        //updateChart(this.props.key,checked);\r\n        this.props.handleChange(checked);\r\n    };\r\n\r\n    appendTagtitle(props) {\r\n        return <h1>{props.name}</h1>;\r\n    }\r\n\r\n    render() {\r\n        console.log(\"handleChange=\",this.props.tagName,this.state.checked);\r\n        return (\r\n            <CheckableTag {...this.props} checked={this.state.checked} onChange={this.handleChange2} />\r\n        );\r\n    }\r\n}\r\nclass RelatedUsageInfo extends React.Component{\r\n//http://hyv.decade.tw:8080/query/deffile?name=BOS-LT13BH3421&\r\n// http://localhost:3000/hyvision_monitor/0.0.0/?v=0&hash=9fa42a5e990e4da632070e95daf14ec50de8a112&name=BOS-LT13BH3421\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            tags:{\r\n                //\"name\":false\r\n            }\r\n            // DefFileInfo:[],\r\n        };\r\n\r\n        this.checkInspectionRec=undefined;\r\n        // this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(this.checkInspectionRec===nextProps.fullStream2Tag)\r\n        {\r\n            return;\r\n        }\r\n        this.checkInspectionRec=nextProps.fullStream2Tag;\r\n        console.log(\"props.fullStream2Tag\",nextProps.fullStream2Tag);\r\n        const uniSet2 = new Set();\r\n        // uniSet2.add(\"judgeReport Tag\");\r\n        if(nextProps.fullStream2Tag.length>0){\r\n            nextProps.fullStream2Tag.forEach(function(e,i,a){\r\n                //console.log(\"e.tag=\",e.tag);\r\n                let tagSplit=e.tag.split(\",\");\r\n                //console.log(\"e.tag.split=\",e.tagSplit);\r\n                tagSplit.forEach(function(e2,i2,a2){\r\n                    //console.log(\"forEach2\",e2);\r\n                    if(e2.length!=0)\r\n                        uniSet2.add(e2);\r\n                });\r\n            });\r\n            let tags2={};\r\n            Array.from(uniSet2).forEach(function(key){\r\n                tags2[key]=true;\r\n            });\r\n\r\n            this.setState( {tags:tags2});\r\n\r\n            this.props.onTagStateChange(tags2);\r\n        }\r\n    }\r\n    handleTagChange(){\r\n        console.log(\"handleTagChange\");\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state)\r\n    {\r\n        console.log(\"props.fullStream2Tag\",props.fullStream2Tag);\r\n        const uniSet2 = new Set();\r\n        // uniSet2.add(\"judgeReport Tag\");\r\n        if(props.fullStream2Tag.length>0){\r\n            props.fullStream2Tag.forEach(function(e,i,a){\r\n                //console.log(\"e.tag=\",e.tag);\r\n                let tagSplit=e.tag.split(\",\");\r\n                //console.log(\"e.tag.split=\",e.tagSplit);\r\n                tagSplit.forEach(function(e2,i2,a2){\r\n                    //console.log(\"forEach2\",e2);\r\n                    if(e2.length!=0)\r\n                        uniSet2.add(e2);\r\n                });\r\n            });\r\n            let tags2={};\r\n            Array.from(uniSet2).forEach(function(key){\r\n                tags2[key]=true;\r\n            });\r\n\r\n            return {tags:tags2};\r\n\r\n        }\r\n        return null;\r\n    }\r\n\r\n    handleTagChange = (key,onoff) =>\r\n    {\r\n        let tags2={...this.state.tags};\r\n        tags2[key]=onoff;\r\n        this.props.onTagStateChange(tags2);\r\n        this.setState( {tags:tags2});\r\n    }\r\n\r\n    render() {\r\n        function MyConstructor(data, transport) {\r\n            this.data = data;\r\n            transport.on('data', ( function () {\r\n                alert(this.data);\r\n            }).bind(this) );\r\n        }\r\n        console.log(\"this.state.tags\",this.state.tags);\r\n\r\n        return (\r\n            <div>\r\n                <h6 style={{ marginRight: 8, display: 'inline' }}>Uni Categories:</h6>\r\n                {Object.keys(this.state.tags).map((key, index, array)=>{\r\n\r\n                    //this.state.tags[key]\r\n                    console.log(\"Array.from(uniSet2).map=\",index+\"=\"+key);\r\n                    return (\r\n                        <MyTag tagIndex={index} tagName={key} key={key} handleChange={\r\n                            (onoff)=>this.handleTagChange(key,onoff)}>\r\n                            {key}\r\n                        </MyTag>\r\n                    );\r\n                })\r\n                }\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n// function getDef(q_info) {\r\n//     let result\r\n//     console.log(\"q_info\",q_info);\r\n//     DB_Query.defFileQuery(q_info.name,q_info.hash).\r\n//     then((q)=>{\r\n//         if(q.length>0){\r\n//\r\n//             result=q;\r\n//         }else{\r\n//             console.log(\"[X]No result.\");\r\n//         }\r\n//\r\n//     });\r\n//     return result;\r\n// }\r\nexport default APP_ANALYSIS_MODE;","import React , { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport APP_ANALYSIS_MODE from \"./AnalysisUI\";\nimport * as DB_Query from './UTIL/DB_Query';\nimport  Modal  from 'antd/lib/modal';\nimport QrScanner from 'qr-scanner';\nimport jsonp from 'jsonp';\n\nimport Input from 'antd/lib/input';\nimport Table from 'antd/lib/table';\nQrScanner.WORKER_PATH = \"./qr-scanner-worker.min.js\";\n\nclass WebCam_SQScan extends React.Component{\n\n  constructor(props) {\n    super(props);\n\n  }\n   \n  componentDidMount() {\n    let video =this.refs.QR_WebCam;\n    \n    QrScanner.hasCamera().then(hasCamera => console.log(hasCamera));\n    this.qrScanner = new QrScanner(video, this.props.onScanResult);\n    \n    this.qrScanner.start();\n    console.log(this.qrScanner);\n  }\n  componentWillUnmount() {\n    this.qrScanner.destroy();\n    this.qrScanner = undefined;\n  }\n\n  render() {\n    return (\n      <video ref=\"QR_WebCam\" className={this.props.className} style={this.props.style} muted playsInline/>\n    );\n  }\n}\n\nfunction getAllUrlParams(url) {\n\n  // get query string from url (optional) or window\n  var queryString = url ? url.split('?')[1] : window.location.search.slice(1);\n\n  queryString = decodeURI(queryString);\n  // we'll store the parameters here\n  var obj = {};\n\n  // if query string exists\n  if (queryString) {\n\n    // stuff after # is not part of query string, so get rid of it\n    queryString = queryString.split('#')[0];\n\n    // split our query string into its component parts\n    var arr = queryString.split('&');\n\n    for (var i = 0; i < arr.length; i++) {\n      // separate the keys and the values\n      var a = arr[i].split('=');\n\n      // set parameter name and value (use 'true' if empty)\n      var paramName = a[0];\n      var paramValue = typeof (a[1]) === 'undefined' ? true : a[1];\n\n      // (optional) keep case consistent\n      paramName = paramName.toLowerCase();\n      //if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();\n\n      // if the paramName ends with square brackets, e.g. colors[] or colors[2]\n      if (paramName.match(/\\[(\\d+)?\\]$/)) {\n\n        // create key if it doesn't exist\n        var key = paramName.replace(/\\[(\\d+)?\\]/, '');\n        if (!obj[key]) obj[key] = [];\n\n        // if it's an indexed array e.g. colors[2]\n        if (paramName.match(/\\[\\d+\\]$/)) {\n          // get the index value and add the entry at the appropriate position\n          var index = /\\[(\\d+)\\]/.exec(paramName)[1];\n          obj[key][index] = paramValue;\n        } else {\n          // otherwise add the value to the end of the array\n          obj[key].push(paramValue);\n        }\n      } else {\n        // we're dealing with a string\n        if (!obj[paramName]) {\n          // if it doesn't exist, create property\n          obj[paramName] = paramValue;\n        } else if (obj[paramName] && typeof obj[paramName] === 'string'){\n          // if property does exist and it's a string, convert it to an array\n          obj[paramName] = [obj[paramName]];\n          obj[paramName].push(paramValue);\n        } else {\n          // otherwise add the property\n          obj[paramName].push(paramValue);\n        }\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction isString(val){\n  return (typeof val === 'string' || val instanceof String)\n}\n\nfunction pjsonp(url,timeout=5000,timeoutErrMsg=\"TIMEOUT\")\n{\n  return new Promise((res,rej)=>{\n    let timeoutFlag=undefined;\n    if(timeout>0)\n    {\n      timeoutFlag = setTimeout(()=>{\n        timeoutFlag=undefined;\n        rej(timeoutErrMsg)\n      },timeout);\n    }\n\n    jsonp(url,  (err,data)=>{\n      clearTimeout(timeoutFlag);\n      if(err === null)\n          res(data);\n      else\n          rej(err)\n    });\n  });\n}\n\nfunction fetchDeffileInfo(name)\n{\n  let defFileData=undefined;\n  \n  return new Promise((res,rej)=>{\n    let url='http://hyv.decade.tw:8080/query/deffile?name='+name+'&limit=1000'\n    \n    pjsonp(url,null).then((data)=>{\n\n      \n      let url='http://hyv.decade.tw:8080/query/inspection?';\n      let hashArr = data.map(srec=>srec.DefineFile.featureSet_sha1)\n      hashArr = [...new Set(hashArr)];\n\n      defFileData=hashArr.map((hash)=>{\n        let name = data.filter((defF)=>defF.DefineFile.featureSet_sha1==hash)\n          .map(defF=>defF.DefineFile.name)\n        return {hash,name}\n      }).map(defFInfo=>{\n        defFInfo.name=[...new Set(defFInfo.name)];\n        return defFInfo;\n      });\n      let hashRegx = hashArr.reduce((acc,hash)=>acc===undefined?hash:acc+\"|\"+hash,undefined)\n      \n      url+='tStart=0&tEnd=2581663256894&limit=999999999&';\n      url+='subFeatureDefSha1='+hashRegx+'&'\n      url+='projection={\"_id\":0,\"InspectionData.subFeatureDefSha1\":1,\"InspectionData.time_ms\":1,\"InspectionData.tag\":1}&'\n      url+='agg=[{\"$group\":{\"_id\":\"$InspectionData.subFeatureDefSha1\",'+\n      '\"count\": {\"$sum\":1},'+\n      '\"time_start\": {\"$min\":\"$InspectionData.time_ms\"},'+\n      '\"time_end\": {\"$max\":\"$InspectionData.time_ms\"},'+\n      '\"tags\": {\"$addToSet\":\"$InspectionData.tag\"}'+\n      '}}]';\n\n      return pjsonp(url,null)\n\n    }).then((dataSet)=>{\n\n      let dataSet_Formatted=\n      dataSet.map(data=>{\n        data._id=data._id[0]\n        return data\n      }).reduce((acc,data)=>{\n        let id=data._id;\n        if(acc[id]===undefined)\n        {\n          acc[id]=data;\n          delete acc[id]._id; \n        }\n        else\n        {\n          acc[id].count+=data.count;\n          acc[id].time_start=[Math.min(acc[id].time_start[0],data.time_start[0])];\n          acc[id].time_end=[Math.max(acc[id].time_end[0],data.time_end[0])];\n        }\n        return acc;\n      },{})\n\n      //final aggregation\n      defFileData.forEach((defF)=>{\n        let tar = dataSet_Formatted[defF.hash];\n        if(tar!==undefined)\n        {\n          Object.assign(defF, tar)\n        }\n      })\n      res(defFileData)\n    }).catch((err)=>{\n      rej(err);\n    })\n  });\n}\nfunction getUrlPath()\n{\n  return window.location.href.substring(window.location.protocol.length).split('?')[0]\n}\n\nfunction datePrintSimple(date) {\n  var mm = date.getMonth() + 1; // getMonth() is zero-based\n  var dd = date.getDate();\n\n  return [date.getFullYear(),\n          (mm>9 ? '' : '0') + mm,\n          (dd>9 ? '' : '0') + dd\n         ].join('/');\n};\nfunction XQueryInput({ onQueryRes,onQueryRej,placeholder,defaultValue }) {\n  const [fetchedRecord, setFetchedRecord] = useState([]);\n  let searchBox=<Input placeholder={placeholder} defaultValue={defaultValue}\n    onPressEnter={(e)=>{\n    console.log(e.target.value)\n    setFetchedRecord();\n    fetchDeffileInfo(e.target.value).\n      then((res)=>{\n\n        setFetchedRecord(res);\n        onQueryRes(res);\n      }).catch((e)=>{\n        setFetchedRecord([]);\n        if(onQueryRej!==undefined)\n          onQueryRej(e)\n      });\n  }} ></Input>\n  let fetchBtn=fetchedRecord===undefined?null:\n  <div>\n\n  </div>\n\n\n  let displayInfo=null\n  if(fetchedRecord!==undefined)\n  {\n    // displayInfo = fetchedRecord.map(fetchRec=>{\n\n    //   let text = fetchRec.name+\" \";\n    //   if(fetchRec.count!==undefined)\n    //   {\n    //     text+=\",count:\"+fetchRec.count;\n    //     var dateStart = new Date(fetchRec.time_start[0]);\n    //     var dateEnd = new Date(fetchRec.time_end[0]);\n    //     text+=\",\"+datePrintSimple(dateStart)+\"~\"+datePrintSimple(dateEnd);\n    //     text+=\",tags:\"+fetchRec.tags;\n    //   }\n\n    //   return [\n    //     <a href={getUrlPath()+\"?v=0&hash=\"+fetchRec.hash}>{text}</a>,\n    //     <br/>]})\n    const columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        render: fetchRec => <a href={getUrlPath()+\"?v=0&hash=\"+fetchRec.hash}>{fetchRec.name}</a>,\n      },\n      {\n        title: 'count',\n        dataIndex: 'count',\n        key: 'count',\n        sorter: (a, b) => a.count - b.count,\n      },\n      {\n        title: 'Date_Start',\n        dataIndex: 'Date_Start',\n        key: 'Date_Start',\n        render: milliSec => <div>{new Date(milliSec)+\"\"}</div>,\n        sorter: (a, b) => a.Date_Start - b.Date_Start,\n      },\n      {\n        title: 'Date_End',\n        dataIndex: 'Date_End',\n        key: 'Date_End',\n        render: milliSec => <div>{new Date(milliSec)+\"\"}</div>,\n        sorter: (a, b) => a.Date_End - b.Date_End,\n      },\n      {\n        title: 'Tags',\n        dataIndex: 'Tags',\n        key: 'Tags',\n      }]\n\n      let dataSource = fetchedRecord.filter(fetchRec=>fetchRec.count!==undefined).map(fetchRec=>{\n        let retSrc={\n          name:fetchRec\n        }\n        if(fetchRec.count!==undefined)\n        {\n          retSrc.count=fetchRec.count;\n          // var dateStart = new Date(fetchRec.time_start[0]);\n          // var dateEnd = new Date(fetchRec.time_end[0]);\n\n          retSrc.Date_Start=fetchRec.time_start[0];\n          retSrc.Date_End=fetchRec.time_end[0];\n          retSrc.Tags=fetchRec.tags;\n        }\n  \n        return retSrc\n      })\n    console.log(dataSource);\n    displayInfo=<Table columns={columns} dataSource={dataSource} pagination={false}/>;\n  }\n  return (\n\n    <div>\n      {searchBox}\n      {displayInfo}\n    </div>\n  );\n}\n\n\nclass App extends React.Component{\n\n  constructor(props) {\n    super(props);\n\n\n    console.log(getAllUrlParams());\n    this.state={\n      DefFileInfo:undefined,\n      allowQRScan:false\n      //{v: 0, name: \"BOS-LT13BH3421\", hash: \"9fa42a5e990e4da632070e95daf14ec50de8a112\"}\n    }\n  }\n  componentDidMount() {\n\n    let urlParam = getAllUrlParams();\n    if(urlParam.v!==undefined && urlParam.hash!==undefined)\n    {\n      this.onQRScanResult(JSON.stringify(urlParam));\n    }\n    else\n    {\n      this.setState({...this.state,allowQRScan:true});\n    }\n  }\n  \n  onDefFileInfoUpdate(info)\n  {\n    this.setState({...this.state,DefFileInfo:info});\n    console.log(info);\n    DB_Query.defFileQuery(info.name,info.hash).\n      then((q)=>{\n        if(q.length>0)\n          this.setState({...this.state,defFile:q[0].DefineFile});\n        console.log(q)\n      });\n  }\n\n  onQRScanResult(result){\n\n    try {\n      let res_obj=JSON.parse(result);\n      if(isString(res_obj.v))\n      {\n         res_obj.v = Number(res_obj.v);\n      }\n      if(res_obj.v===0 && res_obj.hash!==undefined && res_obj.hash.length>5)\n      {\n        console.log(window.location.protocol);\n        if(window.location.protocol === 'https:')\n        {\n          window.location.href = 'http:' + window.location.href.substring(window.location.protocol.length).split('?')[0]+\n            \"?v=\"+res_obj.v+\"&hash=\"+res_obj.hash;\n          \n          console.log(window.location.href);\n          this.setState({...this.state,allowQRScan:false});\n        }\n        else\n        {\n          this.onDefFileInfoUpdate(res_obj);\n        }\n      }\n    } catch(e) {\n        alert(e); // error in the above string (in this case, yes)!\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        \n        {/* <Modal\n          title={null}\n          visible={this.state.DefFileInfo===undefined}\n          onCancel={this.props.onCancel}\n          onOk={this.props.onOk}\n        >\n          {\n            (this.state.DefFileInfo===undefined && this.state.allowQRScan)?\n              <WebCam_SQScan style={{width:\"100%\",height:\"100%\"}} \n              onScanResult={this.onQRScanResult.bind(this)}/>:\n              null\n          }\n        </Modal> */}\n        {(this.state.DefFileInfo!==undefined)?\n          <APP_ANALYSIS_MODE \n            DefFileHash={this.state.DefFileInfo.hash} \n            DefFileName={this.state.DefFileInfo.name}\n            defFile={this.state.defFile}/>:\n          \n          <XQueryInput onQueryRes={(res)=>{console.log(res)}} defaultValue=\"3421\" placeholder=\"輸入名稱\"/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// require('./server/apollo_server.js');\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}